ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  20              		.align	1
  21              		.global	MX_FREERTOS_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_FREERTOS_Init:
  27              	.LFB168:
  28              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****  ******************************************************************************
   4:Core/Src/freertos.c ****  * File Name          : freertos.c
   5:Core/Src/freertos.c ****  * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****  ******************************************************************************
   7:Core/Src/freertos.c ****  * @attention
   8:Core/Src/freertos.c ****  *
   9:Core/Src/freertos.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/freertos.c ****  * All rights reserved.
  11:Core/Src/freertos.c ****  *
  12:Core/Src/freertos.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****  * in the root directory of this software component.
  14:Core/Src/freertos.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****  *
  16:Core/Src/freertos.c ****  ******************************************************************************
  17:Core/Src/freertos.c ****  */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/freertos.c **** #include "CO_app_STM32.h"
  28:Core/Src/freertos.c **** #include "OD.h"
  29:Core/Src/freertos.c **** #include "tim.h"
  30:Core/Src/freertos.c **** #include "comment.h"
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 2


  31:Core/Src/freertos.c **** #include "can.h"
  32:Core/Src/freertos.c **** #include "pid.h"
  33:Core/Src/freertos.c **** #include "adc.h"
  34:Core/Src/freertos.c **** #define Virtual_target_angle -20
  35:Core/Src/freertos.c **** #define Timer_ARR 5
  36:Core/Src/freertos.c **** /* USER CODE END Includes */
  37:Core/Src/freertos.c **** 
  38:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  39:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* USER CODE END PTD */
  42:Core/Src/freertos.c **** 
  43:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  44:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* USER CODE END PD */
  47:Core/Src/freertos.c **** 
  48:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  49:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* USER CODE END PM */
  52:Core/Src/freertos.c **** 
  53:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  54:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* USER CODE END Variables */
  57:Core/Src/freertos.c **** /* Definitions for PIDTask */
  58:Core/Src/freertos.c **** osThreadId_t PIDTaskHandle;
  59:Core/Src/freertos.c **** const osThreadAttr_t PIDTask_attributes = {
  60:Core/Src/freertos.c ****     .name = "PIDTask",
  61:Core/Src/freertos.c ****     .stack_size = 128 * 4,
  62:Core/Src/freertos.c ****     .priority = (osPriority_t)osPriorityHigh,
  63:Core/Src/freertos.c **** };
  64:Core/Src/freertos.c **** /* Definitions for canopenTask */
  65:Core/Src/freertos.c **** osThreadId_t canopenTaskHandle;
  66:Core/Src/freertos.c **** const osThreadAttr_t canopenTask_attributes = {
  67:Core/Src/freertos.c ****     .name = "canopenTask",
  68:Core/Src/freertos.c ****     .stack_size = 128 * 4,
  69:Core/Src/freertos.c ****     .priority = (osPriority_t)osPriorityRealtime,
  70:Core/Src/freertos.c **** };
  71:Core/Src/freertos.c **** 
  72:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  73:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  74:Core/Src/freertos.c **** PID_TypeDef TPID;
  75:Core/Src/freertos.c **** volatile double CCR_value = 0;
  76:Core/Src/freertos.c **** volatile double current_voltage = 0;
  77:Core/Src/freertos.c **** volatile double current_angle = 0;
  78:Core/Src/freertos.c **** volatile double db_target_angle = 0;
  79:Core/Src/freertos.c **** 
  80:Core/Src/freertos.c **** bool PID_contorl_lock = false;
  81:Core/Src/freertos.c **** int voltage_counter = 0;
  82:Core/Src/freertos.c **** volatile double previous_voltage = 0;
  83:Core/Src/freertos.c **** volatile double previos_error = 0;
  84:Core/Src/freertos.c **** 
  85:Core/Src/freertos.c **** bool protection_lock = false;
  86:Core/Src/freertos.c **** bool PID_safe_lock = false;
  87:Core/Src/freertos.c **** 
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 3


  88:Core/Src/freertos.c **** void TPDO_tarnsmit(uint8_t status, int16_t angle);
  89:Core/Src/freertos.c **** void analyze_voltage(void);
  90:Core/Src/freertos.c **** void PID_Error_handler(void);
  91:Core/Src/freertos.c **** void CW_CCW_deect(void);
  92:Core/Src/freertos.c **** void PID_init(void);
  93:Core/Src/freertos.c **** void PID_protection(void);
  94:Core/Src/freertos.c **** double abs(double a);
  95:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  96:Core/Src/freertos.c **** 
  97:Core/Src/freertos.c **** void StartPIDTask(void *argument);
  98:Core/Src/freertos.c **** void canopen_task(void *argument);
  99:Core/Src/freertos.c **** 
 100:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c **** /**
 103:Core/Src/freertos.c ****  * @brief  FreeRTOS initialization
 104:Core/Src/freertos.c ****  * @param  None
 105:Core/Src/freertos.c ****  * @retval None
 106:Core/Src/freertos.c ****  */
 107:Core/Src/freertos.c **** void MX_FREERTOS_Init(void)
 108:Core/Src/freertos.c **** {
  29              		.loc 1 108 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
 109:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 110:Core/Src/freertos.c **** 
 111:Core/Src/freertos.c ****   /* USER CODE END Init */
 112:Core/Src/freertos.c **** 
 113:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 114:Core/Src/freertos.c ****   /* add mutexes, ... */
 115:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 116:Core/Src/freertos.c **** 
 117:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 118:Core/Src/freertos.c ****   /* add semaphores, ... */
 119:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 120:Core/Src/freertos.c **** 
 121:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 122:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 123:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 124:Core/Src/freertos.c **** 
 125:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 126:Core/Src/freertos.c ****   /* add queues, ... */
 127:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 128:Core/Src/freertos.c **** 
 129:Core/Src/freertos.c ****   /* Create the thread(s) */
 130:Core/Src/freertos.c ****   /* creation of PIDTask */
 131:Core/Src/freertos.c ****   PIDTaskHandle = osThreadNew(StartPIDTask, NULL, &PIDTask_attributes);
  38              		.loc 1 131 3 view .LVU1
  39              		.loc 1 131 19 is_stmt 0 view .LVU2
  40 0002 074A     		ldr	r2, .L3
  41 0004 0021     		movs	r1, #0
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 4


  42 0006 0748     		ldr	r0, .L3+4
  43 0008 FFF7FEFF 		bl	osThreadNew
  44              	.LVL0:
  45              		.loc 1 131 17 view .LVU3
  46 000c 064B     		ldr	r3, .L3+8
  47 000e 1860     		str	r0, [r3]
 132:Core/Src/freertos.c **** 
 133:Core/Src/freertos.c ****   /* creation of canopenTask */
 134:Core/Src/freertos.c ****   canopenTaskHandle = osThreadNew(canopen_task, NULL, &canopenTask_attributes);
  48              		.loc 1 134 3 is_stmt 1 view .LVU4
  49              		.loc 1 134 23 is_stmt 0 view .LVU5
  50 0010 064A     		ldr	r2, .L3+12
  51 0012 0021     		movs	r1, #0
  52 0014 0648     		ldr	r0, .L3+16
  53 0016 FFF7FEFF 		bl	osThreadNew
  54              	.LVL1:
  55              		.loc 1 134 21 view .LVU6
  56 001a 064B     		ldr	r3, .L3+20
  57 001c 1860     		str	r0, [r3]
 135:Core/Src/freertos.c **** 
 136:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 137:Core/Src/freertos.c ****   /* add threads, ... */
 138:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 139:Core/Src/freertos.c **** 
 140:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 141:Core/Src/freertos.c ****   /* add events, ... */
 142:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 143:Core/Src/freertos.c **** }
  58              		.loc 1 143 1 view .LVU7
  59 001e 08BD     		pop	{r3, pc}
  60              	.L4:
  61              		.align	2
  62              	.L3:
  63 0020 00000000 		.word	.LANCHOR0
  64 0024 00000000 		.word	StartPIDTask
  65 0028 00000000 		.word	.LANCHOR1
  66 002c 00000000 		.word	.LANCHOR2
  67 0030 00000000 		.word	canopen_task
  68 0034 00000000 		.word	.LANCHOR3
  69              		.cfi_endproc
  70              	.LFE168:
  72              		.global	__aeabi_dcmplt
  73              		.section	.text.CW_CCW_deect,"ax",%progbits
  74              		.align	1
  75              		.global	CW_CCW_deect
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  80              	CW_CCW_deect:
  81              	.LFB174:
 144:Core/Src/freertos.c **** 
 145:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartPIDTask */
 146:Core/Src/freertos.c **** /**
 147:Core/Src/freertos.c ****  * @brief  Function implementing the PIDTask thread.
 148:Core/Src/freertos.c ****  * @param  argument: Not used
 149:Core/Src/freertos.c ****  * @retval None
 150:Core/Src/freertos.c ****  */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 5


 151:Core/Src/freertos.c **** /* USER CODE END Header_StartPIDTask */
 152:Core/Src/freertos.c **** void StartPIDTask(void *argument)
 153:Core/Src/freertos.c **** {
 154:Core/Src/freertos.c ****   /* USER CODE BEGIN StartPIDTask */
 155:Core/Src/freertos.c ****   PID_init();
 156:Core/Src/freertos.c ****   /* Infinite loop */
 157:Core/Src/freertos.c ****   for (;;)
 158:Core/Src/freertos.c ****   {
 159:Core/Src/freertos.c ****     while (!PID_contorl_lock)
 160:Core/Src/freertos.c ****     {
 161:Core/Src/freertos.c ****     }
 162:Core/Src/freertos.c ****     analyze_voltage();
 163:Core/Src/freertos.c ****     CW_CCW_deect();
 164:Core/Src/freertos.c ****     PID_Compute(&TPID);
 165:Core/Src/freertos.c ****     CCR_value = abs(CCR_value);
 166:Core/Src/freertos.c ****     PID_protection();
 167:Core/Src/freertos.c ****     if (PID_safe_lock == false)
 168:Core/Src/freertos.c ****     {
 169:Core/Src/freertos.c ****       TIM2->CCR2 = ((int)CCR_value);
 170:Core/Src/freertos.c ****     }
 171:Core/Src/freertos.c ****     else
 172:Core/Src/freertos.c ****     {
 173:Core/Src/freertos.c ****       HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 174:Core/Src/freertos.c ****     }
 175:Core/Src/freertos.c ****     osDelay(100);
 176:Core/Src/freertos.c ****   }
 177:Core/Src/freertos.c ****   /* USER CODE END StartPIDTask */
 178:Core/Src/freertos.c **** }
 179:Core/Src/freertos.c **** 
 180:Core/Src/freertos.c **** /* USER CODE BEGIN Header_canopen_task */
 181:Core/Src/freertos.c **** /**
 182:Core/Src/freertos.c ****  * @brief Function implementing the canopenTask thread.
 183:Core/Src/freertos.c ****  * @param argument: Not used
 184:Core/Src/freertos.c ****  * @retval None
 185:Core/Src/freertos.c ****  */
 186:Core/Src/freertos.c **** /* USER CODE END Header_canopen_task */
 187:Core/Src/freertos.c **** void canopen_task(void *argument)
 188:Core/Src/freertos.c **** {
 189:Core/Src/freertos.c ****   /* USER CODE BEGIN canopen_task */
 190:Core/Src/freertos.c ****   CANopenNodeSTM32 canOpenNodeSTM32;
 191:Core/Src/freertos.c ****   canOpenNodeSTM32.CANHandle = &hcan;
 192:Core/Src/freertos.c ****   canOpenNodeSTM32.HWInitFunction = MX_CAN_Init;
 193:Core/Src/freertos.c ****   canOpenNodeSTM32.timerHandle = &htim17;
 194:Core/Src/freertos.c ****   canOpenNodeSTM32.desiredNodeID = 17;
 195:Core/Src/freertos.c ****   canOpenNodeSTM32.baudrate = 125;
 196:Core/Src/freertos.c ****   canopen_app_init(&canOpenNodeSTM32);
 197:Core/Src/freertos.c ****   int8_t pre_target_angle = OD_PERSIST_COMM.x6001_target_angle;
 198:Core/Src/freertos.c ****   uint8_t pre_target_CW_CCW = OD_PERSIST_COMM.x6004_target_CW_CCW;
 199:Core/Src/freertos.c ****   db_target_angle = OD_PERSIST_COMM.x6001_target_angle;
 200:Core/Src/freertos.c ****   /* Infinite loop */
 201:Core/Src/freertos.c ****   for (;;)
 202:Core/Src/freertos.c ****   {
 203:Core/Src/freertos.c ****     canopen_app_process();
 204:Core/Src/freertos.c ****     if (OD_PERSIST_COMM.x6001_target_angle != pre_target_angle || OD_PERSIST_COMM.x6004_target_CW_C
 205:Core/Src/freertos.c ****     {
 206:Core/Src/freertos.c ****       PID_contorl_lock = true;
 207:Core/Src/freertos.c ****       if (OD_PERSIST_COMM.x6001_target_angle > 40 && OD_PERSIST_COMM.x6004_target_CW_CCW == 0)
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 6


 208:Core/Src/freertos.c ****       {
 209:Core/Src/freertos.c ****         db_target_angle = 35;
 210:Core/Src/freertos.c ****         TPDO_tarnsmit(6, 99);
 211:Core/Src/freertos.c ****       }
 212:Core/Src/freertos.c ****       else if (OD_PERSIST_COMM.x6001_target_angle < 40 && OD_PERSIST_COMM.x6004_target_CW_CCW == 0)
 213:Core/Src/freertos.c ****       {
 214:Core/Src/freertos.c ****         db_target_angle = (double)OD_PERSIST_COMM.x6001_target_angle;
 215:Core/Src/freertos.c ****       }
 216:Core/Src/freertos.c ****       else if (OD_PERSIST_COMM.x6001_target_angle > 20 && OD_PERSIST_COMM.x6004_target_CW_CCW == 1)
 217:Core/Src/freertos.c ****       {
 218:Core/Src/freertos.c ****         db_target_angle = 20 * -1;
 219:Core/Src/freertos.c ****         TPDO_tarnsmit(6, 99);
 220:Core/Src/freertos.c ****       }
 221:Core/Src/freertos.c ****       else if (OD_PERSIST_COMM.x6001_target_angle < 20 && OD_PERSIST_COMM.x6004_target_CW_CCW == 1)
 222:Core/Src/freertos.c ****       {
 223:Core/Src/freertos.c ****         db_target_angle = (double)OD_PERSIST_COMM.x6001_target_angle * -1;
 224:Core/Src/freertos.c ****       }
 225:Core/Src/freertos.c ****       pre_target_angle = OD_PERSIST_COMM.x6001_target_angle;
 226:Core/Src/freertos.c ****       pre_target_CW_CCW = OD_PERSIST_COMM.x6004_target_CW_CCW;
 227:Core/Src/freertos.c ****     }
 228:Core/Src/freertos.c ****     vTaskDelay(1);
 229:Core/Src/freertos.c ****   }
 230:Core/Src/freertos.c ****   /* USER CODE END canopen_task */
 231:Core/Src/freertos.c **** }
 232:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 233:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 234:Core/Src/freertos.c **** void analyze_voltage(void)
 235:Core/Src/freertos.c **** {
 236:Core/Src/freertos.c ****   if (voltage_counter == 0)
 237:Core/Src/freertos.c ****   {
 238:Core/Src/freertos.c ****     previous_voltage = current_voltage;
 239:Core/Src/freertos.c ****     previos_error = abs(current_angle - db_target_angle);
 240:Core/Src/freertos.c ****   }
 241:Core/Src/freertos.c ****   HAL_ADC_Start(&hadc1);
 242:Core/Src/freertos.c ****   HAL_ADC_PollForConversion(&hadc1, 1);
 243:Core/Src/freertos.c ****   current_voltage = HAL_ADC_GetValue(&hadc1);
 244:Core/Src/freertos.c ****   current_voltage = ((current_voltage / 4096) * 3.3);
 245:Core/Src/freertos.c ****   current_angle = (int)(((current_voltage * 2) - 1.6) * 25 - 25); // min_voltage => 1.6  mid_voltag
 246:Core/Src/freertos.c ****   if (voltage_counter == 4)
 247:Core/Src/freertos.c ****   {
 248:Core/Src/freertos.c ****     protection_lock = true;
 249:Core/Src/freertos.c ****   }
 250:Core/Src/freertos.c ****   else
 251:Core/Src/freertos.c ****   {
 252:Core/Src/freertos.c ****     protection_lock = false;
 253:Core/Src/freertos.c ****   }
 254:Core/Src/freertos.c ****   voltage_counter = (voltage_counter + 1) % Timer_ARR;
 255:Core/Src/freertos.c **** }
 256:Core/Src/freertos.c **** 
 257:Core/Src/freertos.c **** void PID_protection(void)
 258:Core/Src/freertos.c **** {
 259:Core/Src/freertos.c **** 
 260:Core/Src/freertos.c ****   if (current_angle > 40 || current_voltage < -25) // outof voltage range 4.4v ~ 1.6v
 261:Core/Src/freertos.c ****   {
 262:Core/Src/freertos.c ****     PID_Error_handler();
 263:Core/Src/freertos.c ****     TPDO_tarnsmit(2, 99); // 2.reach limit
 264:Core/Src/freertos.c ****   }
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 7


 265:Core/Src/freertos.c ****   /*
 266:Core/Src/freertos.c ****   if ((abs(current_voltage - previous_voltage) > 1 || abs(current_voltage - previous_voltage) < 0.0
 267:Core/Src/freertos.c ****   {
 268:Core/Src/freertos.c ****     PID_Error_handler();
 269:Core/Src/freertos.c ****     TPDO_tarnsmit(3, 99); // 3. Angle reader abnormal
 270:Core/Src/freertos.c ****   }
 271:Core/Src/freertos.c ****   if (abs((current_angle - db_target_angle) - previos_error) < 2 && abs(current_angle - db_target_a
 272:Core/Src/freertos.c ****   {
 273:Core/Src/freertos.c ****     PID_Error_handler();
 274:Core/Src/freertos.c ****     TPDO_tarnsmit(4, 99); // 4. Error not decrease
 275:Core/Src/freertos.c ****   }
 276:Core/Src/freertos.c ****   */
 277:Core/Src/freertos.c ****   else
 278:Core/Src/freertos.c ****   {
 279:Core/Src/freertos.c ****     TPDO_tarnsmit(0, abs(current_angle)); // 0.normal output
 280:Core/Src/freertos.c ****   }
 281:Core/Src/freertos.c **** }
 282:Core/Src/freertos.c **** 
 283:Core/Src/freertos.c **** void PID_init(void)
 284:Core/Src/freertos.c **** {
 285:Core/Src/freertos.c ****   TIM2->CCR2 = 0; // CCR_value bigger the rpm will highter 0~100
 286:Core/Src/freertos.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 287:Core/Src/freertos.c ****   HAL_GPIO_WritePin(CW_CCW_control_GPIO_Port, CW_CCW_control_Pin, 1);
 288:Core/Src/freertos.c ****   osDelay(500);
 289:Core/Src/freertos.c ****   analyze_voltage();
 290:Core/Src/freertos.c ****   // db_target_angle = Virtual_target_angle;
 291:Core/Src/freertos.c ****   PID(&TPID, &current_angle, &CCR_value, &db_target_angle, 1, 0.15, 0, _PID_P_ON_E, _PID_CD_DIRECT)
 292:Core/Src/freertos.c ****   PID_SetMode(&TPID, _PID_MODE_AUTOMATIC);
 293:Core/Src/freertos.c ****   PID_SetSampleTime(&TPID, 100);
 294:Core/Src/freertos.c ****   PID_SetOutputLimits(&TPID, -70, 70);
 295:Core/Src/freertos.c **** }
 296:Core/Src/freertos.c **** void CW_CCW_deect(void)
 297:Core/Src/freertos.c **** {
  82              		.loc 1 297 1 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86 0000 08B5     		push	{r3, lr}
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 8
  89              		.cfi_offset 3, -8
  90              		.cfi_offset 14, -4
 298:Core/Src/freertos.c ****   if (current_angle < db_target_angle)
  91              		.loc 1 298 3 view .LVU9
  92              		.loc 1 298 21 is_stmt 0 view .LVU10
  93 0002 0F4B     		ldr	r3, .L12
  94 0004 D3E90001 		ldrd	r0, [r3]
  95              		.loc 1 298 6 view .LVU11
  96 0008 0E4B     		ldr	r3, .L12+4
  97 000a D3E90023 		ldrd	r2, [r3]
  98 000e FFF7FEFF 		bl	__aeabi_dcmplt
  99              	.LVL2:
 100 0012 50B1     		cbz	r0, .L10
 299:Core/Src/freertos.c ****   {
 300:Core/Src/freertos.c ****     HAL_GPIO_WritePin(CW_CCW_control_GPIO_Port, CW_CCW_control_Pin, 0);
 101              		.loc 1 300 5 is_stmt 1 view .LVU12
 102 0014 0022     		movs	r2, #0
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 8


 103 0016 0821     		movs	r1, #8
 104 0018 4FF09040 		mov	r0, #1207959552
 105 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 106              	.LVL3:
 301:Core/Src/freertos.c ****     OD_PERSIST_COMM.x6005_current_CW_CCW = 0;
 107              		.loc 1 301 5 view .LVU13
 108              		.loc 1 301 42 is_stmt 0 view .LVU14
 109 0020 094B     		ldr	r3, .L12+8
 110 0022 0022     		movs	r2, #0
 111 0024 83F8D020 		strb	r2, [r3, #208]
 112              	.L5:
 302:Core/Src/freertos.c ****   }
 303:Core/Src/freertos.c ****   else
 304:Core/Src/freertos.c ****   {
 305:Core/Src/freertos.c ****     HAL_GPIO_WritePin(CW_CCW_control_GPIO_Port, CW_CCW_control_Pin, 1);
 306:Core/Src/freertos.c ****     OD_PERSIST_COMM.x6005_current_CW_CCW = 1;
 307:Core/Src/freertos.c ****   }
 308:Core/Src/freertos.c **** }
 113              		.loc 1 308 1 view .LVU15
 114 0028 08BD     		pop	{r3, pc}
 115              	.L10:
 305:Core/Src/freertos.c ****     OD_PERSIST_COMM.x6005_current_CW_CCW = 1;
 116              		.loc 1 305 5 is_stmt 1 view .LVU16
 117 002a 0122     		movs	r2, #1
 118 002c 0821     		movs	r1, #8
 119 002e 4FF09040 		mov	r0, #1207959552
 120 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 121              	.LVL4:
 306:Core/Src/freertos.c ****   }
 122              		.loc 1 306 5 view .LVU17
 306:Core/Src/freertos.c ****   }
 123              		.loc 1 306 42 is_stmt 0 view .LVU18
 124 0036 044B     		ldr	r3, .L12+8
 125 0038 0122     		movs	r2, #1
 126 003a 83F8D020 		strb	r2, [r3, #208]
 127              		.loc 1 308 1 view .LVU19
 128 003e F3E7     		b	.L5
 129              	.L13:
 130              		.align	2
 131              	.L12:
 132 0040 00000000 		.word	.LANCHOR4
 133 0044 00000000 		.word	.LANCHOR5
 134 0048 00000000 		.word	OD_PERSIST_COMM
 135              		.cfi_endproc
 136              	.LFE174:
 138              		.section	.text.PID_Error_handler,"ax",%progbits
 139              		.align	1
 140              		.global	PID_Error_handler
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	PID_Error_handler:
 146              	.LFB175:
 309:Core/Src/freertos.c **** void PID_Error_handler(void)
 310:Core/Src/freertos.c **** {
 147              		.loc 1 310 1 is_stmt 1 view -0
 148              		.cfi_startproc
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 9


 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 311:Core/Src/freertos.c ****   TIM2->CCR2 = 0;
 152              		.loc 1 311 3 view .LVU21
 153              		.loc 1 311 14 is_stmt 0 view .LVU22
 154 0000 4FF08043 		mov	r3, #1073741824
 155 0004 0022     		movs	r2, #0
 156 0006 9A63     		str	r2, [r3, #56]
 312:Core/Src/freertos.c ****   PID_safe_lock = true;
 157              		.loc 1 312 3 is_stmt 1 view .LVU23
 158              		.loc 1 312 17 is_stmt 0 view .LVU24
 159 0008 014B     		ldr	r3, .L15
 160 000a 0122     		movs	r2, #1
 161 000c 1A70     		strb	r2, [r3]
 313:Core/Src/freertos.c **** }
 162              		.loc 1 313 1 view .LVU25
 163 000e 7047     		bx	lr
 164              	.L16:
 165              		.align	2
 166              	.L15:
 167 0010 00000000 		.word	.LANCHOR6
 168              		.cfi_endproc
 169              	.LFE175:
 171              		.section	.text.abs,"ax",%progbits
 172              		.align	1
 173              		.global	abs
 174              		.syntax unified
 175              		.thumb
 176              		.thumb_func
 178              	abs:
 179              	.LVL5:
 180              	.LFB176:
 314:Core/Src/freertos.c **** double abs(double a)
 315:Core/Src/freertos.c **** {
 181              		.loc 1 315 1 is_stmt 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		.loc 1 315 1 is_stmt 0 view .LVU27
 186 0000 38B5     		push	{r3, r4, r5, lr}
 187              	.LCFI2:
 188              		.cfi_def_cfa_offset 16
 189              		.cfi_offset 3, -16
 190              		.cfi_offset 4, -12
 191              		.cfi_offset 5, -8
 192              		.cfi_offset 14, -4
 193 0002 55EC104B 		vmov	r4, r5, d0
 316:Core/Src/freertos.c ****   if (a < 0)
 194              		.loc 1 316 3 is_stmt 1 view .LVU28
 195              		.loc 1 316 6 is_stmt 0 view .LVU29
 196 0006 0022     		movs	r2, #0
 197 0008 0023     		movs	r3, #0
 198 000a 10EE100A 		vmov	r0, s0	@ int
 199 000e 2946     		mov	r1, r5
 200 0010 FFF7FEFF 		bl	__aeabi_dcmplt
 201              	.LVL6:
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 10


 202              		.loc 1 316 6 view .LVU30
 203 0014 10B9     		cbnz	r0, .L22
 204              	.L18:
 317:Core/Src/freertos.c ****   {
 318:Core/Src/freertos.c ****     return (a * -1);
 319:Core/Src/freertos.c ****   }
 320:Core/Src/freertos.c ****   return a;
 321:Core/Src/freertos.c **** }
 205              		.loc 1 321 1 view .LVU31
 206 0016 45EC104B 		vmov	d0, r4, r5
 207 001a 38BD     		pop	{r3, r4, r5, pc}
 208              	.LVL7:
 209              	.L22:
 318:Core/Src/freertos.c ****   }
 210              		.loc 1 318 5 is_stmt 1 view .LVU32
 318:Core/Src/freertos.c ****   }
 211              		.loc 1 318 15 is_stmt 0 view .LVU33
 212 001c 05F10043 		add	r3, r5, #-2147483648
 213 0020 1D46     		mov	r5, r3
 214 0022 F8E7     		b	.L18
 215              		.cfi_endproc
 216              	.LFE176:
 218              		.global	__aeabi_dsub
 219              		.global	__aeabi_ui2d
 220              		.global	__aeabi_dmul
 221              		.global	__aeabi_dadd
 222              		.global	__aeabi_d2iz
 223              		.global	__aeabi_i2d
 224              		.section	.text.analyze_voltage,"ax",%progbits
 225              		.align	1
 226              		.global	analyze_voltage
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	analyze_voltage:
 232              	.LFB171:
 235:Core/Src/freertos.c ****   if (voltage_counter == 0)
 233              		.loc 1 235 1 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 10B5     		push	{r4, lr}
 238              	.LCFI3:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 4, -8
 241              		.cfi_offset 14, -4
 236:Core/Src/freertos.c ****   {
 242              		.loc 1 236 3 view .LVU35
 236:Core/Src/freertos.c ****   {
 243              		.loc 1 236 23 is_stmt 0 view .LVU36
 244 0002 374B     		ldr	r3, .L29+16
 245 0004 1B68     		ldr	r3, [r3]
 236:Core/Src/freertos.c ****   {
 246              		.loc 1 236 6 view .LVU37
 247 0006 A3B9     		cbnz	r3, .L24
 238:Core/Src/freertos.c ****     previos_error = abs(current_angle - db_target_angle);
 248              		.loc 1 238 5 is_stmt 1 view .LVU38
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 11


 238:Core/Src/freertos.c ****     previos_error = abs(current_angle - db_target_angle);
 249              		.loc 1 238 22 is_stmt 0 view .LVU39
 250 0008 364B     		ldr	r3, .L29+20
 251 000a D3E90001 		ldrd	r0, [r3]
 252 000e 364B     		ldr	r3, .L29+24
 253 0010 C3E90001 		strd	r0, [r3]
 239:Core/Src/freertos.c ****   }
 254              		.loc 1 239 5 is_stmt 1 view .LVU40
 239:Core/Src/freertos.c ****   }
 255              		.loc 1 239 21 is_stmt 0 view .LVU41
 256 0014 354B     		ldr	r3, .L29+28
 257 0016 D3E90001 		ldrd	r0, [r3]
 258 001a 354B     		ldr	r3, .L29+32
 259 001c D3E90023 		ldrd	r2, [r3]
 260 0020 FFF7FEFF 		bl	__aeabi_dsub
 261              	.LVL8:
 262 0024 41EC100B 		vmov	d0, r0, r1
 263 0028 FFF7FEFF 		bl	abs
 264              	.LVL9:
 239:Core/Src/freertos.c ****   }
 265              		.loc 1 239 19 view .LVU42
 266 002c 314B     		ldr	r3, .L29+36
 267 002e 83ED000B 		vstr.64	d0, [r3]
 268              	.L24:
 241:Core/Src/freertos.c ****   HAL_ADC_PollForConversion(&hadc1, 1);
 269              		.loc 1 241 3 is_stmt 1 view .LVU43
 270 0032 314C     		ldr	r4, .L29+40
 271 0034 2046     		mov	r0, r4
 272 0036 FFF7FEFF 		bl	HAL_ADC_Start
 273              	.LVL10:
 242:Core/Src/freertos.c ****   current_voltage = HAL_ADC_GetValue(&hadc1);
 274              		.loc 1 242 3 view .LVU44
 275 003a 0121     		movs	r1, #1
 276 003c 2046     		mov	r0, r4
 277 003e FFF7FEFF 		bl	HAL_ADC_PollForConversion
 278              	.LVL11:
 243:Core/Src/freertos.c ****   current_voltage = ((current_voltage / 4096) * 3.3);
 279              		.loc 1 243 3 view .LVU45
 243:Core/Src/freertos.c ****   current_voltage = ((current_voltage / 4096) * 3.3);
 280              		.loc 1 243 21 is_stmt 0 view .LVU46
 281 0042 2046     		mov	r0, r4
 282 0044 FFF7FEFF 		bl	HAL_ADC_GetValue
 283              	.LVL12:
 243:Core/Src/freertos.c ****   current_voltage = ((current_voltage / 4096) * 3.3);
 284              		.loc 1 243 19 view .LVU47
 285 0048 FFF7FEFF 		bl	__aeabi_ui2d
 286              	.LVL13:
 287 004c 254C     		ldr	r4, .L29+20
 288 004e C4E90001 		strd	r0, [r4]
 244:Core/Src/freertos.c ****   current_angle = (int)(((current_voltage * 2) - 1.6) * 25 - 25); // min_voltage => 1.6  mid_voltag
 289              		.loc 1 244 3 is_stmt 1 view .LVU48
 244:Core/Src/freertos.c ****   current_angle = (int)(((current_voltage * 2) - 1.6) * 25 - 25); // min_voltage => 1.6  mid_voltag
 290              		.loc 1 244 39 is_stmt 0 view .LVU49
 291 0052 0022     		movs	r2, #0
 292 0054 294B     		ldr	r3, .L29+44
 293 0056 D4E90001 		ldrd	r0, [r4]
 294 005a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 12


 295              	.LVL14:
 244:Core/Src/freertos.c ****   current_angle = (int)(((current_voltage * 2) - 1.6) * 25 - 25); // min_voltage => 1.6  mid_voltag
 296              		.loc 1 244 47 view .LVU50
 297 005e 1CA3     		adr	r3, .L29
 298 0060 D3E90023 		ldrd	r2, [r3]
 299 0064 FFF7FEFF 		bl	__aeabi_dmul
 300              	.LVL15:
 244:Core/Src/freertos.c ****   current_angle = (int)(((current_voltage * 2) - 1.6) * 25 - 25); // min_voltage => 1.6  mid_voltag
 301              		.loc 1 244 19 view .LVU51
 302 0068 C4E90001 		strd	r0, [r4]
 245:Core/Src/freertos.c ****   if (voltage_counter == 4)
 303              		.loc 1 245 3 is_stmt 1 view .LVU52
 245:Core/Src/freertos.c ****   if (voltage_counter == 4)
 304              		.loc 1 245 43 is_stmt 0 view .LVU53
 305 006c D4E90001 		ldrd	r0, [r4]
 306 0070 0246     		mov	r2, r0
 307 0072 0B46     		mov	r3, r1
 308 0074 FFF7FEFF 		bl	__aeabi_dadd
 309              	.LVL16:
 245:Core/Src/freertos.c ****   if (voltage_counter == 4)
 310              		.loc 1 245 48 view .LVU54
 311 0078 17A3     		adr	r3, .L29+8
 312 007a D3E90023 		ldrd	r2, [r3]
 313 007e FFF7FEFF 		bl	__aeabi_dsub
 314              	.LVL17:
 245:Core/Src/freertos.c ****   if (voltage_counter == 4)
 315              		.loc 1 245 55 view .LVU55
 316 0082 0022     		movs	r2, #0
 317 0084 1E4B     		ldr	r3, .L29+48
 318 0086 FFF7FEFF 		bl	__aeabi_dmul
 319              	.LVL18:
 245:Core/Src/freertos.c ****   if (voltage_counter == 4)
 320              		.loc 1 245 60 view .LVU56
 321 008a 0022     		movs	r2, #0
 322 008c 1C4B     		ldr	r3, .L29+48
 323 008e FFF7FEFF 		bl	__aeabi_dsub
 324              	.LVL19:
 245:Core/Src/freertos.c ****   if (voltage_counter == 4)
 325              		.loc 1 245 19 view .LVU57
 326 0092 FFF7FEFF 		bl	__aeabi_d2iz
 327              	.LVL20:
 245:Core/Src/freertos.c ****   if (voltage_counter == 4)
 328              		.loc 1 245 17 view .LVU58
 329 0096 FFF7FEFF 		bl	__aeabi_i2d
 330              	.LVL21:
 331 009a 144B     		ldr	r3, .L29+28
 332 009c C3E90001 		strd	r0, [r3]
 246:Core/Src/freertos.c ****   {
 333              		.loc 1 246 3 is_stmt 1 view .LVU59
 246:Core/Src/freertos.c ****   {
 334              		.loc 1 246 23 is_stmt 0 view .LVU60
 335 00a0 0F4B     		ldr	r3, .L29+16
 336 00a2 1A68     		ldr	r2, [r3]
 246:Core/Src/freertos.c ****   {
 337              		.loc 1 246 6 view .LVU61
 338 00a4 042A     		cmp	r2, #4
 339 00a6 0FD0     		beq	.L28
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 13


 252:Core/Src/freertos.c ****   }
 340              		.loc 1 252 5 is_stmt 1 view .LVU62
 252:Core/Src/freertos.c ****   }
 341              		.loc 1 252 21 is_stmt 0 view .LVU63
 342 00a8 164B     		ldr	r3, .L29+52
 343 00aa 0021     		movs	r1, #0
 344 00ac 1970     		strb	r1, [r3]
 345              	.L26:
 254:Core/Src/freertos.c **** }
 346              		.loc 1 254 3 is_stmt 1 view .LVU64
 254:Core/Src/freertos.c **** }
 347              		.loc 1 254 38 is_stmt 0 view .LVU65
 348 00ae 0132     		adds	r2, r2, #1
 254:Core/Src/freertos.c **** }
 349              		.loc 1 254 43 view .LVU66
 350 00b0 1549     		ldr	r1, .L29+56
 351 00b2 81FB0231 		smull	r3, r1, r1, r2
 352 00b6 D317     		asrs	r3, r2, #31
 353 00b8 C3EB6103 		rsb	r3, r3, r1, asr #1
 354 00bc 03EB8303 		add	r3, r3, r3, lsl #2
 355 00c0 D31A     		subs	r3, r2, r3
 254:Core/Src/freertos.c **** }
 356              		.loc 1 254 19 view .LVU67
 357 00c2 074A     		ldr	r2, .L29+16
 358 00c4 1360     		str	r3, [r2]
 255:Core/Src/freertos.c **** 
 359              		.loc 1 255 1 view .LVU68
 360 00c6 10BD     		pop	{r4, pc}
 361              	.L28:
 248:Core/Src/freertos.c ****   }
 362              		.loc 1 248 5 is_stmt 1 view .LVU69
 248:Core/Src/freertos.c ****   }
 363              		.loc 1 248 21 is_stmt 0 view .LVU70
 364 00c8 0E4B     		ldr	r3, .L29+52
 365 00ca 0121     		movs	r1, #1
 366 00cc 1970     		strb	r1, [r3]
 367 00ce EEE7     		b	.L26
 368              	.L30:
 369              		.align	3
 370              	.L29:
 371 00d0 66666666 		.word	1717986918
 372 00d4 66660A40 		.word	1074423398
 373 00d8 9A999999 		.word	-1717986918
 374 00dc 9999F93F 		.word	1073322393
 375 00e0 00000000 		.word	.LANCHOR7
 376 00e4 00000000 		.word	.LANCHOR8
 377 00e8 00000000 		.word	.LANCHOR9
 378 00ec 00000000 		.word	.LANCHOR4
 379 00f0 00000000 		.word	.LANCHOR5
 380 00f4 00000000 		.word	.LANCHOR10
 381 00f8 00000000 		.word	hadc1
 382 00fc 0000303F 		.word	1060110336
 383 0100 00003940 		.word	1077477376
 384 0104 00000000 		.word	.LANCHOR11
 385 0108 67666666 		.word	1717986919
 386              		.cfi_endproc
 387              	.LFE171:
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 14


 389              		.section	.text.PID_init,"ax",%progbits
 390              		.align	1
 391              		.global	PID_init
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 396              	PID_init:
 397              	.LFB173:
 284:Core/Src/freertos.c ****   TIM2->CCR2 = 0; // CCR_value bigger the rpm will highter 0~100
 398              		.loc 1 284 1 is_stmt 1 view -0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402 0000 30B5     		push	{r4, r5, lr}
 403              	.LCFI4:
 404              		.cfi_def_cfa_offset 12
 405              		.cfi_offset 4, -12
 406              		.cfi_offset 5, -8
 407              		.cfi_offset 14, -4
 408 0002 83B0     		sub	sp, sp, #12
 409              	.LCFI5:
 410              		.cfi_def_cfa_offset 24
 285:Core/Src/freertos.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 411              		.loc 1 285 3 view .LVU72
 285:Core/Src/freertos.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 412              		.loc 1 285 14 is_stmt 0 view .LVU73
 413 0004 0025     		movs	r5, #0
 414 0006 4FF08043 		mov	r3, #1073741824
 415 000a 9D63     		str	r5, [r3, #56]
 286:Core/Src/freertos.c ****   HAL_GPIO_WritePin(CW_CCW_control_GPIO_Port, CW_CCW_control_Pin, 1);
 416              		.loc 1 286 3 is_stmt 1 view .LVU74
 417 000c 0421     		movs	r1, #4
 418 000e 2248     		ldr	r0, .L33+40
 419 0010 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 420              	.LVL22:
 287:Core/Src/freertos.c ****   osDelay(500);
 421              		.loc 1 287 3 view .LVU75
 422 0014 0122     		movs	r2, #1
 423 0016 0821     		movs	r1, #8
 424 0018 4FF09040 		mov	r0, #1207959552
 425 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 426              	.LVL23:
 288:Core/Src/freertos.c ****   analyze_voltage();
 427              		.loc 1 288 3 view .LVU76
 428 0020 4FF4FA70 		mov	r0, #500
 429 0024 FFF7FEFF 		bl	osDelay
 430              	.LVL24:
 289:Core/Src/freertos.c ****   // db_target_angle = Virtual_target_angle;
 431              		.loc 1 289 3 view .LVU77
 432 0028 FFF7FEFF 		bl	analyze_voltage
 433              	.LVL25:
 291:Core/Src/freertos.c ****   PID_SetMode(&TPID, _PID_MODE_AUTOMATIC);
 434              		.loc 1 291 3 view .LVU78
 435 002c 1B4C     		ldr	r4, .L33+44
 436 002e 0195     		str	r5, [sp, #4]
 437 0030 0125     		movs	r5, #1
 438 0032 0095     		str	r5, [sp]
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 15


 439 0034 9FED0E2B 		vldr.64	d2, .L33
 440 0038 9FED0F1B 		vldr.64	d1, .L33+8
 441 003c 9FED100B 		vldr.64	d0, .L33+16
 442 0040 174B     		ldr	r3, .L33+48
 443 0042 184A     		ldr	r2, .L33+52
 444 0044 1849     		ldr	r1, .L33+56
 445 0046 2046     		mov	r0, r4
 446 0048 FFF7FEFF 		bl	PID
 447              	.LVL26:
 292:Core/Src/freertos.c ****   PID_SetSampleTime(&TPID, 100);
 448              		.loc 1 292 3 view .LVU79
 449 004c 2946     		mov	r1, r5
 450 004e 2046     		mov	r0, r4
 451 0050 FFF7FEFF 		bl	PID_SetMode
 452              	.LVL27:
 293:Core/Src/freertos.c ****   PID_SetOutputLimits(&TPID, -70, 70);
 453              		.loc 1 293 3 view .LVU80
 454 0054 6421     		movs	r1, #100
 455 0056 2046     		mov	r0, r4
 456 0058 FFF7FEFF 		bl	PID_SetSampleTime
 457              	.LVL28:
 294:Core/Src/freertos.c **** }
 458              		.loc 1 294 3 view .LVU81
 459 005c 9FED0A1B 		vldr.64	d1, .L33+24
 460 0060 9FED0B0B 		vldr.64	d0, .L33+32
 461 0064 2046     		mov	r0, r4
 462 0066 FFF7FEFF 		bl	PID_SetOutputLimits
 463              	.LVL29:
 295:Core/Src/freertos.c **** void CW_CCW_deect(void)
 464              		.loc 1 295 1 is_stmt 0 view .LVU82
 465 006a 03B0     		add	sp, sp, #12
 466              	.LCFI6:
 467              		.cfi_def_cfa_offset 12
 468              		@ sp needed
 469 006c 30BD     		pop	{r4, r5, pc}
 470              	.L34:
 471 006e 00BF     		.align	3
 472              	.L33:
 473 0070 00000000 		.word	0
 474 0074 00000000 		.word	0
 475 0078 33333333 		.word	858993459
 476 007c 3333C33F 		.word	1069757235
 477 0080 00000000 		.word	0
 478 0084 0000F03F 		.word	1072693248
 479 0088 00000000 		.word	0
 480 008c 00805140 		.word	1079083008
 481 0090 00000000 		.word	0
 482 0094 008051C0 		.word	-1068400640
 483 0098 00000000 		.word	htim2
 484 009c 00000000 		.word	.LANCHOR13
 485 00a0 00000000 		.word	.LANCHOR5
 486 00a4 00000000 		.word	.LANCHOR12
 487 00a8 00000000 		.word	.LANCHOR4
 488              		.cfi_endproc
 489              	.LFE173:
 491              		.section	.text.TPDO_tarnsmit,"ax",%progbits
 492              		.align	1
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 16


 493              		.global	TPDO_tarnsmit
 494              		.syntax unified
 495              		.thumb
 496              		.thumb_func
 498              	TPDO_tarnsmit:
 499              	.LVL30:
 500              	.LFB177:
 322:Core/Src/freertos.c **** void TPDO_tarnsmit(uint8_t status, int16_t angle)
 323:Core/Src/freertos.c **** {
 501              		.loc 1 323 1 is_stmt 1 view -0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 8
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              		.loc 1 323 1 is_stmt 0 view .LVU84
 506 0000 70B5     		push	{r4, r5, r6, lr}
 507              	.LCFI7:
 508              		.cfi_def_cfa_offset 16
 509              		.cfi_offset 4, -16
 510              		.cfi_offset 5, -12
 511              		.cfi_offset 6, -8
 512              		.cfi_offset 14, -4
 513 0002 84B0     		sub	sp, sp, #16
 514              	.LCFI8:
 515              		.cfi_def_cfa_offset 32
 324:Core/Src/freertos.c ****   OD_PERSIST_COMM.x6000_current_angle = angle;
 516              		.loc 1 324 3 is_stmt 1 view .LVU85
 517              		.loc 1 324 39 is_stmt 0 view .LVU86
 518 0004 204D     		ldr	r5, .L38
 519 0006 85F8CC10 		strb	r1, [r5, #204]
 325:Core/Src/freertos.c ****   OD_PERSIST_COMM.x6003_status = status;
 520              		.loc 1 325 3 is_stmt 1 view .LVU87
 521              		.loc 1 325 32 is_stmt 0 view .LVU88
 522 000a 85F8CE00 		strb	r0, [r5, #206]
 326:Core/Src/freertos.c ****   OD_set_u16(OD_find(OD, 0x6000), 0x000, OD_PERSIST_COMM.x6000_current_angle, false); // change_obj
 523              		.loc 1 326 3 is_stmt 1 view .LVU89
 524 000e 1F4E     		ldr	r6, .L38+4
 525              		.loc 1 326 14 is_stmt 0 view .LVU90
 526 0010 4FF4C041 		mov	r1, #24576
 527              	.LVL31:
 528              		.loc 1 326 14 view .LVU91
 529 0014 3068     		ldr	r0, [r6]
 530              	.LVL32:
 531              		.loc 1 326 14 view .LVU92
 532 0016 FFF7FEFF 		bl	OD_find
 533              	.LVL33:
 534              		.loc 1 326 57 view .LVU93
 535 001a 95F9CC30 		ldrsb	r3, [r5, #204]
 536              	.LVL34:
 537              		.loc 1 326 57 view .LVU94
 538 001e ADF80E30 		strh	r3, [sp, #14]	@ movhi
 539              	.LVL35:
 540              	.LBB10:
 541              	.LBI10:
 542              		.file 2 "Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h"
   1:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
   2:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * CANopen Object Dictionary interface
   3:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 17


   4:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @file        CO_ODinterface.h
   5:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ingroup     CO_ODinterface
   6:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @author      Janez Paternoster
   7:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @copyright   2020 Janez Paternoster
   8:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
   9:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
  13:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * you may not use this file except in compliance with the License.
  15:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * You may obtain a copy of the License at
  16:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
  17:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
  19:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Unless required by applicable law or agreed to in writing, software
  20:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * See the License for the specific language governing permissions and
  23:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * limitations under the License.
  24:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
  25:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  26:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifndef CO_OD_INTERFACE_H
  27:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #define CO_OD_INTERFACE_H
  28:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  29:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #include "301/CO_driver.h"
  30:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  31:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifdef __cplusplus
  32:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** extern "C" {
  33:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
  34:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  35:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
  36:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @defgroup CO_ODinterface OD interface
  37:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * CANopen Object Dictionary interface.
  38:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
  39:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ingroup CO_CANopen_301
  40:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @{
  41:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * See @ref doc/objectDictionary.md
  42:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
  43:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  44:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifndef CO_OD_OWN_TYPES
  45:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Variable of type OD_size_t contains data length in bytes of OD variable */
  46:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef uint32_t OD_size_t;
  47:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Type (and size) of Object Dictionary attribute */
  48:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef uint8_t OD_attr_t;
  49:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
  50:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  51:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifndef OD_FLAGS_PDO_SIZE
  52:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Size of of flagsPDO variable inside @ref OD_extension_t, from 0 to 32. */
  53:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #define OD_FLAGS_PDO_SIZE 4
  54:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
  55:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  56:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifndef CO_PROGMEM
  57:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Modifier for OD objects. This is large amount of data and is specified in
  58:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Object Dictionary (OD.c file usually) */
  59:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #define CO_PROGMEM const
  60:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 18


  61:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  62:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  63:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
  64:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Common DS301 object dictionary entries.
  65:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
  66:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef enum {
  67:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1000_DEV_TYPE           = 0x1000U,/**< Device type */
  68:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1001_ERR_REG            = 0x1001U,/**< Error register */
  69:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1002_MANUF_STATUS_REG   = 0x1002U,/**< Manufacturer status register */
  70:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1003_PREDEF_ERR_FIELD   = 0x1003U,/**< Predefined error field */
  71:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1004_RSV                = 0x1004U,/**< Reserved */
  72:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1005_COBID_SYNC         = 0x1005U,/**< Sync message cob-id */
  73:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1006_COMM_CYCL_PERIOD   = 0x1006U,/**< Communication cycle period */
  74:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1007_SYNC_WINDOW_LEN    = 0x1007U,/**< Sync windows length */
  75:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1008_MANUF_DEV_NAME     = 0x1008U,/**< Manufacturer device name */
  76:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1009_MANUF_HW_VERSION   = 0x1009U,/**< Manufacturer hardware version */
  77:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100A_MANUF_SW_VERSION   = 0x100AU,/**< Manufacturer software version */
  78:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100B_RSV                = 0x100BU,/**< Reserved */
  79:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100C_GUARD_TIME         = 0x100CU,/**< Guard time */
  80:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100D_LIFETIME_FACTOR    = 0x100DU,/**< Life time factor */
  81:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100E_RSV                = 0x100EU,/**< Reserved */
  82:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100F_RSV                = 0x100FU,/**< Reserved */
  83:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1010_STORE_PARAMETERS   = 0x1010U,/**< Store params in persistent mem.*/
  84:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1011_RESTORE_DEFAULT    = 0x1011U,/**< Restore default parameters */
  85:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1012_COBID_TIME         = 0x1012U,/**< Timestamp message cob-id */
  86:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1013_HIGH_RES_TIMESTAMP = 0x1013U,/**< High resolution timestamp */
  87:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1014_COBID_EMERGENCY    = 0x1014U,/**< Emergency message cob-id */
  88:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1015_INHIBIT_TIME_EMCY  = 0x1015U,/**< Inhibit time emergency message */
  89:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1016_CONSUMER_HB_TIME   = 0x1016U,/**< Consumer heartbeat time */
  90:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1017_PRODUCER_HB_TIME   = 0x1017U,/**< Producer heartbeat time */
  91:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1018_IDENTITY_OBJECT    = 0x1018U,/**< Identity object */
  92:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1019_SYNC_CNT_OVERFLOW  = 0x1019U,/**< Sync counter overflow value */
  93:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1020_VERIFY_CONFIG      = 0x1020U,/**< Verify configuration */
  94:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1021_STORE_EDS          = 0x1021U,/**< Store EDS */
  95:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1022_STORE_FORMAT       = 0x1022U,/**< Store format */
  96:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1023_OS_CMD             = 0x1023U,/**< OS command */
  97:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1024_OS_CMD_MODE        = 0x1024U,/**< OS command mode */
  98:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1025_OS_DBG_INTERFACE   = 0x1025U,/**< OS debug interface */
  99:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1026_OS_PROMPT          = 0x1026U,/**< OS prompt */
 100:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1027_MODULE_LIST        = 0x1027U,/**< Module list */
 101:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1028_EMCY_CONSUMER      = 0x1028U,/**< Emergency consumer object */
 102:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1029_ERR_BEHAVIOR       = 0x1029U,/**< Error behaviour */
 103:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1200_SDO_SERVER_1_PARAM = 0x1200U,/**< SDO server parameter */
 104:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1280_SDO_CLIENT_1_PARAM = 0x1280U,/**< SDO client parameter */
 105:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1300_GFC_PARAM          = 0x1300U,/**< Global fail-safe command param */
 106:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1301_SRDO_1_PARAM       = 0x1301U,/**< SRDO communication parameter */
 107:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1381_SRDO_1_MAPPING     = 0x1381U,/**< SRDO mapping parameter */
 108:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H13FE_SRDO_VALID         = 0x13FEU,/**< SRDO Configuration valid */
 109:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H13FF_SRDO_CHECKSUM      = 0x13FFU,/**< SRDO configuration checksum */
 110:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1400_RXPDO_1_PARAM      = 0x1400U,/**< RXPDO communication parameter */
 111:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1600_RXPDO_1_MAPPING    = 0x1600U,/**< RXPDO mapping parameters */
 112:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1800_TXPDO_1_PARAM      = 0x1800U,/**< TXPDO communication parameter */
 113:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1A00_TXPDO_1_MAPPING    = 0x1A00U,/**< TXPDO mapping parameters */
 114:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_ObjDicId_30x_t;
 115:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 116:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 117:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 19


 118:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Attributes (bit masks) for OD sub-object.
 119:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 120:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef enum {
 121:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_SDO_R = 0x01, /**< SDO server may read from the variable */
 122:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_SDO_W = 0x02, /**< SDO server may write to the variable */
 123:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_SDO_RW = 0x03, /**< SDO server may read from or write to the variable */
 124:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_TPDO = 0x04, /**< Variable is mappable into TPDO (can be read) */
 125:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_RPDO = 0x08, /**< Variable is mappable into RPDO (can be written) */
 126:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_TRPDO = 0x0C, /**< Variable is mappable into TPDO or RPDO */
 127:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_TSRDO = 0x10, /**< Variable is mappable into transmitting SRDO */
 128:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_RSRDO = 0x20, /**< Variable is mappable into receiving SRDO */
 129:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_TRSRDO = 0x30, /**< Variable is mappable into tx or rx SRDO */
 130:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_MB = 0x40, /**< Variable is multi-byte ((u)int16_t to (u)int64_t) */
 131:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_STR = 0x80 /**< Shorter value, than specified variable size, may be
 132:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     written to the variable. SDO write will fill remaining memory with zeroes.
 133:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     Attribute is used for VISIBLE_STRING and UNICODE_STRING. */
 134:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_attributes_t;
 135:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 136:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 137:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 138:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Return codes from OD access functions.
 139:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 140:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_getSDOabCode() can be used to retrieve corresponding SDO abort code.
 141:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 142:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef enum {
 143:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /* !!!! WARNING !!!!
 144:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * If changing these values, change also OD_getSDOabCode() function!
 145:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 146:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Read/write is only partial, make more calls */
 147:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_PARTIAL = -1,
 148:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x00000000 - Read/write successfully finished */
 149:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_OK = 0,
 150:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x05040005 - Out of memory */
 151:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_OUT_OF_MEM = 1,
 152:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06010000 - Unsupported access to an object */
 153:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_UNSUPP_ACCESS = 2,
 154:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06010001 - Attempt to read a write only object */
 155:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_WRITEONLY = 3,
 156:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06010002 - Attempt to write a read only object */
 157:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_READONLY = 4,
 158:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06020000 - Object does not exist in the object dict. */
 159:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_IDX_NOT_EXIST = 5,
 160:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06040041 - Object cannot be mapped to the PDO */
 161:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_NO_MAP = 6,
 162:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06040042 - PDO length exceeded */
 163:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_MAP_LEN = 7,
 164:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06040043 - General parameter incompatibility reasons */
 165:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_PAR_INCOMPAT = 8,
 166:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06040047 - General internal incompatibility in device */
 167:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DEV_INCOMPAT = 9,
 168:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06060000 - Access failed due to hardware error */
 169:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_HW = 10,
 170:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06070010 - Data type does not match */
 171:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_TYPE_MISMATCH = 11,
 172:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06070012 - Data type does not match, length too high */
 173:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_LONG = 12,
 174:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06070013 - Data type does not match, length too short */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 20


 175:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_SHORT = 13,
 176:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090011 - Sub index does not exist */
 177:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_SUB_NOT_EXIST = 14,
 178:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090030 - Invalid value for parameter (download only) */
 179:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_INVALID_VALUE = 15,
 180:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090031 - Value range of parameter written too high */
 181:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_VALUE_HIGH = 16,
 182:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090032 - Value range of parameter written too low */
 183:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_VALUE_LOW = 17,
 184:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090036 - Maximum value is less than minimum value */
 185:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_MAX_LESS_MIN = 18,
 186:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x060A0023 - Resource not available: SDO connection */
 187:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_NO_RESOURCE = 19,
 188:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000000 - General error */
 189:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_GENERAL = 20,
 190:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000020 - Data cannot be transferred or stored to app */
 191:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_TRANSF = 21,
 192:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000021 - Data can't be transferred (local control) */
 193:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_LOC_CTRL = 22,
 194:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000022 - Data can't be transf. (present device state) */
 195:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_DEV_STATE = 23,
 196:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000023 - Object dictionary not present */
 197:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_OD_MISSING = 23,
 198:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000024 - No data available */
 199:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_NO_DATA = 25,
 200:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Last element, number of responses */
 201:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_COUNT = 26
 202:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } ODR_t;
 203:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 204:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 205:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 206:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * IO stream structure, used for read/write access to OD variable, part of
 207:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_IO_t.
 208:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 209:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 210:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Pointer to original data object, defined by Object Dictionary. Default
 211:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * read/write functions operate on it. If memory for data object is not
 212:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * specified by Object Dictionary, then dataOrig is NULL.
 213:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      */
 214:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     void *dataOrig;
 215:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Pointer to object, passed by @ref OD_extension_init(). Can be used
 216:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * inside read / write functions from IO extension.
 217:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      */
 218:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     void *object;
 219:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Data length in bytes or 0, if length is not specified */
 220:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_size_t dataLength;
 221:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** In case of large data, dataOffset indicates position of already
 222:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * transferred data */
 223:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_size_t dataOffset;
 224:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Attribute bit-field of the OD sub-object, see @ref OD_attributes_t */
 225:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_attr_t attribute;
 226:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Sub index of the OD sub-object, informative */
 227:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint8_t subIndex;
 228:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_stream_t;
 229:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 230:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 231:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 21


 232:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Structure for input / output on the OD variable. It is initialized with
 233:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_getSub() function. Access principle to OD variable is via read/write
 234:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * functions operating on stream, similar as standard read/write.
 235:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 236:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 237:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Object Dictionary stream object, passed to read or write */
 238:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_stream_t stream;
 239:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /**
 240:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Function pointer for reading value from specified variable from Object
 241:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Dictionary. If OD variable is larger than buf, then this function must
 242:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * be called several times. After completed successful read function returns
 243:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * 'ODR_OK'. If read is partial, it returns 'ODR_PARTIAL'. In case of errors
 244:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * function returns code similar to SDO abort code.
 245:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 246:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Read can be restarted with @ref OD_rwRestart() function.
 247:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 248:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * At the moment, when Object Dictionary is initialized, every variable has
 249:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * assigned the same "read" function. This default function simply copies
 250:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * data from Object Dictionary variable. Application can bind its own "read"
 251:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * function for specific object. In that case application is able to
 252:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * calculate data for reading from own internal state at the moment of
 253:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * "read" function call. Own "read" function on OD object can be initialized
 254:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * with @ref OD_extension_init() function.
 255:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 256:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * "read" function must always copy all own data to buf, except if "buf" is
 257:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * not large enough. ("*returnCode" must not return 'ODR_PARTIAL', if there
 258:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * is still space in "buf".)
 259:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 260:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @warning When accessing OD variables by calling the read() function, it
 261:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * may be necessary to use @ref CO_LOCK_OD() and @ref CO_UNLOCK_OD() macros.
 262:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * See @ref CO_critical_sections for more information.
 263:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 264:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param stream Object Dictionary stream object.
 265:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param buf Pointer to external buffer, where to data will be copied.
 266:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param count Size of the external buffer in bytes.
 267:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param [out] countRead If return value is "ODR_OK" or "ODR_PARTIAL",
 268:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * then number of bytes successfully read must be returned here.
 269:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 270:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 271:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      */
 272:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_t (*read)(OD_stream_t *stream, void *buf,
 273:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                   OD_size_t count, OD_size_t *countRead);
 274:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /**
 275:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Function pointer for writing value into specified variable inside Object
 276:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Dictionary. If OD variable is larger than buf, then this function must
 277:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * be called several times. After completed successful write function
 278:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * returns 'ODR_OK'. If write is partial, it returns 'ODR_PARTIAL'. In case
 279:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * of errors function returns code similar to SDO abort code.
 280:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 281:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Write can be restarted with @ref OD_rwRestart() function.
 282:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 283:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * At the moment, when Object Dictionary is initialized, every variable has
 284:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * assigned the same "write" function, which simply copies data to Object
 285:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Dictionary variable. Application can bind its own "write" function,
 286:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * similar as it can bind "read" function.
 287:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 288:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * "write" function must always copy all available data from buf. If OD
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 22


 289:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * variable expect more data, then "*returnCode" must return 'ODR_PARTIAL'.
 290:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 291:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @warning When accessing OD variables by calling the read() function, it
 292:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * may be necessary to use @ref CO_LOCK_OD() and @ref CO_UNLOCK_OD() macros.
 293:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * See @ref CO_critical_sections for more information.
 294:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 295:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param stream Object Dictionary stream object.
 296:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param buf Pointer to external buffer, from where data will be copied.
 297:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param count Size of the external buffer in bytes.
 298:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param [out] countWritten If return value is "ODR_OK" or "ODR_PARTIAL",
 299:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * then number of bytes successfully written must be returned here.
 300:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 301:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 302:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      */
 303:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_t (*write)(OD_stream_t *stream, const void *buf,
 304:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                    OD_size_t count, OD_size_t *countWritten);
 305:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_IO_t;
 306:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 307:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 308:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 309:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Extension of OD object, which can optionally be specified by application in
 310:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * initialization phase with @ref OD_extension_init() function.
 311:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 312:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 313:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Object on which read and write will operate, part of @ref OD_stream_t */
 314:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     void *object;
 315:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Application specified read function pointer. If NULL, then read will be
 316:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * disabled. @ref OD_readOriginal can be used here to keep the original read
 317:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * function. For function description see @ref OD_IO_t. */
 318:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_t (*read)(OD_stream_t *stream, void *buf,
 319:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                   OD_size_t count, OD_size_t *countRead);
 320:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Application specified write function pointer. If NULL, then write will
 321:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * be disabled. @ref OD_writeOriginal can be used here to keep the original
 322:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * write function. For function description see @ref OD_IO_t. */
 323:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_t (*write)(OD_stream_t *stream, const void *buf,
 324:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                    OD_size_t count, OD_size_t *countWritten);
 325:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 326:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /**PDO flags bit-field provides one bit for each OD variable, which exist
 327:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * inside OD object at specific sub index. If application clears that bit,
 328:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * and OD variable is mapped to an event driven TPDO, then TPDO will be
 329:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * sent.
 330:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 331:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @ref OD_FLAGS_PDO_SIZE can have a value from 0 to 32 bytes, which
 332:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * corresponds to 0 to 256 available bits. If, for example,
 333:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @ref OD_FLAGS_PDO_SIZE has value 4, then OD variables with sub index up
 334:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * to 31 will have the TPDO requesting functionality.
 335:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * See also @ref OD_requestTPDO and @ref OD_TPDOtransmitted. */
 336:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint8_t flagsPDO[OD_FLAGS_PDO_SIZE];
 337:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
 338:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_extension_t;
 339:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 340:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 341:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 342:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Object Dictionary entry for one OD object.
 343:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 344:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * OD entries are collected inside OD_t as array (list). Each OD entry contains
 345:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * basic information about OD object (index and subEntriesCount), pointer to
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 23


 346:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * odObject with additional information about var, array or record entry and
 347:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * pointer to extension, configurable by application.
 348:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 349:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 350:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Object Dictionary index */
 351:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint16_t index;
 352:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Number of all sub-entries, including sub-entry at sub-index 0 */
 353:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint8_t subEntriesCount;
 354:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Type of the odObject, indicated by @ref OD_objectTypes_t enumerator. */
 355:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint8_t odObjectType;
 356:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** OD object of type indicated by odObjectType, from which @ref OD_getSub()
 357:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * fetches the information */
 358:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     CO_PROGMEM void *odObject;
 359:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Extension to OD, specified by application */
 360:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_extension_t *extension;
 361:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_entry_t;
 362:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 363:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 364:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 365:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Object Dictionary
 366:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 367:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 368:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Number of elements in the list, without last element, which is blank */
 369:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint16_t size;
 370:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** List OD entries (table of contents), ordered by index */
 371:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_entry_t *list;
 372:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_t;
 373:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 374:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 375:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 376:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Read value from original OD location
 377:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 378:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This function can be used inside read / write functions, specified by
 379:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_extension_init(). It reads data directly from memory location
 380:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * specified by Object dictionary. If no IO extension is used on OD entry, then
 381:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * io->read returned by @ref OD_getSub() equals to this function. See
 382:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * also @ref OD_IO_t.
 383:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 384:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_readOriginal(OD_stream_t *stream, void *buf,
 385:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                       OD_size_t count, OD_size_t *countRead);
 386:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 387:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 388:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 389:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Write value to original OD location
 390:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 391:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This function can be used inside read / write functions, specified by
 392:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_extension_init(). It writes data directly to memory location
 393:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * specified by Object dictionary. If no IO extension is used on OD entry, then
 394:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * io->write returned by @ref OD_getSub() equals to this function. See
 395:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * also @ref OD_IO_t.
 396:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 397:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_writeOriginal(OD_stream_t *stream, const void *buf,
 398:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                        OD_size_t count, OD_size_t *countWritten);
 399:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 400:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 401:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 402:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Find OD entry in Object Dictionary
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 24


 403:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 404:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param od Object Dictionary
 405:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param index CANopen Object Dictionary index of object in Object Dictionary
 406:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 407:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Pointer to OD entry or NULL if not found
 408:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 409:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** OD_entry_t *OD_find(OD_t *od, uint16_t index);
 410:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 411:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 412:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 413:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Find sub-object with specified sub-index on OD entry returned by OD_find.
 414:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Function populates io structure with sub-object data.
 415:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 416:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @warning
 417:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Read and write functions may be called from different threads, so critical
 418:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * sections in custom functions must be observed, see @ref CO_critical_sections.
 419:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 420:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 421:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex Sub-index of the variable from the OD object.
 422:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param [out] io Structure will be populated on success.
 423:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param odOrig If true, then potential IO extension on entry will be
 424:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * ignored and access to data entry in the original OD location will be returned
 425:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 426:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 427:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 428:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_getSub(const OD_entry_t *entry, uint8_t subIndex,
 429:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                 OD_IO_t *io, bool_t odOrig);
 430:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 431:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 432:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 433:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Return index from OD entry
 434:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 435:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 436:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 437:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return OD index
 438:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 439:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline uint16_t OD_getIndex(const OD_entry_t *entry) {
 440:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return (entry != NULL) ? entry->index : 0;
 441:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 442:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 443:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 444:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 445:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Check, if OD variable is mappable to PDO or SRDO.
 446:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 447:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * If OD variable is mappable, then it may be necessary to protect read/write
 448:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * access from mainline function. See @ref CO_critical_sections.
 449:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 450:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param stream Object Dictionary stream object.
 451:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 452:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return true, if OD variable is mappable.
 453:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 454:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline bool_t OD_mappable(OD_stream_t *stream) {
 455:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return (stream != NULL)
 456:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****          ? (stream->attribute & (ODA_TRPDO | ODA_TRSRDO)) != 0 : false;
 457:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 458:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 459:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 25


 460:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 461:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Restart read or write operation on OD variable
 462:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 463:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * It is not necessary to call this function, if stream was initialized by
 464:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_getSub(). It is also not necessary to call this function, if
 465:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * previous read or write was successfully finished.
 466:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 467:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param stream Object Dictionary stream object.
 468:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 469:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline void OD_rwRestart(OD_stream_t *stream) {
 470:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (stream != NULL) stream->dataOffset = 0;
 471:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 472:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 473:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 474:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 475:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Get TPDO request flags for OD entry.
 476:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 477:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * flagsPDO can be used for @ref OD_requestTPDO() or @ref OD_TPDOtransmitted().
 478:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 479:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 480:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 481:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return pointer to flagsPDO
 482:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 483:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline uint8_t *OD_getFlagsPDO(OD_entry_t *entry) {
 484:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 485:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (entry != NULL && entry->extension != NULL) {
 486:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         return &entry->extension->flagsPDO[0];
 487:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     }
 488:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
 489:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return 0;
 490:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 491:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 492:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 493:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 494:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Request TPDO, to which OD variable is mapped
 495:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 496:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Function clears the flagPDO bit, which corresponds to OD variable at specific
 497:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * OD index and subindex. For this functionality to work, @ref OD_extension_t
 498:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * must be enabled on OD variable. If OD variable is mapped to any TPDO with
 499:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * event driven transmission, then TPDO will be transmitted after this function
 500:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * call. If OD variable is mapped to more than one TPDO with event driven
 501:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * transmission, only the first matched TPDO will be transmitted.
 502:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 503:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * TPDO event driven transmission is enabled, if TPDO communication parameter,
 504:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * transmission type is set to 0, 254 or 255. For other transmission types
 505:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * (synchronous) flagPDO bit is ignored.
 506:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 507:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param flagsPDO TPDO request flags returned by @ref OD_getFlagsPDO.
 508:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex subIndex of the OD variable.
 509:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 510:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline void OD_requestTPDO(uint8_t *flagsPDO, uint8_t subIndex) {
 511:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 512:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (flagsPDO != NULL && subIndex < (OD_FLAGS_PDO_SIZE * 8)) {
 513:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         /* clear subIndex-th bit */
 514:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         uint8_t mask = ~(1 << (subIndex & 0x07));
 515:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         flagsPDO[subIndex >> 3] &= mask;
 516:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     }
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 26


 517:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
 518:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 519:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 520:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 521:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 522:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Check if requested TPDO was transmitted
 523:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 524:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param flagsPDO TPDO request flags returned by @ref OD_getFlagsPDO.
 525:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex subIndex of the OD variable.
 526:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 527:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Return true if event driven TPDO with mapping to OD variable,
 528:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * indicated by flagsPDO and subIndex, was transmitted since last
 529:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_requestTPDO call. If there was no @ref OD_requestTPDO call yet and
 530:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * TPDO was transmitted by other event, function also returns true.
 531:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 532:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline bool_t OD_TPDOtransmitted(uint8_t *flagsPDO, uint8_t subIndex) {
 533:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 534:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (flagsPDO != NULL && subIndex < (OD_FLAGS_PDO_SIZE * 8)) {
 535:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         /* return true, if subIndex-th bit is set */
 536:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         uint8_t mask = 1 << (subIndex & 0x07);
 537:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         if ((flagsPDO[subIndex >> 3] & mask) != 0) {
 538:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****             return true;
 539:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         }
 540:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     }
 541:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
 542:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return false;
 543:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 544:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 545:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 546:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 547:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Get SDO abort code from returnCode
 548:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 549:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param returnCode Returned from some OD access functions
 550:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 551:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Corresponding @ref CO_SDO_abortCode_t
 552:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 553:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** uint32_t OD_getSDOabCode(ODR_t returnCode);
 554:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 555:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 556:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 557:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Extend OD object with own read/write functions and/or flagsPDO
 558:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 559:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This function gives application very powerful tool: definition of own IO
 560:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * access on OD object. Structure and attributes are the same as defined in
 561:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * original OD object, but data are read directly from (or written directly to)
 562:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * application specified object via custom function calls.
 563:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 564:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Before this function specifies extension, OD variables are accessed from
 565:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * original OD location. After this function specifies extension OD variables
 566:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * are accessed from read/write functions specified by extension. (Except when
 567:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * "odOrig" argument to @ref OD_getSub() is set to true.)
 568:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 569:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This function must also be used, when flagsPDO needs to be enabled for
 570:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * specific entry.
 571:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 572:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @warning
 573:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Object dictionary storage works only directly on OD variables. It does not
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 27


 574:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * access read function specified here. So, if extended OD objects needs to be
 575:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * preserved, then @ref OD_writeOriginal can be used inside custom write
 576:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * function.
 577:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 578:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @warning
 579:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Read and write functions may be called from different threads, so critical
 580:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * sections in custom functions must be observed, see @ref CO_critical_sections.
 581:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 582:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 583:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param extension Extension object, which must be initialized externally.
 584:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Extension object must exist permanently. If NULL, extension will be removed.
 585:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 586:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return "ODR_OK" on success, "ODR_IDX_NOT_EXIST" if OD object doesn't exist.
 587:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 588:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_extension_init(OD_entry_t *entry,
 589:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                       OD_extension_t *extension)
 590:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 591:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (entry == NULL) return ODR_IDX_NOT_EXIST;
 592:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     entry->extension = extension;
 593:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return ODR_OK;
 594:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 595:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 596:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 597:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 598:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @defgroup CO_ODgetSetters Getters and setters
 599:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @{
 600:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 601:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Getter and setter helper functions for accessing different types of Object
 602:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Dictionary variables.
 603:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 604:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 605:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Get variable from Object Dictionary
 606:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 607:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 608:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex Sub-index of the variable from the OD object.
 609:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param [out] val Value will be written here.
 610:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param len Size of value to retrieve from OD.
 611:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param odOrig If true, then potential IO extension on entry will be
 612:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * ignored and data in the original OD location will be returned.
 613:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 614:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Value from @ref ODR_t, "ODR_OK" in case of success. Error, if
 615:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * variable does not exist in object dictionary or it does not have the correct
 616:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * length or other reason.
 617:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 618:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_get_value(const OD_entry_t *entry, uint8_t subIndex,
 619:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                    void *val, OD_size_t len, bool_t odOrig);
 620:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 621:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get int8_t variable from Object Dictionary, see @ref OD_get_value */
 622:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_i8(const OD_entry_t *entry, uint8_t subIndex,
 623:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               int8_t *val, bool_t odOrig)
 624:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 625:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 626:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 627:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 628:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get int16_t variable from Object Dictionary, see @ref OD_get_value */
 629:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_i16(const OD_entry_t *entry, uint8_t subIndex,
 630:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int16_t *val, bool_t odOrig)
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 28


 631:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 632:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 633:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 634:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 635:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get int32_t variable from Object Dictionary, see @ref OD_get_value */
 636:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_i32(const OD_entry_t *entry, uint8_t subIndex,
 637:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int32_t *val, bool_t odOrig)
 638:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 639:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 640:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 641:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 642:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get int64_t variable from Object Dictionary, see @ref OD_get_value */
 643:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_i64(const OD_entry_t *entry, uint8_t subIndex,
 644:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int64_t *val, bool_t odOrig)
 645:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 646:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 647:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 648:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 649:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get uint8_t variable from Object Dictionary, see @ref OD_get_value */
 650:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_u8(const OD_entry_t *entry, uint8_t subIndex,
 651:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               uint8_t *val, bool_t odOrig)
 652:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 653:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 654:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 655:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 656:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get uint16_t variable from Object Dictionary, see @ref OD_get_value */
 657:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_u16(const OD_entry_t *entry, uint8_t subIndex,
 658:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                uint16_t *val, bool_t odOrig)
 659:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 660:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 661:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 662:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 663:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get uint32_t variable from Object Dictionary, see @ref OD_get_value */
 664:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_u32(const OD_entry_t *entry, uint8_t subIndex,
 665:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                uint32_t *val, bool_t odOrig)
 666:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 667:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 668:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 669:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 670:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get uint64_t variable from Object Dictionary, see @ref OD_get_value */
 671:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_u64(const OD_entry_t *entry, uint8_t subIndex,
 672:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                uint64_t *val, bool_t odOrig)
 673:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 674:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 675:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 676:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 677:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get float32_t variable from Object Dictionary, see @ref OD_get_value */
 678:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_f32(const OD_entry_t *entry, uint8_t subIndex,
 679:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                float32_t *val, bool_t odOrig)
 680:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 681:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 682:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 683:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 684:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get float64_t variable from Object Dictionary, see @ref OD_get_value */
 685:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_f64(const OD_entry_t *entry, uint8_t subIndex,
 686:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                float64_t *val, bool_t odOrig)
 687:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 29


 688:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 689:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 690:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 691:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 692:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Set variable in Object Dictionary
 693:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 694:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 695:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex Sub-index of the variable from the OD object.
 696:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param val Pointer to value to write.
 697:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param len Size of value to write.
 698:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param odOrig If true, then potential IO extension on entry will be
 699:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * ignored and data in the original OD location will be written.
 700:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 701:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Value from @ref ODR_t, "ODR_OK" in case of success. Error, if
 702:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * variable does not exist in object dictionary or it does not have the correct
 703:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * length or other reason.
 704:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 705:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_set_value(const OD_entry_t *entry, uint8_t subIndex, void *val,
 706:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                    OD_size_t len, bool_t odOrig);
 707:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 708:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Set int8_t variable in Object Dictionary, see @ref OD_set_value */
 709:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_set_i8(const OD_entry_t *entry, uint8_t subIndex,
 710:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               int8_t val, bool_t odOrig)
 711:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 712:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_set_value(entry, subIndex, &val, sizeof(val), odOrig);
 713:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 714:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 715:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Set int16_t variable in Object Dictionary, see @ref OD_set_value */
 716:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_set_i16(const OD_entry_t *entry, uint8_t subIndex,
 717:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int16_t val, bool_t odOrig)
 718:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 719:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_set_value(entry, subIndex, &val, sizeof(val), odOrig);
 720:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 721:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 722:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Set int32_t variable in Object Dictionary, see @ref OD_set_value */
 723:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_set_i32(const OD_entry_t *entry, uint8_t subIndex,
 724:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int32_t val, bool_t odOrig)
 725:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 726:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_set_value(entry, subIndex, &val, sizeof(val), odOrig);
 727:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 728:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 729:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Set int32_t variable in Object Dictionary, see @ref OD_set_value */
 730:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_set_i64(const OD_entry_t *entry, uint8_t subIndex,
 731:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int64_t val, bool_t odOrig)
 732:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 733:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_set_value(entry, subIndex, &val, sizeof(val), odOrig);
 734:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 735:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 736:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Set uint8_t variable in Object Dictionary, see @ref OD_set_value */
 737:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_set_u8(const OD_entry_t *entry, uint8_t subIndex,
 738:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               uint8_t val, bool_t odOrig)
 739:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_set_value(entry, subIndex, &val, sizeof(val), odOrig);
 741:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 742:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 743:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Set uint16_t variable in Object Dictionary, see @ref OD_set_value */
 744:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_set_u16(const OD_entry_t *entry, uint8_t subIndex,
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 30


 543              		.loc 2 744 21 is_stmt 1 view .LVU95
 544              	.LBB11:
 745:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                uint16_t val, bool_t odOrig)
 746:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 747:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_set_value(entry, subIndex, &val, sizeof(val), odOrig);
 545              		.loc 2 747 5 view .LVU96
 546              		.loc 2 747 12 is_stmt 0 view .LVU97
 547 0022 0024     		movs	r4, #0
 548 0024 0094     		str	r4, [sp]
 549 0026 0223     		movs	r3, #2
 550              	.LVL36:
 551              		.loc 2 747 12 view .LVU98
 552 0028 0DF10E02 		add	r2, sp, #14
 553              	.LVL37:
 554              		.loc 2 747 12 view .LVU99
 555 002c 2146     		mov	r1, r4
 556 002e FFF7FEFF 		bl	OD_set_value
 557              	.LVL38:
 558              		.loc 2 747 12 view .LVU100
 559              	.LBE11:
 560              	.LBE10:
 327:Core/Src/freertos.c ****   OD_set_u8(OD_find(OD, 0x6003), 0x000, OD_PERSIST_COMM.x6003_status, false);
 561              		.loc 1 327 3 is_stmt 1 view .LVU101
 562              		.loc 1 327 13 is_stmt 0 view .LVU102
 563 0032 46F20301 		movw	r1, #24579
 564 0036 3068     		ldr	r0, [r6]
 565 0038 FFF7FEFF 		bl	OD_find
 566              	.LVL39:
 567              		.loc 1 327 3 view .LVU103
 568 003c 95F8CE30 		ldrb	r3, [r5, #206]	@ zero_extendqisi2
 569              	.LVL40:
 570              		.loc 1 327 3 view .LVU104
 571 0040 8DF80E30 		strb	r3, [sp, #14]
 572              	.LVL41:
 573              	.LBB12:
 574              	.LBI12:
 737:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               uint8_t val, bool_t odOrig)
 575              		.loc 2 737 21 is_stmt 1 view .LVU105
 576              	.LBB13:
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 577              		.loc 2 740 5 view .LVU106
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 578              		.loc 2 740 12 is_stmt 0 view .LVU107
 579 0044 0094     		str	r4, [sp]
 580 0046 0123     		movs	r3, #1
 581              	.LVL42:
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 582              		.loc 2 740 12 view .LVU108
 583 0048 0DF10E02 		add	r2, sp, #14
 584              	.LVL43:
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 585              		.loc 2 740 12 view .LVU109
 586 004c 2146     		mov	r1, r4
 587 004e FFF7FEFF 		bl	OD_set_value
 588              	.LVL44:
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 589              		.loc 2 740 12 view .LVU110
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 31


 590              	.LBE13:
 591              	.LBE12:
 328:Core/Src/freertos.c ****   OD_set_u8(OD_find(OD, 0x6005), 0x000, OD_PERSIST_COMM.x6005_current_CW_CCW, false);
 592              		.loc 1 328 3 is_stmt 1 view .LVU111
 593              		.loc 1 328 13 is_stmt 0 view .LVU112
 594 0052 46F20501 		movw	r1, #24581
 595 0056 3068     		ldr	r0, [r6]
 596 0058 FFF7FEFF 		bl	OD_find
 597              	.LVL45:
 598              		.loc 1 328 3 view .LVU113
 599 005c 95F8D030 		ldrb	r3, [r5, #208]	@ zero_extendqisi2
 600              	.LVL46:
 601              		.loc 1 328 3 view .LVU114
 602 0060 8DF80E30 		strb	r3, [sp, #14]
 603              	.LVL47:
 604              	.LBB14:
 605              	.LBI14:
 737:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               uint8_t val, bool_t odOrig)
 606              		.loc 2 737 21 is_stmt 1 view .LVU115
 607              	.LBB15:
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 608              		.loc 2 740 5 view .LVU116
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 609              		.loc 2 740 12 is_stmt 0 view .LVU117
 610 0064 0094     		str	r4, [sp]
 611 0066 0123     		movs	r3, #1
 612              	.LVL48:
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 613              		.loc 2 740 12 view .LVU118
 614 0068 0DF10E02 		add	r2, sp, #14
 615              	.LVL49:
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 616              		.loc 2 740 12 view .LVU119
 617 006c 2146     		mov	r1, r4
 618 006e FFF7FEFF 		bl	OD_set_value
 619              	.LVL50:
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 620              		.loc 2 740 12 view .LVU120
 621              	.LBE15:
 622              	.LBE14:
 329:Core/Src/freertos.c ****   CO_TPDOsendRequest(&canopenNodeSTM32->canOpenStack->TPDO[0]);
 623              		.loc 1 329 3 is_stmt 1 view .LVU121
 624              		.loc 1 329 39 is_stmt 0 view .LVU122
 625 0072 074B     		ldr	r3, .L38+8
 626 0074 1B68     		ldr	r3, [r3]
 627 0076 5B69     		ldr	r3, [r3, #20]
 628              		.loc 1 329 3 view .LVU123
 629 0078 5B6B     		ldr	r3, [r3, #52]
 630              	.LVL51:
 631              	.LBB16:
 632              	.LBI16:
 633              		.file 3 "Middlewares/Third_Party/CANopenNode/301/CO_PDO.h"
   1:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
   2:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * CANopen Process Data Object protocol.
   3:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
   4:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @file        CO_PDO.h
   5:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @ingroup     CO_PDO
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 32


   6:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @author      Janez Paternoster
   7:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @copyright   2021 Janez Paternoster
   8:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
   9:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  13:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * you may not use this file except in compliance with the License.
  15:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * You may obtain a copy of the License at
  16:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  17:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  19:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Unless required by applicable law or agreed to in writing, software
  20:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * See the License for the specific language governing permissions and
  23:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * limitations under the License.
  24:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
  25:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  26:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_PDO_H
  27:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_PDO_H
  28:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  29:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #include "301/CO_ODinterface.h"
  30:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #include "301/CO_Emergency.h"
  31:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #include "301/CO_SYNC.h"
  32:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  33:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /* default configuration, see CO_config.h */
  34:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_CONFIG_PDO
  35:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_CONFIG_PDO (CO_CONFIG_RPDO_ENABLE | \
  36:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_TPDO_ENABLE | \
  37:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_RPDO_TIMERS_ENABLE | \
  38:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_TPDO_TIMERS_ENABLE | \
  39:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_PDO_SYNC_ENABLE | \
  40:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_PDO_OD_IO_ACCESS | \
  41:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_GLOBAL_RT_FLAG_CALLBACK_PRE | \
  42:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_GLOBAL_FLAG_TIMERNEXT | \
  43:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_GLOBAL_FLAG_OD_DYNAMIC)
  44:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
  45:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  46:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & (CO_CONFIG_RPDO_ENABLE | CO_CONFIG_TPDO_ENABLE)) || defined CO_DOXYGEN
  47:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  48:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifdef __cplusplus
  49:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** extern "C" {
  50:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
  51:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  52:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
  53:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @defgroup CO_PDO PDO
  54:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * CANopen Process Data Object protocol.
  55:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  56:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @ingroup CO_CANopen_301
  57:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @{
  58:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Process data objects are used for real-time data transfer with no protocol
  59:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * overhead.
  60:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  61:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * TPDO with specific identifier is transmitted by one device and recieved by
  62:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * zero or more devices as RPDO. PDO communication parameters(COB-ID,
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 33


  63:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * transmission type, etc.) are in the Object Dictionary at index 0x1400+ and
  64:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * 0x1800+. PDO mapping parameters (size and contents of the PDO) are in the
  65:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Object Dictionary at index 0x1600+ and 0x1A00+.
  66:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  67:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Features of the PDO as implemented in CANopenNode:
  68:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *  - Dynamic PDO mapping.
  69:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *  - Map granularity of one byte.
  70:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *  - Data from OD variables are accessed via @ref OD_IO_t read()/write()
  71:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    functions, which gives a great usefulness to the application.
  72:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *  - For systems with very low memory and processing capabilities there is a
  73:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    simplified @ref CO_CONFIG_PDO option, where instead of read()/write()
  74:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    access, PDO data are copied directly to/from memory locations of
  75:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    OD variables.
  76:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *  - After RPDO is received from CAN bus, its data are copied to internal
  77:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    buffer (inside fast CAN receive interrupt). Function CO_RPDO_process()
  78:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    (called by application) copies data to the mapped objects in the Object
  79:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    Dictionary. Synchronous RPDOs are processed AFTER reception of the next
  80:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    SYNC message.
  81:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *  - Function CO_TPDO_process() (called by application) sends TPDO when
  82:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    necessary. There are different transmission types possible, controlled by:
  83:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    SYNC message, event timer, @ref CO_TPDOsendRequest() by application or
  84:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    @ref OD_requestTPDO(), where application can request TPDO for OD
  85:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    variable mapped to any of them. In later case application may, for
  86:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    example, monitor change of state of the OD variable and indicate TPDO
  87:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    request on it.
  88:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  89:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @anchor CO_PDO_CAN_ID
  90:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * ### CAN identifiers for PDO
  91:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  92:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Each PDO can be configured with any valid 11-bit CAN identifier. Lower
  93:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * numbers have higher priorities on CAN bus. As a general rule, each CAN
  94:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * message is identified with own CAN-ID, which must be unique and produced by
  95:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * single source. The same is with PDO objects: Any TPDO produced on the CANopen
  96:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * network must have unique CAN-ID and there can be zero to many RPDOs (from
  97:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * different devices) configured to match the CAN-ID of the TPDO of interest.
  98:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  99:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * CANopen standard provides pre-defined connection sets for four RPDOs and four
 100:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * TPDOs on each device with specific 7-bit Node-ID. These are default values
 101:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * and are usable in configuration, where CANopen network contains a master
 102:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * device, which directly communicates with many slaves. In de-centralized
 103:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * systems, where devices operate without a master, it makes sense to configure
 104:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * CAN-IDs of the RPDOs to the non-default values.
 105:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 106:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Default CAN identifiers for first four TPDOs on device with specific CANopen
 107:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Node-Id are: 0x180+NodeId, 0x280+NodeId, 0x380+NodeId and 0x480+NodeId.
 108:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 109:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Default CAN identifiers for first four RPDOs on device with specific CANopen
 110:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Node-Id are: 0x200+NodeId, 0x300+NodeId, 0x400+NodeId and 0x500+NodeId.
 111:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 112:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * CANopenNode handles default (pre-defined) CAN-IDs. If it is detected, that
 113:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * PDO is configured with default CAN-ID (when writing to OD variable PDO
 114:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * communication parameter, COB-ID), then COB-ID is stored without Node-Id to
 115:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * the Object Dictionary. If Node-ID is changed, then COB-ID will always contain
 116:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * correct default CAN-ID (default CAN-ID + Node-ID). If PDO is configured with
 117:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * non-default CAN-ID, then it will be stored to the Object Dictionary as is.
 118:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 119:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * If configuration CO_CONFIG_FLAG_OD_DYNAMIC is enabled in @ref CO_CONFIG_PDO,
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 34


 120:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * then PDOs can be configured dynamically, also in NMT operational state.
 121:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Otherwise PDOs are configured only in reset communication section and also
 122:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * default CAN-IDs are always stored to OD as is, no default node-id is handled.
 123:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 124:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Configure PDO by writing to the OD variables in the following procedure:
 125:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * - Disable the PDO by setting bit-31 to 1 in PDO communication parameter,
 126:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *   COB-ID
 127:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * - Node-Id can be configured only when PDO is disabled.
 128:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * - Disable mapping by setting PDO mapping parameter, sub index 0 to 0
 129:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * - Configure mapping
 130:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * - Enable mapping by setting PDO mapping param, sub 0 to number of mapped
 131:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *   objects
 132:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * - Enable the PDO by setting bit-31 to 0 in PDO communication parameter,
 133:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *   COB-ID
 134:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 135:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 136:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /** Maximum size of PDO message, 8 for standard CAN */
 137:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_PDO_MAX_SIZE
 138:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_PDO_MAX_SIZE 8
 139:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 140:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 141:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /** Maximum number of entries, which can be mapped to PDO, 8 for standard CAN,
 142:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * may be less to preserve RAM usage */
 143:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_PDO_MAX_MAPPED_ENTRIES
 144:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_PDO_MAX_MAPPED_ENTRIES 8
 145:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 146:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 147:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /** Number of CANopen RPDO objects, which uses default CAN indentifiers.
 148:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * By default first four RPDOs have pre-defined CAN identifiers, which depends
 149:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * on node-id. This constant may be set to 0 to disable functionality or set
 150:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * to any other value. For example, if there are several logical devices inside
 151:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * single CANopen device, then more than four RPDOs may have pre-defined CAN
 152:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * identifiers. In that case RPDO5 has CAN_ID=0x200+NodeId+1, RPDO6 has
 153:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * CAN_ID=0x300+NodeId+1, RPDO9 has CAN_ID=0x200+NodeId+2 and so on. */
 154:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_RPDO_DEFAULT_CANID_COUNT
 155:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_RPDO_DEFAULT_CANID_COUNT 4
 156:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 157:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 158:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /** Number of CANopen TPDO objects, which uses default CAN indentifiers.
 159:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * If value is more than four, then pre-defined pre-defined CAN identifiers are:
 160:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * TPDO5 has CAN_ID=0x180+NodeId+1, TPDO6 has CAN_ID=0x280+NodeId+1,
 161:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * TPDO9 has CAN_ID=0x180+NodeId+2 and so on.
 162:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * For description see @ref CO_RPDO_DEFAULT_CANID_COUNT. */
 163:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_TPDO_DEFAULT_CANID_COUNT
 164:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_TPDO_DEFAULT_CANID_COUNT 4
 165:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 166:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 167:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_PDO_OWN_TYPES
 168:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /** Variable of type CO_PDO_size_t contains data length in bytes of PDO */
 169:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** typedef uint8_t CO_PDO_size_t;
 170:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 171:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 172:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 173:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * PDO transmission Types
 174:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 175:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** typedef enum {
 176:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_TRANSM_TYPE_SYNC_ACYCLIC = 0, /**< synchronous (acyclic) */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 35


 177:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_TRANSM_TYPE_SYNC_1 = 1, /**< synchronous (cyclic every sync) */
 178:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_TRANSM_TYPE_SYNC_240 = 0xF0, /**< synchronous (cyclic every 240-th
 179:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     sync) */
 180:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO = 0xFE, /**< event-driven, lower value
 181:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     (manufacturer specific),  */
 182:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_TRANSM_TYPE_SYNC_EVENT_HI = 0xFF /**< event-driven, higher value
 183:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     (device profile and application profile specific) */
 184:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** } CO_PDO_transmissionTypes_t;
 185:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 186:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 187:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * PDO object, common properties
 188:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 189:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** typedef struct {
 190:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_xPDO_init() */
 191:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_EM_t *em;
 192:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_xPDO_init() */
 193:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_CANmodule_t *CANdev;
 194:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** True, if PDO is enabled and valid */
 195:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     bool_t valid;
 196:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Data length of the received PDO message. Calculated from mapping */
 197:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_size_t dataLength;
 198:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Number of mapped objects in PDO */
 199:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t mappedObjectsCount;
 200:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_OD_IO_ACCESS) || defined CO_DOXYGEN
 201:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Object dictionary interface for all mapped entries. OD_IO.dataOffset has
 202:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * special usage with PDO. It stores information about mappedLength of
 203:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * the variable. mappedLength can be less or equal to the OD_IO.dataLength.
 204:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * mappedLength greater than OD_IO.dataLength indicates erroneous mapping.
 205:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * OD_IO.dataOffset is set to 0 before read/write function call and after
 206:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * the call OD_IO.dataOffset is set back to mappedLength. */
 207:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     OD_IO_t OD_IO[CO_PDO_MAX_MAPPED_ENTRIES];
 208:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****   #if OD_FLAGS_PDO_SIZE > 0
 209:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Pointer to byte, which contains PDO flag bit from @ref OD_extension_t */
 210:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t *flagPDObyte[CO_PDO_MAX_MAPPED_ENTRIES];
 211:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Bitmask for the flagPDObyte */
 212:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t flagPDObitmask[CO_PDO_MAX_MAPPED_ENTRIES];
 213:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****   #endif
 214:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #else
 215:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /* Pointers to data objects inside OD, where PDO will be copied */
 216:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t *mapPointer[CO_PDO_MAX_SIZE];
 217:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****   #if OD_FLAGS_PDO_SIZE > 0
 218:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t *flagPDObyte[CO_PDO_MAX_SIZE];
 219:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t flagPDObitmask[CO_PDO_MAX_SIZE];
 220:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****   #endif
 221:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 222:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC) || defined CO_DOXYGEN
 223:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** True for RPDO, false for TPDO */
 224:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     bool_t isRPDO;
 225:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_xPDO_init() */
 226:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     OD_t *OD;
 227:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_xPDO_init() */
 228:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint16_t CANdevIdx;
 229:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_xPDO_init() */
 230:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint16_t preDefinedCanId;
 231:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Currently configured CAN identifier */
 232:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint16_t configuredCanId;
 233:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Extension for OD object */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 36


 234:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     OD_extension_t OD_communicationParam_ext;
 235:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Extension for OD object */
 236:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     OD_extension_t OD_mappingParam_extension;
 237:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 238:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** } CO_PDO_common_t;
 239:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 240:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 241:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /*******************************************************************************
 242:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *      R P D O
 243:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  ******************************************************************************/
 244:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE) || defined CO_DOXYGEN
 245:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 246:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Number of buffers for received CAN message for RPDO
 247:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 248:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE) || defined CO_DOXYGEN
 249:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_RPDO_CAN_BUFFERS_COUNT 2
 250:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #else
 251:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_RPDO_CAN_BUFFERS_COUNT 1
 252:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 253:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 254:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 255:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 256:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * RPDO object.
 257:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 258:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** typedef struct {
 259:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** PDO common properties, must be first element in this object */
 260:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_common_t PDO_common;
 261:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Variable indicates, if new PDO message received from CAN bus. */
 262:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     volatile void *CANrxNew[CO_RPDO_CAN_BUFFERS_COUNT];
 263:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** CO_PDO_MAX_SIZE data bytes of the received message. */
 264:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t CANrxData[CO_RPDO_CAN_BUFFERS_COUNT][CO_PDO_MAX_SIZE];
 265:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Indication of RPDO length errors, use with CO_PDO_receiveErrors_t */
 266:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t receiveError;
 267:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE) || defined CO_DOXYGEN
 268:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_RPDO_init() */
 269:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_SYNC_t *SYNC;
 270:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** True if transmissionType <= 240 */
 271:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     bool_t synchronous;
 272:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 273:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_RPDO_TIMERS_ENABLE) || defined CO_DOXYGEN
 274:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Maximum timeout time between received PDOs in microseconds. Configurable
 275:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * by OD variable RPDO communication parameter, event-timer. */
 276:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint32_t timeoutTime_us;
 277:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Timeout timer variable in microseconds */
 278:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint32_t timeoutTimer;
 279:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 280:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 281:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_RPDO_initCallbackPre() or NULL */
 282:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     void (*pFunctSignalPre)(void *object);
 283:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_RPDO_initCallbackPre() or NULL */
 284:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     void *functSignalObjectPre;
 285:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 286:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** } CO_RPDO_t;
 287:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 288:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 289:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 290:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Initialize RPDO object.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 37


 291:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 292:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Function must be called in the end of the communication reset section, after
 293:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * all application initialization. Otherwise mapping to application OD variables
 294:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * will not be correct.
 295:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 296:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param RPDO This object will be initialized.
 297:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param OD Object Dictionary.
 298:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param em Emergency object.
 299:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param SYNC SYNC object, may be NULL.
 300:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param preDefinedCanId CAN identifier from pre-defined connection set,
 301:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * including node-id for first four PDOs, or 0 otherwise, see @ref CO_PDO_CAN_ID
 302:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param OD_14xx_RPDOCommPar OD entry for 0x1400+ - "RPDO communication
 303:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * parameter", entry is required.
 304:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param OD_16xx_RPDOMapPar OD entry for 0x1600+ - "RPDO mapping parameter",
 305:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * entry is required.
 306:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param CANdevRx CAN device for PDO reception.
 307:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param CANdevRxIdx Index of receive buffer in the above CAN device.
 308:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param [out] errInfo Additional information in case of error, may be NULL.
 309:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 310:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @return #CO_ReturnError_t CO_ERROR_NO on success.
 311:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 312:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** CO_ReturnError_t CO_RPDO_init(CO_RPDO_t *RPDO,
 313:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               OD_t *OD,
 314:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               CO_EM_t *em,
 315:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE) || defined CO_DOXYGEN
 316:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               CO_SYNC_t *SYNC,
 317:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 318:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               uint16_t preDefinedCanId,
 319:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               OD_entry_t *OD_14xx_RPDOCommPar,
 320:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               OD_entry_t *OD_16xx_RPDOMapPar,
 321:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               CO_CANmodule_t *CANdevRx,
 322:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               uint16_t CANdevRxIdx,
 323:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               uint32_t *errInfo);
 324:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 325:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 326:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 327:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 328:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Initialize RPDO callback function.
 329:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 330:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Function initializes optional callback function, which should immediately
 331:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * start processing of CO_RPDO_process() function.
 332:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Callback is called after RPDO message is received from the CAN bus.
 333:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 334:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param RPDO This object.
 335:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param object Pointer to object, which will be passed to pFunctSignalPre().
 336:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param pFunctSignalPre Pointer to the callback function. Not called if NULL.
 337:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 338:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** void CO_RPDO_initCallbackPre(CO_RPDO_t *RPDO,
 339:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                              void *object,
 340:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                              void (*pFunctSignalPre)(void *object));
 341:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 342:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 343:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 344:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 345:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Process received PDO messages.
 346:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 347:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Function must be called cyclically in any NMT state. It copies data from RPDO
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 38


 348:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * to Object Dictionary variables if: new PDO receives and PDO is valid and NMT
 349:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * operating state is operational. Synchronous RPDOs are processed after next
 350:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * SYNC message.
 351:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 352:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param RPDO This object.
 353:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param timeDifference_us Time difference from previous function call.
 354:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param [out] timerNext_us info to OS - see CO_process().
 355:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param NMTisOperational True if this node is in NMT_OPERATIONAL state.
 356:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param syncWas True, if CANopen SYNC message was just received or
 357:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * transmitted.
 358:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 359:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** void CO_RPDO_process(CO_RPDO_t *RPDO,
 360:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_RPDO_TIMERS_ENABLE) || defined CO_DOXYGEN
 361:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                      uint32_t timeDifference_us,
 362:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                      uint32_t *timerNext_us,
 363:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 364:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                      bool_t NMTisOperational,
 365:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                      bool_t syncWas);
 366:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif /* (CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE */
 367:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 368:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 369:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /*******************************************************************************
 370:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *      T P D O
 371:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  ******************************************************************************/
 372:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_TPDO_ENABLE) || defined CO_DOXYGEN
 373:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 374:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * TPDO object.
 375:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 376:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** typedef struct {
 377:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** PDO common properties, must be first element in this object */
 378:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_common_t PDO_common;
 379:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** CAN transmit buffer inside CANdev */
 380:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_CANtx_t *CANtxBuff;
 381:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Copy of the variable from object dictionary */
 382:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t transmissionType;
 383:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** If this flag is set and TPDO is event driven (transmission type is 0,
 384:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * 254 or 255), then PDO will be sent by CO_TPDO_process(). */
 385:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     bool_t sendRequest;
 386:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE) || defined CO_DOXYGEN
 387:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_TPDO_init() */
 388:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_SYNC_t *SYNC;
 389:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Copy of the variable from object dictionary */
 390:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t syncStartValue;
 391:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** SYNC counter used for PDO sending */
 392:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t syncCounter;
 393:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 394:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE) || defined CO_DOXYGEN
 395:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Inhibit time from object dictionary translated to microseconds */
 396:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint32_t inhibitTime_us;
 397:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Event time from object dictionary translated to microseconds */
 398:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint32_t eventTime_us;
 399:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Inhibit timer variable in microseconds */
 400:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint32_t inhibitTimer;
 401:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Event timer variable in microseconds */
 402:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint32_t eventTimer;
 403:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 404:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** } CO_TPDO_t;
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 39


 405:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 406:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 407:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 408:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Initialize TPDO object.
 409:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 410:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Function must be called in the end of the communication reset section, after
 411:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * all application initialization. Otherwise mapping to application OD variables
 412:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * will not be correct.
 413:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 414:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param TPDO This object will be initialized.
 415:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param OD Object Dictionary.
 416:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param em Emergency object.
 417:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param SYNC SYNC object, may be NULL.
 418:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param preDefinedCanId CAN identifier from pre-defined connection set,
 419:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * including node-id for first four PDOs, or 0 otherwise, see @ref CO_PDO_CAN_ID
 420:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param OD_18xx_TPDOCommPar OD entry for 0x1800+ - "TPDO communication
 421:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * parameter", entry is required.
 422:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param OD_1Axx_TPDOMapPar OD entry for 0x1A00+ - "TPDO mapping parameter",
 423:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * entry is required.
 424:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param CANdevTx CAN device used for PDO transmission.
 425:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param CANdevTxIdx Index of transmit buffer in the above CAN device.
 426:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param [out] errInfo Additional information in case of error, may be NULL.
 427:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 428:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @return #CO_ReturnError_t CO_ERROR_NO on success.
 429:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 430:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** CO_ReturnError_t CO_TPDO_init(CO_TPDO_t *TPDO,
 431:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               OD_t *OD,
 432:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               CO_EM_t *em,
 433:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE) || defined CO_DOXYGEN
 434:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               CO_SYNC_t *SYNC,
 435:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 436:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               uint16_t preDefinedCanId,
 437:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               OD_entry_t *OD_18xx_TPDOCommPar,
 438:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               OD_entry_t *OD_1Axx_TPDOMapPar,
 439:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               CO_CANmodule_t *CANdevTx,
 440:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               uint16_t CANdevTxIdx,
 441:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               uint32_t *errInfo);
 442:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 443:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 444:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 445:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Request transmission of TPDO message.
 446:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 447:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * If TPDO transmission type is 0, 254 or 255, then TPDO will be sent by
 448:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @ref CO_TPDO_process() after inhibit timer expires. See also
 449:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @ref OD_requestTPDO() and @ref OD_TPDOtransmitted().
 450:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 451:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param TPDO TPDO object.
 452:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 453:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** static inline void CO_TPDOsendRequest(CO_TPDO_t *TPDO) {
 634              		.loc 3 453 20 is_stmt 1 view .LVU124
 635              	.LBB17:
 454:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     if (TPDO != NULL) TPDO->sendRequest = true;
 636              		.loc 3 454 5 view .LVU125
 637              		.loc 3 454 8 is_stmt 0 view .LVU126
 638 007a 13B1     		cbz	r3, .L35
 639              		.loc 3 454 23 is_stmt 1 view .LVU127
 640              		.loc 3 454 41 is_stmt 0 view .LVU128
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 40


 641 007c 0122     		movs	r2, #1
 642 007e C3F85021 		str	r2, [r3, #336]
 643              	.LVL52:
 644              	.L35:
 645              		.loc 3 454 41 view .LVU129
 646              	.LBE17:
 647              	.LBE16:
 330:Core/Src/freertos.c **** }
 648              		.loc 1 330 1 view .LVU130
 649 0082 04B0     		add	sp, sp, #16
 650              	.LCFI9:
 651              		.cfi_def_cfa_offset 16
 652              		@ sp needed
 653 0084 70BD     		pop	{r4, r5, r6, pc}
 654              	.L39:
 655 0086 00BF     		.align	2
 656              	.L38:
 657 0088 00000000 		.word	OD_PERSIST_COMM
 658 008c 00000000 		.word	OD
 659 0090 00000000 		.word	canopenNodeSTM32
 660              		.cfi_endproc
 661              	.LFE177:
 663              		.section	.text.canopen_task,"ax",%progbits
 664              		.align	1
 665              		.global	canopen_task
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 670              	canopen_task:
 671              	.LVL53:
 672              	.LFB170:
 188:Core/Src/freertos.c ****   /* USER CODE BEGIN canopen_task */
 673              		.loc 1 188 1 is_stmt 1 view -0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 24
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 188:Core/Src/freertos.c ****   /* USER CODE BEGIN canopen_task */
 677              		.loc 1 188 1 is_stmt 0 view .LVU132
 678 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 679              	.LCFI10:
 680              		.cfi_def_cfa_offset 20
 681              		.cfi_offset 4, -20
 682              		.cfi_offset 5, -16
 683              		.cfi_offset 6, -12
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 87B0     		sub	sp, sp, #28
 687              	.LCFI11:
 688              		.cfi_def_cfa_offset 48
 190:Core/Src/freertos.c ****   canOpenNodeSTM32.CANHandle = &hcan;
 689              		.loc 1 190 3 is_stmt 1 view .LVU133
 191:Core/Src/freertos.c ****   canOpenNodeSTM32.HWInitFunction = MX_CAN_Init;
 690              		.loc 1 191 3 view .LVU134
 191:Core/Src/freertos.c ****   canOpenNodeSTM32.HWInitFunction = MX_CAN_Init;
 691              		.loc 1 191 30 is_stmt 0 view .LVU135
 692 0004 384B     		ldr	r3, .L53
 693 0006 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 41


 192:Core/Src/freertos.c ****   canOpenNodeSTM32.timerHandle = &htim17;
 694              		.loc 1 192 3 is_stmt 1 view .LVU136
 192:Core/Src/freertos.c ****   canOpenNodeSTM32.timerHandle = &htim17;
 695              		.loc 1 192 35 is_stmt 0 view .LVU137
 696 0008 384B     		ldr	r3, .L53+4
 697 000a 0393     		str	r3, [sp, #12]
 193:Core/Src/freertos.c ****   canOpenNodeSTM32.desiredNodeID = 17;
 698              		.loc 1 193 3 is_stmt 1 view .LVU138
 193:Core/Src/freertos.c ****   canOpenNodeSTM32.desiredNodeID = 17;
 699              		.loc 1 193 32 is_stmt 0 view .LVU139
 700 000c 384B     		ldr	r3, .L53+8
 701 000e 0193     		str	r3, [sp, #4]
 194:Core/Src/freertos.c ****   canOpenNodeSTM32.baudrate = 125;
 702              		.loc 1 194 3 is_stmt 1 view .LVU140
 194:Core/Src/freertos.c ****   canOpenNodeSTM32.baudrate = 125;
 703              		.loc 1 194 34 is_stmt 0 view .LVU141
 704 0010 1123     		movs	r3, #17
 705 0012 8DF80030 		strb	r3, [sp]
 195:Core/Src/freertos.c ****   canopen_app_init(&canOpenNodeSTM32);
 706              		.loc 1 195 3 is_stmt 1 view .LVU142
 195:Core/Src/freertos.c ****   canopen_app_init(&canOpenNodeSTM32);
 707              		.loc 1 195 29 is_stmt 0 view .LVU143
 708 0016 7D23     		movs	r3, #125
 709 0018 8DF80230 		strb	r3, [sp, #2]
 196:Core/Src/freertos.c ****   int8_t pre_target_angle = OD_PERSIST_COMM.x6001_target_angle;
 710              		.loc 1 196 3 is_stmt 1 view .LVU144
 711 001c 6846     		mov	r0, sp
 712              	.LVL54:
 196:Core/Src/freertos.c ****   int8_t pre_target_angle = OD_PERSIST_COMM.x6001_target_angle;
 713              		.loc 1 196 3 is_stmt 0 view .LVU145
 714 001e FFF7FEFF 		bl	canopen_app_init
 715              	.LVL55:
 197:Core/Src/freertos.c ****   uint8_t pre_target_CW_CCW = OD_PERSIST_COMM.x6004_target_CW_CCW;
 716              		.loc 1 197 3 is_stmt 1 view .LVU146
 197:Core/Src/freertos.c ****   uint8_t pre_target_CW_CCW = OD_PERSIST_COMM.x6004_target_CW_CCW;
 717              		.loc 1 197 10 is_stmt 0 view .LVU147
 718 0022 344B     		ldr	r3, .L53+12
 719 0024 93F9CD60 		ldrsb	r6, [r3, #205]
 720              	.LVL56:
 198:Core/Src/freertos.c ****   db_target_angle = OD_PERSIST_COMM.x6001_target_angle;
 721              		.loc 1 198 3 is_stmt 1 view .LVU148
 198:Core/Src/freertos.c ****   db_target_angle = OD_PERSIST_COMM.x6001_target_angle;
 722              		.loc 1 198 11 is_stmt 0 view .LVU149
 723 0028 93F8CF70 		ldrb	r7, [r3, #207]	@ zero_extendqisi2
 724              	.LVL57:
 199:Core/Src/freertos.c ****   /* Infinite loop */
 725              		.loc 1 199 3 is_stmt 1 view .LVU150
 199:Core/Src/freertos.c ****   /* Infinite loop */
 726              		.loc 1 199 19 is_stmt 0 view .LVU151
 727 002c 3046     		mov	r0, r6
 728 002e FFF7FEFF 		bl	__aeabi_i2d
 729              	.LVL58:
 730 0032 314B     		ldr	r3, .L53+16
 731 0034 C3E90001 		strd	r0, [r3]
 732 0038 24E0     		b	.L47
 733              	.L51:
 204:Core/Src/freertos.c ****     {
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 42


 734              		.loc 1 204 82 discriminator 1 view .LVU152
 735 003a 93F8CF30 		ldrb	r3, [r3, #207]	@ zero_extendqisi2
 204:Core/Src/freertos.c ****     {
 736              		.loc 1 204 64 discriminator 1 view .LVU153
 737 003e BB42     		cmp	r3, r7
 738 0040 27D1     		bne	.L41
 739 0042 1CE0     		b	.L42
 740              	.L52:
 209:Core/Src/freertos.c ****         TPDO_tarnsmit(6, 99);
 741              		.loc 1 209 9 is_stmt 1 view .LVU154
 209:Core/Src/freertos.c ****         TPDO_tarnsmit(6, 99);
 742              		.loc 1 209 25 is_stmt 0 view .LVU155
 743 0044 2C4B     		ldr	r3, .L53+16
 744 0046 0020     		movs	r0, #0
 745 0048 2C49     		ldr	r1, .L53+20
 746 004a C3E90001 		strd	r0, [r3]
 210:Core/Src/freertos.c ****       }
 747              		.loc 1 210 9 is_stmt 1 view .LVU156
 748 004e 6321     		movs	r1, #99
 749 0050 0620     		movs	r0, #6
 750 0052 FFF7FEFF 		bl	TPDO_tarnsmit
 751              	.LVL59:
 752 0056 0DE0     		b	.L44
 753              	.L45:
 216:Core/Src/freertos.c ****       {
 754              		.loc 1 216 12 view .LVU157
 216:Core/Src/freertos.c ****       {
 755              		.loc 1 216 15 is_stmt 0 view .LVU158
 756 0058 1428     		cmp	r0, #20
 757 005a 04DD     		ble	.L46
 216:Core/Src/freertos.c ****       {
 758              		.loc 1 216 74 discriminator 1 view .LVU159
 759 005c 254B     		ldr	r3, .L53+12
 760 005e 93F8CF30 		ldrb	r3, [r3, #207]	@ zero_extendqisi2
 216:Core/Src/freertos.c ****       {
 761              		.loc 1 216 56 discriminator 1 view .LVU160
 762 0062 012B     		cmp	r3, #1
 763 0064 2CD0     		beq	.L49
 764              	.L46:
 221:Core/Src/freertos.c ****       {
 765              		.loc 1 221 12 is_stmt 1 view .LVU161
 221:Core/Src/freertos.c ****       {
 766              		.loc 1 221 15 is_stmt 0 view .LVU162
 767 0066 1328     		cmp	r0, #19
 768 0068 04DC     		bgt	.L44
 221:Core/Src/freertos.c ****       {
 769              		.loc 1 221 74 discriminator 1 view .LVU163
 770 006a 224B     		ldr	r3, .L53+12
 771 006c 93F8CF30 		ldrb	r3, [r3, #207]	@ zero_extendqisi2
 221:Core/Src/freertos.c ****       {
 772              		.loc 1 221 56 discriminator 1 view .LVU164
 773 0070 012B     		cmp	r3, #1
 774 0072 2FD0     		beq	.L50
 775              	.L44:
 225:Core/Src/freertos.c ****       pre_target_CW_CCW = OD_PERSIST_COMM.x6004_target_CW_CCW;
 776              		.loc 1 225 7 is_stmt 1 view .LVU165
 225:Core/Src/freertos.c ****       pre_target_CW_CCW = OD_PERSIST_COMM.x6004_target_CW_CCW;
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 43


 777              		.loc 1 225 24 is_stmt 0 view .LVU166
 778 0074 1F4B     		ldr	r3, .L53+12
 779 0076 93F9CD60 		ldrsb	r6, [r3, #205]
 780              	.LVL60:
 226:Core/Src/freertos.c ****     }
 781              		.loc 1 226 7 is_stmt 1 view .LVU167
 226:Core/Src/freertos.c ****     }
 782              		.loc 1 226 25 is_stmt 0 view .LVU168
 783 007a 93F8CF70 		ldrb	r7, [r3, #207]	@ zero_extendqisi2
 784              	.LVL61:
 785              	.L42:
 228:Core/Src/freertos.c ****   }
 786              		.loc 1 228 5 is_stmt 1 view .LVU169
 787 007e 0120     		movs	r0, #1
 788 0080 FFF7FEFF 		bl	vTaskDelay
 789              	.LVL62:
 201:Core/Src/freertos.c ****   {
 790              		.loc 1 201 9 view .LVU170
 791              	.L47:
 201:Core/Src/freertos.c ****   {
 792              		.loc 1 201 3 view .LVU171
 203:Core/Src/freertos.c ****     if (OD_PERSIST_COMM.x6001_target_angle != pre_target_angle || OD_PERSIST_COMM.x6004_target_CW_C
 793              		.loc 1 203 5 view .LVU172
 794 0084 FFF7FEFF 		bl	canopen_app_process
 795              	.LVL63:
 204:Core/Src/freertos.c ****     {
 796              		.loc 1 204 5 view .LVU173
 204:Core/Src/freertos.c ****     {
 797              		.loc 1 204 24 is_stmt 0 view .LVU174
 798 0088 1A4B     		ldr	r3, .L53+12
 799 008a 93F9CD00 		ldrsb	r0, [r3, #205]
 204:Core/Src/freertos.c ****     {
 800              		.loc 1 204 8 view .LVU175
 801 008e B042     		cmp	r0, r6
 802 0090 D3D0     		beq	.L51
 803              	.L41:
 206:Core/Src/freertos.c ****       if (OD_PERSIST_COMM.x6001_target_angle > 40 && OD_PERSIST_COMM.x6004_target_CW_CCW == 0)
 804              		.loc 1 206 7 is_stmt 1 view .LVU176
 206:Core/Src/freertos.c ****       if (OD_PERSIST_COMM.x6001_target_angle > 40 && OD_PERSIST_COMM.x6004_target_CW_CCW == 0)
 805              		.loc 1 206 24 is_stmt 0 view .LVU177
 806 0092 1B4B     		ldr	r3, .L53+24
 807 0094 0122     		movs	r2, #1
 808 0096 1A70     		strb	r2, [r3]
 207:Core/Src/freertos.c ****       {
 809              		.loc 1 207 7 is_stmt 1 view .LVU178
 207:Core/Src/freertos.c ****       {
 810              		.loc 1 207 10 is_stmt 0 view .LVU179
 811 0098 2828     		cmp	r0, #40
 812 009a 04DD     		ble	.L43
 207:Core/Src/freertos.c ****       {
 813              		.loc 1 207 69 discriminator 1 view .LVU180
 814 009c 154B     		ldr	r3, .L53+12
 815 009e 93F8CF30 		ldrb	r3, [r3, #207]	@ zero_extendqisi2
 207:Core/Src/freertos.c ****       {
 816              		.loc 1 207 51 discriminator 1 view .LVU181
 817 00a2 002B     		cmp	r3, #0
 818 00a4 CED0     		beq	.L52
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 44


 819              	.L43:
 212:Core/Src/freertos.c ****       {
 820              		.loc 1 212 12 is_stmt 1 view .LVU182
 212:Core/Src/freertos.c ****       {
 821              		.loc 1 212 15 is_stmt 0 view .LVU183
 822 00a6 2728     		cmp	r0, #39
 823 00a8 D6DC     		bgt	.L45
 212:Core/Src/freertos.c ****       {
 824              		.loc 1 212 74 discriminator 1 view .LVU184
 825 00aa 124B     		ldr	r3, .L53+12
 826 00ac 93F8CF30 		ldrb	r3, [r3, #207]	@ zero_extendqisi2
 212:Core/Src/freertos.c ****       {
 827              		.loc 1 212 56 discriminator 1 view .LVU185
 828 00b0 002B     		cmp	r3, #0
 829 00b2 D1D1     		bne	.L45
 214:Core/Src/freertos.c ****       }
 830              		.loc 1 214 9 is_stmt 1 view .LVU186
 214:Core/Src/freertos.c ****       }
 831              		.loc 1 214 27 is_stmt 0 view .LVU187
 832 00b4 FFF7FEFF 		bl	__aeabi_i2d
 833              	.LVL64:
 214:Core/Src/freertos.c ****       }
 834              		.loc 1 214 25 view .LVU188
 835 00b8 0F4B     		ldr	r3, .L53+16
 836 00ba C3E90001 		strd	r0, [r3]
 837 00be D9E7     		b	.L44
 838              	.L49:
 218:Core/Src/freertos.c ****         TPDO_tarnsmit(6, 99);
 839              		.loc 1 218 9 is_stmt 1 view .LVU189
 218:Core/Src/freertos.c ****         TPDO_tarnsmit(6, 99);
 840              		.loc 1 218 25 is_stmt 0 view .LVU190
 841 00c0 0D4B     		ldr	r3, .L53+16
 842 00c2 0020     		movs	r0, #0
 843 00c4 0F49     		ldr	r1, .L53+28
 844 00c6 C3E90001 		strd	r0, [r3]
 219:Core/Src/freertos.c ****       }
 845              		.loc 1 219 9 is_stmt 1 view .LVU191
 846 00ca 6321     		movs	r1, #99
 847 00cc 0620     		movs	r0, #6
 848 00ce FFF7FEFF 		bl	TPDO_tarnsmit
 849              	.LVL65:
 850 00d2 CFE7     		b	.L44
 851              	.L50:
 223:Core/Src/freertos.c ****       }
 852              		.loc 1 223 9 view .LVU192
 223:Core/Src/freertos.c ****       }
 853              		.loc 1 223 27 is_stmt 0 view .LVU193
 854 00d4 FFF7FEFF 		bl	__aeabi_i2d
 855              	.LVL66:
 223:Core/Src/freertos.c ****       }
 856              		.loc 1 223 70 view .LVU194
 857 00d8 0446     		mov	r4, r0
 858 00da 01F10045 		add	r5, r1, #-2147483648
 223:Core/Src/freertos.c ****       }
 859              		.loc 1 223 25 view .LVU195
 860 00de 064B     		ldr	r3, .L53+16
 861 00e0 C3E90045 		strd	r4, [r3]
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 45


 862 00e4 C6E7     		b	.L44
 863              	.L54:
 864 00e6 00BF     		.align	2
 865              	.L53:
 866 00e8 00000000 		.word	hcan
 867 00ec 00000000 		.word	MX_CAN_Init
 868 00f0 00000000 		.word	htim17
 869 00f4 00000000 		.word	OD_PERSIST_COMM
 870 00f8 00000000 		.word	.LANCHOR5
 871 00fc 00804140 		.word	1078034432
 872 0100 00000000 		.word	.LANCHOR14
 873 0104 000034C0 		.word	-1070333952
 874              		.cfi_endproc
 875              	.LFE170:
 877              		.global	__aeabi_dcmpgt
 878              		.section	.text.PID_protection,"ax",%progbits
 879              		.align	1
 880              		.global	PID_protection
 881              		.syntax unified
 882              		.thumb
 883              		.thumb_func
 885              	PID_protection:
 886              	.LFB172:
 258:Core/Src/freertos.c **** 
 887              		.loc 1 258 1 is_stmt 1 view -0
 888              		.cfi_startproc
 889              		@ args = 0, pretend = 0, frame = 0
 890              		@ frame_needed = 0, uses_anonymous_args = 0
 891 0000 08B5     		push	{r3, lr}
 892              	.LCFI12:
 893              		.cfi_def_cfa_offset 8
 894              		.cfi_offset 3, -8
 895              		.cfi_offset 14, -4
 260:Core/Src/freertos.c ****   {
 896              		.loc 1 260 3 view .LVU197
 260:Core/Src/freertos.c ****   {
 897              		.loc 1 260 6 is_stmt 0 view .LVU198
 898 0002 0022     		movs	r2, #0
 899 0004 114B     		ldr	r3, .L62
 900 0006 1249     		ldr	r1, .L62+4
 901 0008 D1E90001 		ldrd	r0, [r1]
 902 000c FFF7FEFF 		bl	__aeabi_dcmpgt
 903              	.LVL67:
 904 0010 38B9     		cbnz	r0, .L56
 260:Core/Src/freertos.c ****   {
 905              		.loc 1 260 26 discriminator 1 view .LVU199
 906 0012 0022     		movs	r2, #0
 907 0014 0F4B     		ldr	r3, .L62+8
 908 0016 1049     		ldr	r1, .L62+12
 909 0018 D1E90001 		ldrd	r0, [r1]
 910 001c FFF7FEFF 		bl	__aeabi_dcmplt
 911              	.LVL68:
 912 0020 30B1     		cbz	r0, .L60
 913              	.L56:
 262:Core/Src/freertos.c ****     TPDO_tarnsmit(2, 99); // 2.reach limit
 914              		.loc 1 262 5 is_stmt 1 view .LVU200
 915 0022 FFF7FEFF 		bl	PID_Error_handler
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 46


 916              	.LVL69:
 263:Core/Src/freertos.c ****   }
 917              		.loc 1 263 5 view .LVU201
 918 0026 6321     		movs	r1, #99
 919 0028 0220     		movs	r0, #2
 920 002a FFF7FEFF 		bl	TPDO_tarnsmit
 921              	.LVL70:
 922              	.L55:
 281:Core/Src/freertos.c **** 
 923              		.loc 1 281 1 is_stmt 0 view .LVU202
 924 002e 08BD     		pop	{r3, pc}
 925              	.L60:
 279:Core/Src/freertos.c ****   }
 926              		.loc 1 279 5 is_stmt 1 view .LVU203
 279:Core/Src/freertos.c ****   }
 927              		.loc 1 279 22 is_stmt 0 view .LVU204
 928 0030 074B     		ldr	r3, .L62+4
 929 0032 93ED000B 		vldr.64	d0, [r3]
 930 0036 FFF7FEFF 		bl	abs
 931              	.LVL71:
 932 003a 51EC100B 		vmov	r0, r1, d0
 279:Core/Src/freertos.c ****   }
 933              		.loc 1 279 5 view .LVU205
 934 003e FFF7FEFF 		bl	__aeabi_d2iz
 935              	.LVL72:
 936 0042 01B2     		sxth	r1, r0
 937 0044 0020     		movs	r0, #0
 938 0046 FFF7FEFF 		bl	TPDO_tarnsmit
 939              	.LVL73:
 281:Core/Src/freertos.c **** 
 940              		.loc 1 281 1 view .LVU206
 941 004a F0E7     		b	.L55
 942              	.L63:
 943              		.align	2
 944              	.L62:
 945 004c 00004440 		.word	1078198272
 946 0050 00000000 		.word	.LANCHOR4
 947 0054 000039C0 		.word	-1070006272
 948 0058 00000000 		.word	.LANCHOR8
 949              		.cfi_endproc
 950              	.LFE172:
 952              		.section	.text.StartPIDTask,"ax",%progbits
 953              		.align	1
 954              		.global	StartPIDTask
 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 959              	StartPIDTask:
 960              	.LVL74:
 961              	.LFB169:
 153:Core/Src/freertos.c ****   /* USER CODE BEGIN StartPIDTask */
 962              		.loc 1 153 1 is_stmt 1 view -0
 963              		.cfi_startproc
 964              		@ Volatile: function does not return.
 965              		@ args = 0, pretend = 0, frame = 0
 966              		@ frame_needed = 0, uses_anonymous_args = 0
 153:Core/Src/freertos.c ****   /* USER CODE BEGIN StartPIDTask */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 47


 967              		.loc 1 153 1 is_stmt 0 view .LVU208
 968 0000 08B5     		push	{r3, lr}
 969              	.LCFI13:
 970              		.cfi_def_cfa_offset 8
 971              		.cfi_offset 3, -8
 972              		.cfi_offset 14, -4
 155:Core/Src/freertos.c ****   /* Infinite loop */
 973              		.loc 1 155 3 is_stmt 1 view .LVU209
 974 0002 FFF7FEFF 		bl	PID_init
 975              	.LVL75:
 155:Core/Src/freertos.c ****   /* Infinite loop */
 976              		.loc 1 155 3 is_stmt 0 view .LVU210
 977 0006 06E0     		b	.L65
 978              	.L66:
 173:Core/Src/freertos.c ****     }
 979              		.loc 1 173 7 is_stmt 1 view .LVU211
 980 0008 0821     		movs	r1, #8
 981 000a 1348     		ldr	r0, .L70
 982 000c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 983              	.LVL76:
 984              	.L67:
 175:Core/Src/freertos.c ****   }
 985              		.loc 1 175 5 view .LVU212
 986 0010 6420     		movs	r0, #100
 987 0012 FFF7FEFF 		bl	osDelay
 988              	.LVL77:
 157:Core/Src/freertos.c ****   {
 989              		.loc 1 157 9 view .LVU213
 990              	.L65:
 161:Core/Src/freertos.c ****     analyze_voltage();
 991              		.loc 1 161 5 discriminator 1 view .LVU214
 159:Core/Src/freertos.c ****     {
 992              		.loc 1 159 11 discriminator 1 view .LVU215
 159:Core/Src/freertos.c ****     {
 993              		.loc 1 159 12 is_stmt 0 discriminator 1 view .LVU216
 994 0016 114B     		ldr	r3, .L70+4
 995 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 159:Core/Src/freertos.c ****     {
 996              		.loc 1 159 11 discriminator 1 view .LVU217
 997 001a 002B     		cmp	r3, #0
 998 001c FBD0     		beq	.L65
 162:Core/Src/freertos.c ****     CW_CCW_deect();
 999              		.loc 1 162 5 is_stmt 1 view .LVU218
 1000 001e FFF7FEFF 		bl	analyze_voltage
 1001              	.LVL78:
 163:Core/Src/freertos.c ****     PID_Compute(&TPID);
 1002              		.loc 1 163 5 view .LVU219
 1003 0022 FFF7FEFF 		bl	CW_CCW_deect
 1004              	.LVL79:
 164:Core/Src/freertos.c ****     CCR_value = abs(CCR_value);
 1005              		.loc 1 164 5 view .LVU220
 1006 0026 0E48     		ldr	r0, .L70+8
 1007 0028 FFF7FEFF 		bl	PID_Compute
 1008              	.LVL80:
 165:Core/Src/freertos.c ****     PID_protection();
 1009              		.loc 1 165 5 view .LVU221
 165:Core/Src/freertos.c ****     PID_protection();
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 48


 1010              		.loc 1 165 17 is_stmt 0 view .LVU222
 1011 002c 0D4C     		ldr	r4, .L70+12
 1012 002e 94ED000B 		vldr.64	d0, [r4]
 1013 0032 FFF7FEFF 		bl	abs
 1014              	.LVL81:
 165:Core/Src/freertos.c ****     PID_protection();
 1015              		.loc 1 165 15 view .LVU223
 1016 0036 84ED000B 		vstr.64	d0, [r4]
 166:Core/Src/freertos.c ****     if (PID_safe_lock == false)
 1017              		.loc 1 166 5 is_stmt 1 view .LVU224
 1018 003a FFF7FEFF 		bl	PID_protection
 1019              	.LVL82:
 167:Core/Src/freertos.c ****     {
 1020              		.loc 1 167 5 view .LVU225
 167:Core/Src/freertos.c ****     {
 1021              		.loc 1 167 23 is_stmt 0 view .LVU226
 1022 003e 0A4B     		ldr	r3, .L70+16
 1023 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 167:Core/Src/freertos.c ****     {
 1024              		.loc 1 167 8 view .LVU227
 1025 0042 002B     		cmp	r3, #0
 1026 0044 E0D1     		bne	.L66
 169:Core/Src/freertos.c ****     }
 1027              		.loc 1 169 7 is_stmt 1 view .LVU228
 169:Core/Src/freertos.c ****     }
 1028              		.loc 1 169 21 is_stmt 0 view .LVU229
 1029 0046 D4E90001 		ldrd	r0, [r4]
 1030 004a FFF7FEFF 		bl	__aeabi_d2iz
 1031              	.LVL83:
 169:Core/Src/freertos.c ****     }
 1032              		.loc 1 169 18 view .LVU230
 1033 004e 4FF08043 		mov	r3, #1073741824
 1034 0052 9863     		str	r0, [r3, #56]
 1035 0054 DCE7     		b	.L67
 1036              	.L71:
 1037 0056 00BF     		.align	2
 1038              	.L70:
 1039 0058 00040048 		.word	1207960576
 1040 005c 00000000 		.word	.LANCHOR14
 1041 0060 00000000 		.word	.LANCHOR13
 1042 0064 00000000 		.word	.LANCHOR12
 1043 0068 00000000 		.word	.LANCHOR6
 1044              		.cfi_endproc
 1045              	.LFE169:
 1047              		.global	PID_safe_lock
 1048              		.global	protection_lock
 1049              		.global	previos_error
 1050              		.global	previous_voltage
 1051              		.global	voltage_counter
 1052              		.global	PID_contorl_lock
 1053              		.global	db_target_angle
 1054              		.global	current_angle
 1055              		.global	current_voltage
 1056              		.global	CCR_value
 1057              		.global	TPID
 1058              		.global	canopenTask_attributes
 1059              		.section	.rodata.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 49


 1060              		.align	2
 1061              	.LC0:
 1062 0000 63616E6F 		.ascii	"canopenTask\000"
 1062      70656E54 
 1062      61736B00 
 1063              		.global	canopenTaskHandle
 1064              		.global	PIDTask_attributes
 1065              		.align	2
 1066              	.LC1:
 1067 000c 50494454 		.ascii	"PIDTask\000"
 1067      61736B00 
 1068              		.global	PIDTaskHandle
 1069              		.section	.bss.CCR_value,"aw",%nobits
 1070              		.align	3
 1071              		.set	.LANCHOR12,. + 0
 1074              	CCR_value:
 1075 0000 00000000 		.space	8
 1075      00000000 
 1076              		.section	.bss.PIDTaskHandle,"aw",%nobits
 1077              		.align	2
 1078              		.set	.LANCHOR1,. + 0
 1081              	PIDTaskHandle:
 1082 0000 00000000 		.space	4
 1083              		.section	.bss.PID_contorl_lock,"aw",%nobits
 1084              		.set	.LANCHOR14,. + 0
 1087              	PID_contorl_lock:
 1088 0000 00       		.space	1
 1089              		.section	.bss.PID_safe_lock,"aw",%nobits
 1090              		.set	.LANCHOR6,. + 0
 1093              	PID_safe_lock:
 1094 0000 00       		.space	1
 1095              		.section	.bss.TPID,"aw",%nobits
 1096              		.align	3
 1097              		.set	.LANCHOR13,. + 0
 1100              	TPID:
 1101 0000 00000000 		.space	112
 1101      00000000 
 1101      00000000 
 1101      00000000 
 1101      00000000 
 1102              		.section	.bss.canopenTaskHandle,"aw",%nobits
 1103              		.align	2
 1104              		.set	.LANCHOR3,. + 0
 1107              	canopenTaskHandle:
 1108 0000 00000000 		.space	4
 1109              		.section	.bss.current_angle,"aw",%nobits
 1110              		.align	3
 1111              		.set	.LANCHOR4,. + 0
 1114              	current_angle:
 1115 0000 00000000 		.space	8
 1115      00000000 
 1116              		.section	.bss.current_voltage,"aw",%nobits
 1117              		.align	3
 1118              		.set	.LANCHOR8,. + 0
 1121              	current_voltage:
 1122 0000 00000000 		.space	8
 1122      00000000 
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 50


 1123              		.section	.bss.db_target_angle,"aw",%nobits
 1124              		.align	3
 1125              		.set	.LANCHOR5,. + 0
 1128              	db_target_angle:
 1129 0000 00000000 		.space	8
 1129      00000000 
 1130              		.section	.bss.previos_error,"aw",%nobits
 1131              		.align	3
 1132              		.set	.LANCHOR10,. + 0
 1135              	previos_error:
 1136 0000 00000000 		.space	8
 1136      00000000 
 1137              		.section	.bss.previous_voltage,"aw",%nobits
 1138              		.align	3
 1139              		.set	.LANCHOR9,. + 0
 1142              	previous_voltage:
 1143 0000 00000000 		.space	8
 1143      00000000 
 1144              		.section	.bss.protection_lock,"aw",%nobits
 1145              		.set	.LANCHOR11,. + 0
 1148              	protection_lock:
 1149 0000 00       		.space	1
 1150              		.section	.bss.voltage_counter,"aw",%nobits
 1151              		.align	2
 1152              		.set	.LANCHOR7,. + 0
 1155              	voltage_counter:
 1156 0000 00000000 		.space	4
 1157              		.section	.rodata.PIDTask_attributes,"a"
 1158              		.align	2
 1159              		.set	.LANCHOR0,. + 0
 1162              	PIDTask_attributes:
 1163 0000 0C000000 		.word	.LC1
 1164 0004 00000000 		.space	16
 1164      00000000 
 1164      00000000 
 1164      00000000 
 1165 0014 00020000 		.word	512
 1166 0018 28000000 		.word	40
 1167 001c 00000000 		.space	8
 1167      00000000 
 1168              		.section	.rodata.canopenTask_attributes,"a"
 1169              		.align	2
 1170              		.set	.LANCHOR2,. + 0
 1173              	canopenTask_attributes:
 1174 0000 00000000 		.word	.LC0
 1175 0004 00000000 		.space	16
 1175      00000000 
 1175      00000000 
 1175      00000000 
 1176 0014 00020000 		.word	512
 1177 0018 30000000 		.word	48
 1178 001c 00000000 		.space	8
 1178      00000000 
 1179              		.text
 1180              	.Letext0:
 1181              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1182              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 51


 1183              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1184              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1185              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 1186              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1187              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1188              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1189              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1190              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 1191              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1192              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1193              		.file 16 "Middlewares/Third_Party/CANopenNode_STM32/CO_driver_target.h"
 1194              		.file 17 "Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h"
 1195              		.file 18 "Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.h"
 1196              		.file 19 "Middlewares/Third_Party/CANopenNode/301/CO_HBconsumer.h"
 1197              		.file 20 "Middlewares/Third_Party/CANopenNode/301/CO_SDOserver.h"
 1198              		.file 21 "Middlewares/Third_Party/CANopenNode/301/CO_SYNC.h"
 1199              		.file 22 "Middlewares/Third_Party/CANopenNode/301/CO_TIME.h"
 1200              		.file 23 "Middlewares/Third_Party/CANopenNode/303/CO_LEDs.h"
 1201              		.file 24 "Middlewares/Third_Party/CANopenNode/305/CO_LSS.h"
 1202              		.file 25 "Middlewares/Third_Party/CANopenNode/305/CO_LSSslave.h"
 1203              		.file 26 "Middlewares/Third_Party/CANopenNode/CANopen.h"
 1204              		.file 27 "Middlewares/Third_Party/CANopenNode_STM32/CO_app_STM32.h"
 1205              		.file 28 "Middlewares/Third_Party/CANopenNode_STM32/OD.h"
 1206              		.file 29 "Core/Inc/tim.h"
 1207              		.file 30 "Core/Inc/can.h"
 1208              		.file 31 "Core/Inc/pid.h"
 1209              		.file 32 "Core/Inc/adc.h"
 1210              		.file 33 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1211              		.file 34 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 52


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:20     .text.MX_FREERTOS_Init:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:26     .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:63     .text.MX_FREERTOS_Init:00000020 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:959    .text.StartPIDTask:00000000 StartPIDTask
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:670    .text.canopen_task:00000000 canopen_task
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:74     .text.CW_CCW_deect:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:80     .text.CW_CCW_deect:00000000 CW_CCW_deect
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:132    .text.CW_CCW_deect:00000040 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:139    .text.PID_Error_handler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:145    .text.PID_Error_handler:00000000 PID_Error_handler
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:167    .text.PID_Error_handler:00000010 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:172    .text.abs:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:178    .text.abs:00000000 abs
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:225    .text.analyze_voltage:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:231    .text.analyze_voltage:00000000 analyze_voltage
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:371    .text.analyze_voltage:000000d0 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:390    .text.PID_init:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:396    .text.PID_init:00000000 PID_init
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:473    .text.PID_init:00000070 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:492    .text.TPDO_tarnsmit:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:498    .text.TPDO_tarnsmit:00000000 TPDO_tarnsmit
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:657    .text.TPDO_tarnsmit:00000088 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:664    .text.canopen_task:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:866    .text.canopen_task:000000e8 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:879    .text.PID_protection:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:885    .text.PID_protection:00000000 PID_protection
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:945    .text.PID_protection:0000004c $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:953    .text.StartPIDTask:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1039   .text.StartPIDTask:00000058 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1093   .bss.PID_safe_lock:00000000 PID_safe_lock
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1148   .bss.protection_lock:00000000 protection_lock
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1135   .bss.previos_error:00000000 previos_error
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1142   .bss.previous_voltage:00000000 previous_voltage
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1155   .bss.voltage_counter:00000000 voltage_counter
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1087   .bss.PID_contorl_lock:00000000 PID_contorl_lock
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1128   .bss.db_target_angle:00000000 db_target_angle
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1114   .bss.current_angle:00000000 current_angle
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1121   .bss.current_voltage:00000000 current_voltage
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1074   .bss.CCR_value:00000000 CCR_value
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1100   .bss.TPID:00000000 TPID
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1173   .rodata.canopenTask_attributes:00000000 canopenTask_attributes
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1060   .rodata.str1.4:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1107   .bss.canopenTaskHandle:00000000 canopenTaskHandle
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1162   .rodata.PIDTask_attributes:00000000 PIDTask_attributes
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1081   .bss.PIDTaskHandle:00000000 PIDTaskHandle
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1070   .bss.CCR_value:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1077   .bss.PIDTaskHandle:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1088   .bss.PID_contorl_lock:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1094   .bss.PID_safe_lock:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1096   .bss.TPID:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1103   .bss.canopenTaskHandle:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1110   .bss.current_angle:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1117   .bss.current_voltage:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1124   .bss.db_target_angle:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1131   .bss.previos_error:00000000 $d
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccITXSmt.s 			page 53


C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1138   .bss.previous_voltage:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1149   .bss.protection_lock:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1151   .bss.voltage_counter:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1158   .rodata.PIDTask_attributes:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccITXSmt.s:1169   .rodata.canopenTask_attributes:00000000 $d

UNDEFINED SYMBOLS
osThreadNew
__aeabi_dcmplt
HAL_GPIO_WritePin
OD_PERSIST_COMM
__aeabi_dsub
__aeabi_ui2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2iz
__aeabi_i2d
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
hadc1
HAL_TIM_PWM_Start
osDelay
PID
PID_SetMode
PID_SetSampleTime
PID_SetOutputLimits
htim2
OD_find
OD_set_value
OD
canopenNodeSTM32
canopen_app_init
vTaskDelay
canopen_app_process
hcan
MX_CAN_Init
htim17
__aeabi_dcmpgt
HAL_GPIO_TogglePin
PID_Compute
