ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"freertos.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_i2d
  20              		.section	.text.canopen_task,"ax",%progbits
  21              		.align	1
  22              		.global	canopen_task
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	canopen_task:
  28              	.LVL0:
  29              	.LFB170:
  30              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****  ******************************************************************************
   4:Core/Src/freertos.c ****  * File Name          : freertos.c
   5:Core/Src/freertos.c ****  * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****  ******************************************************************************
   7:Core/Src/freertos.c ****  * @attention
   8:Core/Src/freertos.c ****  *
   9:Core/Src/freertos.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/freertos.c ****  * All rights reserved.
  11:Core/Src/freertos.c ****  *
  12:Core/Src/freertos.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****  * in the root directory of this software component.
  14:Core/Src/freertos.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****  *
  16:Core/Src/freertos.c ****  ******************************************************************************
  17:Core/Src/freertos.c ****  */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/freertos.c **** #include "CO_app_STM32.h"
  28:Core/Src/freertos.c **** #include "OD.h"
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 2


  29:Core/Src/freertos.c **** #include "tim.h"
  30:Core/Src/freertos.c **** #include "comment.h"
  31:Core/Src/freertos.c **** #include "can.h"
  32:Core/Src/freertos.c **** #include "pid.h"
  33:Core/Src/freertos.c **** #include "adc.h"
  34:Core/Src/freertos.c **** #define Virtual_target_angle -20
  35:Core/Src/freertos.c **** #define Timer_ARR 5
  36:Core/Src/freertos.c **** /* USER CODE END Includes */
  37:Core/Src/freertos.c **** 
  38:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  39:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  40:Core/Src/freertos.c **** 
  41:Core/Src/freertos.c **** /* USER CODE END PTD */
  42:Core/Src/freertos.c **** 
  43:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  44:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* USER CODE END PD */
  47:Core/Src/freertos.c **** 
  48:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  49:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* USER CODE END PM */
  52:Core/Src/freertos.c **** 
  53:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  54:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* USER CODE END Variables */
  57:Core/Src/freertos.c **** /* Definitions for PIDTask */
  58:Core/Src/freertos.c **** osThreadId_t PIDTaskHandle;
  59:Core/Src/freertos.c **** const osThreadAttr_t PIDTask_attributes = {
  60:Core/Src/freertos.c ****     .name = "PIDTask",
  61:Core/Src/freertos.c ****     .stack_size = 128 * 4,
  62:Core/Src/freertos.c ****     .priority = (osPriority_t)osPriorityHigh,
  63:Core/Src/freertos.c **** };
  64:Core/Src/freertos.c **** /* Definitions for canopenTask */
  65:Core/Src/freertos.c **** osThreadId_t canopenTaskHandle;
  66:Core/Src/freertos.c **** const osThreadAttr_t canopenTask_attributes = {
  67:Core/Src/freertos.c ****     .name = "canopenTask",
  68:Core/Src/freertos.c ****     .stack_size = 128 * 4,
  69:Core/Src/freertos.c ****     .priority = (osPriority_t)osPriorityRealtime,
  70:Core/Src/freertos.c **** };
  71:Core/Src/freertos.c **** 
  72:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  73:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  74:Core/Src/freertos.c **** PID_TypeDef TPID;
  75:Core/Src/freertos.c **** volatile double CCR_value = 0;
  76:Core/Src/freertos.c **** volatile double current_voltage = 0;
  77:Core/Src/freertos.c **** volatile double current_angle = 0;
  78:Core/Src/freertos.c **** volatile double db_target_angle = 0;
  79:Core/Src/freertos.c **** 
  80:Core/Src/freertos.c **** int voltage_counter = 0;
  81:Core/Src/freertos.c **** volatile double previous_voltage = 0;
  82:Core/Src/freertos.c **** volatile double previos_error = 0;
  83:Core/Src/freertos.c **** 
  84:Core/Src/freertos.c **** bool protection_lock = false;
  85:Core/Src/freertos.c **** bool PID_safe_lock = false;
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 3


  86:Core/Src/freertos.c **** 
  87:Core/Src/freertos.c **** void TPDO_tarnsmit(uint8_t status, int16_t angle);
  88:Core/Src/freertos.c **** void analyze_voltage(void);
  89:Core/Src/freertos.c **** void PID_Error_handler(void);
  90:Core/Src/freertos.c **** void CW_CCW_deect(void);
  91:Core/Src/freertos.c **** void PID_init(void);
  92:Core/Src/freertos.c **** void PID_protection(void);
  93:Core/Src/freertos.c **** double abs(double a);
  94:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  95:Core/Src/freertos.c **** 
  96:Core/Src/freertos.c **** void StartPIDTask(void *argument);
  97:Core/Src/freertos.c **** void canopen_task(void *argument);
  98:Core/Src/freertos.c **** 
  99:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 100:Core/Src/freertos.c **** 
 101:Core/Src/freertos.c **** /**
 102:Core/Src/freertos.c ****  * @brief  FreeRTOS initialization
 103:Core/Src/freertos.c ****  * @param  None
 104:Core/Src/freertos.c ****  * @retval None
 105:Core/Src/freertos.c ****  */
 106:Core/Src/freertos.c **** void MX_FREERTOS_Init(void)
 107:Core/Src/freertos.c **** {
 108:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 109:Core/Src/freertos.c **** 
 110:Core/Src/freertos.c ****   /* USER CODE END Init */
 111:Core/Src/freertos.c **** 
 112:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 113:Core/Src/freertos.c ****   /* add mutexes, ... */
 114:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 115:Core/Src/freertos.c **** 
 116:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 117:Core/Src/freertos.c ****   /* add semaphores, ... */
 118:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 119:Core/Src/freertos.c **** 
 120:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 121:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 122:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 123:Core/Src/freertos.c **** 
 124:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 125:Core/Src/freertos.c ****   /* add queues, ... */
 126:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 127:Core/Src/freertos.c **** 
 128:Core/Src/freertos.c ****   /* Create the thread(s) */
 129:Core/Src/freertos.c ****   /* creation of PIDTask */
 130:Core/Src/freertos.c ****   PIDTaskHandle = osThreadNew(StartPIDTask, NULL, &PIDTask_attributes);
 131:Core/Src/freertos.c **** 
 132:Core/Src/freertos.c ****   /* creation of canopenTask */
 133:Core/Src/freertos.c ****   canopenTaskHandle = osThreadNew(canopen_task, NULL, &canopenTask_attributes);
 134:Core/Src/freertos.c **** 
 135:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 136:Core/Src/freertos.c ****   /* add threads, ... */
 137:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 138:Core/Src/freertos.c **** 
 139:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 140:Core/Src/freertos.c ****   /* add events, ... */
 141:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 142:Core/Src/freertos.c **** }
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 4


 143:Core/Src/freertos.c **** 
 144:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartPIDTask */
 145:Core/Src/freertos.c **** /**
 146:Core/Src/freertos.c ****  * @brief  Function implementing the PIDTask thread.
 147:Core/Src/freertos.c ****  * @param  argument: Not used
 148:Core/Src/freertos.c ****  * @retval None
 149:Core/Src/freertos.c ****  */
 150:Core/Src/freertos.c **** /* USER CODE END Header_StartPIDTask */
 151:Core/Src/freertos.c **** void StartPIDTask(void *argument)
 152:Core/Src/freertos.c **** {
 153:Core/Src/freertos.c ****   /* USER CODE BEGIN StartPIDTask */
 154:Core/Src/freertos.c ****   PID_init();
 155:Core/Src/freertos.c ****   /* Infinite loop */
 156:Core/Src/freertos.c ****   for (;;)
 157:Core/Src/freertos.c ****   {
 158:Core/Src/freertos.c ****     analyze_voltage();
 159:Core/Src/freertos.c ****     CW_CCW_deect();
 160:Core/Src/freertos.c ****     PID_Compute(&TPID);
 161:Core/Src/freertos.c ****     CCR_value = abs(CCR_value);
 162:Core/Src/freertos.c ****     PID_protection();
 163:Core/Src/freertos.c ****     if (PID_safe_lock == false)
 164:Core/Src/freertos.c ****     {
 165:Core/Src/freertos.c ****       TIM2->CCR2 = ((int)CCR_value);
 166:Core/Src/freertos.c ****     }
 167:Core/Src/freertos.c ****     else
 168:Core/Src/freertos.c ****     {
 169:Core/Src/freertos.c ****       HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 170:Core/Src/freertos.c ****     }
 171:Core/Src/freertos.c ****     osDelay(100);
 172:Core/Src/freertos.c ****   }
 173:Core/Src/freertos.c ****   /* USER CODE END StartPIDTask */
 174:Core/Src/freertos.c **** }
 175:Core/Src/freertos.c **** 
 176:Core/Src/freertos.c **** /* USER CODE BEGIN Header_canopen_task */
 177:Core/Src/freertos.c **** /**
 178:Core/Src/freertos.c ****  * @brief Function implementing the canopenTask thread.
 179:Core/Src/freertos.c ****  * @param argument: Not used
 180:Core/Src/freertos.c ****  * @retval None
 181:Core/Src/freertos.c ****  */
 182:Core/Src/freertos.c **** /* USER CODE END Header_canopen_task */
 183:Core/Src/freertos.c **** void canopen_task(void *argument)
 184:Core/Src/freertos.c **** {
  31              		.loc 1 184 1 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 24
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              		.loc 1 184 1 is_stmt 0 view .LVU1
  36 0000 10B5     		push	{r4, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 4, -8
  40              		.cfi_offset 14, -4
  41 0002 86B0     		sub	sp, sp, #24
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 32
 185:Core/Src/freertos.c ****   /* USER CODE BEGIN canopen_task */
 186:Core/Src/freertos.c ****   CANopenNodeSTM32 canOpenNodeSTM32;
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 5


  44              		.loc 1 186 3 is_stmt 1 view .LVU2
 187:Core/Src/freertos.c ****   canOpenNodeSTM32.CANHandle = &hcan;
  45              		.loc 1 187 3 view .LVU3
  46              		.loc 1 187 30 is_stmt 0 view .LVU4
  47 0004 164B     		ldr	r3, .L6
  48 0006 0293     		str	r3, [sp, #8]
 188:Core/Src/freertos.c ****   canOpenNodeSTM32.HWInitFunction = MX_CAN_Init;
  49              		.loc 1 188 3 is_stmt 1 view .LVU5
  50              		.loc 1 188 35 is_stmt 0 view .LVU6
  51 0008 164B     		ldr	r3, .L6+4
  52 000a 0393     		str	r3, [sp, #12]
 189:Core/Src/freertos.c ****   canOpenNodeSTM32.timerHandle = &htim17;
  53              		.loc 1 189 3 is_stmt 1 view .LVU7
  54              		.loc 1 189 32 is_stmt 0 view .LVU8
  55 000c 164B     		ldr	r3, .L6+8
  56 000e 0193     		str	r3, [sp, #4]
 190:Core/Src/freertos.c ****   canOpenNodeSTM32.desiredNodeID = 17;
  57              		.loc 1 190 3 is_stmt 1 view .LVU9
  58              		.loc 1 190 34 is_stmt 0 view .LVU10
  59 0010 1123     		movs	r3, #17
  60 0012 8DF80030 		strb	r3, [sp]
 191:Core/Src/freertos.c ****   canOpenNodeSTM32.baudrate = 125;
  61              		.loc 1 191 3 is_stmt 1 view .LVU11
  62              		.loc 1 191 29 is_stmt 0 view .LVU12
  63 0016 7D23     		movs	r3, #125
  64 0018 8DF80230 		strb	r3, [sp, #2]
 192:Core/Src/freertos.c ****   canopen_app_init(&canOpenNodeSTM32);
  65              		.loc 1 192 3 is_stmt 1 view .LVU13
  66 001c 6846     		mov	r0, sp
  67              	.LVL1:
  68              		.loc 1 192 3 is_stmt 0 view .LVU14
  69 001e FFF7FEFF 		bl	canopen_app_init
  70              	.LVL2:
 193:Core/Src/freertos.c ****   int16_t pre_target_angle = OD_PERSIST_COMM.x6001_target_angle;
  71              		.loc 1 193 3 is_stmt 1 view .LVU15
  72              		.loc 1 193 11 is_stmt 0 view .LVU16
  73 0022 124B     		ldr	r3, .L6+12
  74 0024 B3F9CE40 		ldrsh	r4, [r3, #206]
  75              	.LVL3:
 194:Core/Src/freertos.c ****   db_target_angle = OD_PERSIST_COMM.x6001_target_angle;
  76              		.loc 1 194 3 is_stmt 1 view .LVU17
  77              		.loc 1 194 19 is_stmt 0 view .LVU18
  78 0028 2046     		mov	r0, r4
  79 002a FFF7FEFF 		bl	__aeabi_i2d
  80              	.LVL4:
  81 002e 104B     		ldr	r3, .L6+16
  82 0030 C3E90001 		strd	r0, [r3]
  83 0034 0BE0     		b	.L3
  84              	.L5:
 195:Core/Src/freertos.c ****   /* Infinite loop */
 196:Core/Src/freertos.c ****   for (;;)
 197:Core/Src/freertos.c ****   {
 198:Core/Src/freertos.c ****     canopen_app_process();
 199:Core/Src/freertos.c ****     if (OD_PERSIST_COMM.x6000_current_angle != pre_target_angle)
 200:Core/Src/freertos.c ****     {
 201:Core/Src/freertos.c ****       pre_target_angle = OD_PERSIST_COMM.x6001_target_angle;
  85              		.loc 1 201 7 is_stmt 1 view .LVU19
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 6


  86              		.loc 1 201 24 is_stmt 0 view .LVU20
  87 0036 0D4B     		ldr	r3, .L6+12
  88 0038 B3F9CE40 		ldrsh	r4, [r3, #206]
  89              	.LVL5:
 202:Core/Src/freertos.c ****       db_target_angle = (double)OD_PERSIST_COMM.x6001_target_angle;
  90              		.loc 1 202 7 is_stmt 1 view .LVU21
  91              		.loc 1 202 25 is_stmt 0 view .LVU22
  92 003c 2046     		mov	r0, r4
  93 003e FFF7FEFF 		bl	__aeabi_i2d
  94              	.LVL6:
  95              		.loc 1 202 23 view .LVU23
  96 0042 0B4B     		ldr	r3, .L6+16
  97 0044 C3E90001 		strd	r0, [r3]
  98              	.L2:
 203:Core/Src/freertos.c ****     }
 204:Core/Src/freertos.c ****     vTaskDelay(1);
  99              		.loc 1 204 5 is_stmt 1 view .LVU24
 100 0048 0120     		movs	r0, #1
 101 004a FFF7FEFF 		bl	vTaskDelay
 102              	.LVL7:
 196:Core/Src/freertos.c ****   {
 103              		.loc 1 196 9 view .LVU25
 104              	.L3:
 196:Core/Src/freertos.c ****   {
 105              		.loc 1 196 3 view .LVU26
 198:Core/Src/freertos.c ****     if (OD_PERSIST_COMM.x6000_current_angle != pre_target_angle)
 106              		.loc 1 198 5 view .LVU27
 107 004e FFF7FEFF 		bl	canopen_app_process
 108              	.LVL8:
 199:Core/Src/freertos.c ****     {
 109              		.loc 1 199 5 view .LVU28
 199:Core/Src/freertos.c ****     {
 110              		.loc 1 199 24 is_stmt 0 view .LVU29
 111 0052 064B     		ldr	r3, .L6+12
 112 0054 B3F9CC30 		ldrsh	r3, [r3, #204]
 199:Core/Src/freertos.c ****     {
 113              		.loc 1 199 8 view .LVU30
 114 0058 A342     		cmp	r3, r4
 115 005a ECD1     		bne	.L5
 199:Core/Src/freertos.c ****     {
 116              		.loc 1 199 8 view .LVU31
 117 005c F4E7     		b	.L2
 118              	.L7:
 119 005e 00BF     		.align	2
 120              	.L6:
 121 0060 00000000 		.word	hcan
 122 0064 00000000 		.word	MX_CAN_Init
 123 0068 00000000 		.word	htim17
 124 006c 00000000 		.word	OD_PERSIST_COMM
 125 0070 00000000 		.word	.LANCHOR0
 126              		.cfi_endproc
 127              	.LFE170:
 129              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 130              		.align	1
 131              		.global	MX_FREERTOS_Init
 132              		.syntax unified
 133              		.thumb
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 7


 134              		.thumb_func
 136              	MX_FREERTOS_Init:
 137              	.LFB168:
 107:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 138              		.loc 1 107 1 is_stmt 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 08B5     		push	{r3, lr}
 143              	.LCFI2:
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 3, -8
 146              		.cfi_offset 14, -4
 130:Core/Src/freertos.c **** 
 147              		.loc 1 130 3 view .LVU33
 130:Core/Src/freertos.c **** 
 148              		.loc 1 130 19 is_stmt 0 view .LVU34
 149 0002 074A     		ldr	r2, .L10
 150 0004 0021     		movs	r1, #0
 151 0006 0748     		ldr	r0, .L10+4
 152 0008 FFF7FEFF 		bl	osThreadNew
 153              	.LVL9:
 130:Core/Src/freertos.c **** 
 154              		.loc 1 130 17 view .LVU35
 155 000c 064B     		ldr	r3, .L10+8
 156 000e 1860     		str	r0, [r3]
 133:Core/Src/freertos.c **** 
 157              		.loc 1 133 3 is_stmt 1 view .LVU36
 133:Core/Src/freertos.c **** 
 158              		.loc 1 133 23 is_stmt 0 view .LVU37
 159 0010 064A     		ldr	r2, .L10+12
 160 0012 0021     		movs	r1, #0
 161 0014 0648     		ldr	r0, .L10+16
 162 0016 FFF7FEFF 		bl	osThreadNew
 163              	.LVL10:
 133:Core/Src/freertos.c **** 
 164              		.loc 1 133 21 view .LVU38
 165 001a 064B     		ldr	r3, .L10+20
 166 001c 1860     		str	r0, [r3]
 142:Core/Src/freertos.c **** 
 167              		.loc 1 142 1 view .LVU39
 168 001e 08BD     		pop	{r3, pc}
 169              	.L11:
 170              		.align	2
 171              	.L10:
 172 0020 00000000 		.word	.LANCHOR1
 173 0024 00000000 		.word	StartPIDTask
 174 0028 00000000 		.word	.LANCHOR2
 175 002c 00000000 		.word	.LANCHOR3
 176 0030 00000000 		.word	canopen_task
 177 0034 00000000 		.word	.LANCHOR4
 178              		.cfi_endproc
 179              	.LFE168:
 181              		.global	__aeabi_dcmplt
 182              		.section	.text.CW_CCW_deect,"ax",%progbits
 183              		.align	1
 184              		.global	CW_CCW_deect
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 8


 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 189              	CW_CCW_deect:
 190              	.LFB174:
 205:Core/Src/freertos.c ****   }
 206:Core/Src/freertos.c ****   /* USER CODE END canopen_task */
 207:Core/Src/freertos.c **** }
 208:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 209:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 210:Core/Src/freertos.c **** void analyze_voltage(void)
 211:Core/Src/freertos.c **** {
 212:Core/Src/freertos.c ****   if (voltage_counter == 0)
 213:Core/Src/freertos.c ****   {
 214:Core/Src/freertos.c ****     previous_voltage = current_voltage;
 215:Core/Src/freertos.c ****     previos_error = abs(current_angle - db_target_angle);
 216:Core/Src/freertos.c ****   }
 217:Core/Src/freertos.c ****   HAL_ADC_Start(&hadc1);
 218:Core/Src/freertos.c ****   HAL_ADC_PollForConversion(&hadc1, 1);
 219:Core/Src/freertos.c ****   current_voltage = HAL_ADC_GetValue(&hadc1);
 220:Core/Src/freertos.c ****   current_voltage = ((current_voltage / 4096) * 3.3);
 221:Core/Src/freertos.c ****   current_angle = (int)(((current_voltage * 2) - 1.6) * 25 - 25); // min_voltage => 1.6  mid_voltag
 222:Core/Src/freertos.c ****   if (voltage_counter == 4)
 223:Core/Src/freertos.c ****   {
 224:Core/Src/freertos.c ****     protection_lock = true;
 225:Core/Src/freertos.c ****   }
 226:Core/Src/freertos.c ****   else
 227:Core/Src/freertos.c ****   {
 228:Core/Src/freertos.c ****     protection_lock = false;
 229:Core/Src/freertos.c ****   }
 230:Core/Src/freertos.c ****   voltage_counter = (voltage_counter + 1) % Timer_ARR;
 231:Core/Src/freertos.c **** }
 232:Core/Src/freertos.c **** 
 233:Core/Src/freertos.c **** void PID_protection(void)
 234:Core/Src/freertos.c **** {
 235:Core/Src/freertos.c ****   if (current_voltage * 2 > 4.2 || current_voltage * 2 < 1.8) // outof voltage range 4.4v ~ 1.6v
 236:Core/Src/freertos.c ****   {
 237:Core/Src/freertos.c ****     PID_Error_handler();
 238:Core/Src/freertos.c ****     TPDO_tarnsmit(2, 99); // 2.reach limit
 239:Core/Src/freertos.c ****   }
 240:Core/Src/freertos.c ****   if ((abs(current_voltage - previous_voltage) > 1 || abs(current_voltage - previous_voltage) < 0.0
 241:Core/Src/freertos.c ****   {
 242:Core/Src/freertos.c ****     PID_Error_handler();
 243:Core/Src/freertos.c ****     TPDO_tarnsmit(3, 99); // 3. Angle reader abnormal
 244:Core/Src/freertos.c ****   }
 245:Core/Src/freertos.c ****   if (abs((current_angle - db_target_angle) - previos_error) < 2 && abs(current_angle - db_target_a
 246:Core/Src/freertos.c ****   {
 247:Core/Src/freertos.c ****     PID_Error_handler();
 248:Core/Src/freertos.c ****     TPDO_tarnsmit(4, 99); // 4. Error not decrease
 249:Core/Src/freertos.c ****   }
 250:Core/Src/freertos.c ****   else
 251:Core/Src/freertos.c ****   {
 252:Core/Src/freertos.c ****     TPDO_tarnsmit(0, current_angle); // 0.normal output
 253:Core/Src/freertos.c ****   }
 254:Core/Src/freertos.c **** }
 255:Core/Src/freertos.c **** 
 256:Core/Src/freertos.c **** void PID_init(void)
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 9


 257:Core/Src/freertos.c **** {
 258:Core/Src/freertos.c ****   TIM2->CCR2 = 0; // CCR_value bigger the rpm will highter 0~100
 259:Core/Src/freertos.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 260:Core/Src/freertos.c ****   HAL_GPIO_WritePin(CW_CCW_control_GPIO_Port, CW_CCW_control_Pin, 1);
 261:Core/Src/freertos.c ****   osDelay(500);
 262:Core/Src/freertos.c ****   analyze_voltage();
 263:Core/Src/freertos.c ****   db_target_angle = Virtual_target_angle;
 264:Core/Src/freertos.c ****   PID(&TPID, &current_angle, &CCR_value, &db_target_angle, 1, 0.15, 0, _PID_P_ON_E, _PID_CD_DIRECT)
 265:Core/Src/freertos.c ****   PID_SetMode(&TPID, _PID_MODE_AUTOMATIC);
 266:Core/Src/freertos.c ****   PID_SetSampleTime(&TPID, 100);
 267:Core/Src/freertos.c ****   PID_SetOutputLimits(&TPID, -70, 70);
 268:Core/Src/freertos.c **** }
 269:Core/Src/freertos.c **** void CW_CCW_deect(void)
 270:Core/Src/freertos.c **** {
 191              		.loc 1 270 1 is_stmt 1 view -0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195 0000 08B5     		push	{r3, lr}
 196              	.LCFI3:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 3, -8
 199              		.cfi_offset 14, -4
 271:Core/Src/freertos.c ****   if (current_angle < db_target_angle)
 200              		.loc 1 271 3 view .LVU41
 201              		.loc 1 271 21 is_stmt 0 view .LVU42
 202 0002 0B4B     		ldr	r3, .L19
 203 0004 D3E90001 		ldrd	r0, [r3]
 204              		.loc 1 271 6 view .LVU43
 205 0008 0A4B     		ldr	r3, .L19+4
 206 000a D3E90023 		ldrd	r2, [r3]
 207 000e FFF7FEFF 		bl	__aeabi_dcmplt
 208              	.LVL11:
 209 0012 30B1     		cbz	r0, .L17
 272:Core/Src/freertos.c ****   {
 273:Core/Src/freertos.c ****     HAL_GPIO_WritePin(CW_CCW_control_GPIO_Port, CW_CCW_control_Pin, 0);
 210              		.loc 1 273 5 is_stmt 1 view .LVU44
 211 0014 0022     		movs	r2, #0
 212 0016 0821     		movs	r1, #8
 213 0018 4FF09040 		mov	r0, #1207959552
 214 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 215              	.LVL12:
 216              	.L12:
 274:Core/Src/freertos.c ****   }
 275:Core/Src/freertos.c ****   else
 276:Core/Src/freertos.c ****   {
 277:Core/Src/freertos.c ****     HAL_GPIO_WritePin(CW_CCW_control_GPIO_Port, CW_CCW_control_Pin, 1);
 278:Core/Src/freertos.c ****   }
 279:Core/Src/freertos.c **** }
 217              		.loc 1 279 1 is_stmt 0 view .LVU45
 218 0020 08BD     		pop	{r3, pc}
 219              	.L17:
 277:Core/Src/freertos.c ****   }
 220              		.loc 1 277 5 is_stmt 1 view .LVU46
 221 0022 0122     		movs	r2, #1
 222 0024 0821     		movs	r1, #8
 223 0026 4FF09040 		mov	r0, #1207959552
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 10


 224 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 225              	.LVL13:
 226              		.loc 1 279 1 is_stmt 0 view .LVU47
 227 002e F7E7     		b	.L12
 228              	.L20:
 229              		.align	2
 230              	.L19:
 231 0030 00000000 		.word	.LANCHOR5
 232 0034 00000000 		.word	.LANCHOR0
 233              		.cfi_endproc
 234              	.LFE174:
 236              		.section	.text.PID_Error_handler,"ax",%progbits
 237              		.align	1
 238              		.global	PID_Error_handler
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 243              	PID_Error_handler:
 244              	.LFB175:
 280:Core/Src/freertos.c **** void PID_Error_handler(void)
 281:Core/Src/freertos.c **** {
 245              		.loc 1 281 1 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 282:Core/Src/freertos.c ****   TIM2->CCR2 = 0;
 250              		.loc 1 282 3 view .LVU49
 251              		.loc 1 282 14 is_stmt 0 view .LVU50
 252 0000 4FF08043 		mov	r3, #1073741824
 253 0004 0022     		movs	r2, #0
 254 0006 9A63     		str	r2, [r3, #56]
 283:Core/Src/freertos.c ****   PID_safe_lock = true;
 255              		.loc 1 283 3 is_stmt 1 view .LVU51
 256              		.loc 1 283 17 is_stmt 0 view .LVU52
 257 0008 014B     		ldr	r3, .L22
 258 000a 0122     		movs	r2, #1
 259 000c 1A70     		strb	r2, [r3]
 284:Core/Src/freertos.c **** }
 260              		.loc 1 284 1 view .LVU53
 261 000e 7047     		bx	lr
 262              	.L23:
 263              		.align	2
 264              	.L22:
 265 0010 00000000 		.word	.LANCHOR6
 266              		.cfi_endproc
 267              	.LFE175:
 269              		.section	.text.abs,"ax",%progbits
 270              		.align	1
 271              		.global	abs
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 276              	abs:
 277              	.LVL14:
 278              	.LFB176:
 285:Core/Src/freertos.c **** double abs(double a)
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 11


 286:Core/Src/freertos.c **** {
 279              		.loc 1 286 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              		.loc 1 286 1 is_stmt 0 view .LVU55
 284 0000 38B5     		push	{r3, r4, r5, lr}
 285              	.LCFI4:
 286              		.cfi_def_cfa_offset 16
 287              		.cfi_offset 3, -16
 288              		.cfi_offset 4, -12
 289              		.cfi_offset 5, -8
 290              		.cfi_offset 14, -4
 291 0002 55EC104B 		vmov	r4, r5, d0
 287:Core/Src/freertos.c ****   if (a < 0)
 292              		.loc 1 287 3 is_stmt 1 view .LVU56
 293              		.loc 1 287 6 is_stmt 0 view .LVU57
 294 0006 0022     		movs	r2, #0
 295 0008 0023     		movs	r3, #0
 296 000a 10EE100A 		vmov	r0, s0	@ int
 297 000e 2946     		mov	r1, r5
 298 0010 FFF7FEFF 		bl	__aeabi_dcmplt
 299              	.LVL15:
 300              		.loc 1 287 6 view .LVU58
 301 0014 10B9     		cbnz	r0, .L29
 302              	.L25:
 288:Core/Src/freertos.c ****   {
 289:Core/Src/freertos.c ****     return (a * -1);
 290:Core/Src/freertos.c ****   }
 291:Core/Src/freertos.c ****   return a;
 292:Core/Src/freertos.c **** }
 303              		.loc 1 292 1 view .LVU59
 304 0016 45EC104B 		vmov	d0, r4, r5
 305 001a 38BD     		pop	{r3, r4, r5, pc}
 306              	.LVL16:
 307              	.L29:
 289:Core/Src/freertos.c ****   }
 308              		.loc 1 289 5 is_stmt 1 view .LVU60
 289:Core/Src/freertos.c ****   }
 309              		.loc 1 289 15 is_stmt 0 view .LVU61
 310 001c 05F10043 		add	r3, r5, #-2147483648
 311 0020 1D46     		mov	r5, r3
 312 0022 F8E7     		b	.L25
 313              		.cfi_endproc
 314              	.LFE176:
 316              		.global	__aeabi_dsub
 317              		.global	__aeabi_ui2d
 318              		.global	__aeabi_dmul
 319              		.global	__aeabi_dadd
 320              		.global	__aeabi_d2iz
 321              		.section	.text.analyze_voltage,"ax",%progbits
 322              		.align	1
 323              		.global	analyze_voltage
 324              		.syntax unified
 325              		.thumb
 326              		.thumb_func
 328              	analyze_voltage:
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 12


 329              	.LFB171:
 211:Core/Src/freertos.c ****   if (voltage_counter == 0)
 330              		.loc 1 211 1 is_stmt 1 view -0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334 0000 10B5     		push	{r4, lr}
 335              	.LCFI5:
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 4, -8
 338              		.cfi_offset 14, -4
 212:Core/Src/freertos.c ****   {
 339              		.loc 1 212 3 view .LVU63
 212:Core/Src/freertos.c ****   {
 340              		.loc 1 212 23 is_stmt 0 view .LVU64
 341 0002 374B     		ldr	r3, .L36+16
 342 0004 1B68     		ldr	r3, [r3]
 212:Core/Src/freertos.c ****   {
 343              		.loc 1 212 6 view .LVU65
 344 0006 A3B9     		cbnz	r3, .L31
 214:Core/Src/freertos.c ****     previos_error = abs(current_angle - db_target_angle);
 345              		.loc 1 214 5 is_stmt 1 view .LVU66
 214:Core/Src/freertos.c ****     previos_error = abs(current_angle - db_target_angle);
 346              		.loc 1 214 22 is_stmt 0 view .LVU67
 347 0008 364B     		ldr	r3, .L36+20
 348 000a D3E90001 		ldrd	r0, [r3]
 349 000e 364B     		ldr	r3, .L36+24
 350 0010 C3E90001 		strd	r0, [r3]
 215:Core/Src/freertos.c ****   }
 351              		.loc 1 215 5 is_stmt 1 view .LVU68
 215:Core/Src/freertos.c ****   }
 352              		.loc 1 215 21 is_stmt 0 view .LVU69
 353 0014 354B     		ldr	r3, .L36+28
 354 0016 D3E90001 		ldrd	r0, [r3]
 355 001a 354B     		ldr	r3, .L36+32
 356 001c D3E90023 		ldrd	r2, [r3]
 357 0020 FFF7FEFF 		bl	__aeabi_dsub
 358              	.LVL17:
 359 0024 41EC100B 		vmov	d0, r0, r1
 360 0028 FFF7FEFF 		bl	abs
 361              	.LVL18:
 215:Core/Src/freertos.c ****   }
 362              		.loc 1 215 19 view .LVU70
 363 002c 314B     		ldr	r3, .L36+36
 364 002e 83ED000B 		vstr.64	d0, [r3]
 365              	.L31:
 217:Core/Src/freertos.c ****   HAL_ADC_PollForConversion(&hadc1, 1);
 366              		.loc 1 217 3 is_stmt 1 view .LVU71
 367 0032 314C     		ldr	r4, .L36+40
 368 0034 2046     		mov	r0, r4
 369 0036 FFF7FEFF 		bl	HAL_ADC_Start
 370              	.LVL19:
 218:Core/Src/freertos.c ****   current_voltage = HAL_ADC_GetValue(&hadc1);
 371              		.loc 1 218 3 view .LVU72
 372 003a 0121     		movs	r1, #1
 373 003c 2046     		mov	r0, r4
 374 003e FFF7FEFF 		bl	HAL_ADC_PollForConversion
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 13


 375              	.LVL20:
 219:Core/Src/freertos.c ****   current_voltage = ((current_voltage / 4096) * 3.3);
 376              		.loc 1 219 3 view .LVU73
 219:Core/Src/freertos.c ****   current_voltage = ((current_voltage / 4096) * 3.3);
 377              		.loc 1 219 21 is_stmt 0 view .LVU74
 378 0042 2046     		mov	r0, r4
 379 0044 FFF7FEFF 		bl	HAL_ADC_GetValue
 380              	.LVL21:
 219:Core/Src/freertos.c ****   current_voltage = ((current_voltage / 4096) * 3.3);
 381              		.loc 1 219 19 view .LVU75
 382 0048 FFF7FEFF 		bl	__aeabi_ui2d
 383              	.LVL22:
 384 004c 254C     		ldr	r4, .L36+20
 385 004e C4E90001 		strd	r0, [r4]
 220:Core/Src/freertos.c ****   current_angle = (int)(((current_voltage * 2) - 1.6) * 25 - 25); // min_voltage => 1.6  mid_voltag
 386              		.loc 1 220 3 is_stmt 1 view .LVU76
 220:Core/Src/freertos.c ****   current_angle = (int)(((current_voltage * 2) - 1.6) * 25 - 25); // min_voltage => 1.6  mid_voltag
 387              		.loc 1 220 39 is_stmt 0 view .LVU77
 388 0052 0022     		movs	r2, #0
 389 0054 294B     		ldr	r3, .L36+44
 390 0056 D4E90001 		ldrd	r0, [r4]
 391 005a FFF7FEFF 		bl	__aeabi_dmul
 392              	.LVL23:
 220:Core/Src/freertos.c ****   current_angle = (int)(((current_voltage * 2) - 1.6) * 25 - 25); // min_voltage => 1.6  mid_voltag
 393              		.loc 1 220 47 view .LVU78
 394 005e 1CA3     		adr	r3, .L36
 395 0060 D3E90023 		ldrd	r2, [r3]
 396 0064 FFF7FEFF 		bl	__aeabi_dmul
 397              	.LVL24:
 220:Core/Src/freertos.c ****   current_angle = (int)(((current_voltage * 2) - 1.6) * 25 - 25); // min_voltage => 1.6  mid_voltag
 398              		.loc 1 220 19 view .LVU79
 399 0068 C4E90001 		strd	r0, [r4]
 221:Core/Src/freertos.c ****   if (voltage_counter == 4)
 400              		.loc 1 221 3 is_stmt 1 view .LVU80
 221:Core/Src/freertos.c ****   if (voltage_counter == 4)
 401              		.loc 1 221 43 is_stmt 0 view .LVU81
 402 006c D4E90001 		ldrd	r0, [r4]
 403 0070 0246     		mov	r2, r0
 404 0072 0B46     		mov	r3, r1
 405 0074 FFF7FEFF 		bl	__aeabi_dadd
 406              	.LVL25:
 221:Core/Src/freertos.c ****   if (voltage_counter == 4)
 407              		.loc 1 221 48 view .LVU82
 408 0078 17A3     		adr	r3, .L36+8
 409 007a D3E90023 		ldrd	r2, [r3]
 410 007e FFF7FEFF 		bl	__aeabi_dsub
 411              	.LVL26:
 221:Core/Src/freertos.c ****   if (voltage_counter == 4)
 412              		.loc 1 221 55 view .LVU83
 413 0082 0022     		movs	r2, #0
 414 0084 1E4B     		ldr	r3, .L36+48
 415 0086 FFF7FEFF 		bl	__aeabi_dmul
 416              	.LVL27:
 221:Core/Src/freertos.c ****   if (voltage_counter == 4)
 417              		.loc 1 221 60 view .LVU84
 418 008a 0022     		movs	r2, #0
 419 008c 1C4B     		ldr	r3, .L36+48
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 14


 420 008e FFF7FEFF 		bl	__aeabi_dsub
 421              	.LVL28:
 221:Core/Src/freertos.c ****   if (voltage_counter == 4)
 422              		.loc 1 221 19 view .LVU85
 423 0092 FFF7FEFF 		bl	__aeabi_d2iz
 424              	.LVL29:
 221:Core/Src/freertos.c ****   if (voltage_counter == 4)
 425              		.loc 1 221 17 view .LVU86
 426 0096 FFF7FEFF 		bl	__aeabi_i2d
 427              	.LVL30:
 428 009a 144B     		ldr	r3, .L36+28
 429 009c C3E90001 		strd	r0, [r3]
 222:Core/Src/freertos.c ****   {
 430              		.loc 1 222 3 is_stmt 1 view .LVU87
 222:Core/Src/freertos.c ****   {
 431              		.loc 1 222 23 is_stmt 0 view .LVU88
 432 00a0 0F4B     		ldr	r3, .L36+16
 433 00a2 1A68     		ldr	r2, [r3]
 222:Core/Src/freertos.c ****   {
 434              		.loc 1 222 6 view .LVU89
 435 00a4 042A     		cmp	r2, #4
 436 00a6 0FD0     		beq	.L35
 228:Core/Src/freertos.c ****   }
 437              		.loc 1 228 5 is_stmt 1 view .LVU90
 228:Core/Src/freertos.c ****   }
 438              		.loc 1 228 21 is_stmt 0 view .LVU91
 439 00a8 164B     		ldr	r3, .L36+52
 440 00aa 0021     		movs	r1, #0
 441 00ac 1970     		strb	r1, [r3]
 442              	.L33:
 230:Core/Src/freertos.c **** }
 443              		.loc 1 230 3 is_stmt 1 view .LVU92
 230:Core/Src/freertos.c **** }
 444              		.loc 1 230 38 is_stmt 0 view .LVU93
 445 00ae 0132     		adds	r2, r2, #1
 230:Core/Src/freertos.c **** }
 446              		.loc 1 230 43 view .LVU94
 447 00b0 1549     		ldr	r1, .L36+56
 448 00b2 81FB0231 		smull	r3, r1, r1, r2
 449 00b6 D317     		asrs	r3, r2, #31
 450 00b8 C3EB6103 		rsb	r3, r3, r1, asr #1
 451 00bc 03EB8303 		add	r3, r3, r3, lsl #2
 452 00c0 D31A     		subs	r3, r2, r3
 230:Core/Src/freertos.c **** }
 453              		.loc 1 230 19 view .LVU95
 454 00c2 074A     		ldr	r2, .L36+16
 455 00c4 1360     		str	r3, [r2]
 231:Core/Src/freertos.c **** 
 456              		.loc 1 231 1 view .LVU96
 457 00c6 10BD     		pop	{r4, pc}
 458              	.L35:
 224:Core/Src/freertos.c ****   }
 459              		.loc 1 224 5 is_stmt 1 view .LVU97
 224:Core/Src/freertos.c ****   }
 460              		.loc 1 224 21 is_stmt 0 view .LVU98
 461 00c8 0E4B     		ldr	r3, .L36+52
 462 00ca 0121     		movs	r1, #1
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 15


 463 00cc 1970     		strb	r1, [r3]
 464 00ce EEE7     		b	.L33
 465              	.L37:
 466              		.align	3
 467              	.L36:
 468 00d0 66666666 		.word	1717986918
 469 00d4 66660A40 		.word	1074423398
 470 00d8 9A999999 		.word	-1717986918
 471 00dc 9999F93F 		.word	1073322393
 472 00e0 00000000 		.word	.LANCHOR7
 473 00e4 00000000 		.word	.LANCHOR8
 474 00e8 00000000 		.word	.LANCHOR9
 475 00ec 00000000 		.word	.LANCHOR5
 476 00f0 00000000 		.word	.LANCHOR0
 477 00f4 00000000 		.word	.LANCHOR10
 478 00f8 00000000 		.word	hadc1
 479 00fc 0000303F 		.word	1060110336
 480 0100 00003940 		.word	1077477376
 481 0104 00000000 		.word	.LANCHOR11
 482 0108 67666666 		.word	1717986919
 483              		.cfi_endproc
 484              	.LFE171:
 486              		.section	.text.PID_init,"ax",%progbits
 487              		.align	1
 488              		.global	PID_init
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 493              	PID_init:
 494              	.LFB173:
 257:Core/Src/freertos.c ****   TIM2->CCR2 = 0; // CCR_value bigger the rpm will highter 0~100
 495              		.loc 1 257 1 is_stmt 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 0
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499 0000 30B5     		push	{r4, r5, lr}
 500              	.LCFI6:
 501              		.cfi_def_cfa_offset 12
 502              		.cfi_offset 4, -12
 503              		.cfi_offset 5, -8
 504              		.cfi_offset 14, -4
 505 0002 83B0     		sub	sp, sp, #12
 506              	.LCFI7:
 507              		.cfi_def_cfa_offset 24
 258:Core/Src/freertos.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 508              		.loc 1 258 3 view .LVU100
 258:Core/Src/freertos.c ****   HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 509              		.loc 1 258 14 is_stmt 0 view .LVU101
 510 0004 0025     		movs	r5, #0
 511 0006 4FF08043 		mov	r3, #1073741824
 512 000a 9D63     		str	r5, [r3, #56]
 259:Core/Src/freertos.c ****   HAL_GPIO_WritePin(CW_CCW_control_GPIO_Port, CW_CCW_control_Pin, 1);
 513              		.loc 1 259 3 is_stmt 1 view .LVU102
 514 000c 0421     		movs	r1, #4
 515 000e 2448     		ldr	r0, .L40+40
 516 0010 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 517              	.LVL31:
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 16


 260:Core/Src/freertos.c ****   osDelay(500);
 518              		.loc 1 260 3 view .LVU103
 519 0014 0122     		movs	r2, #1
 520 0016 0821     		movs	r1, #8
 521 0018 4FF09040 		mov	r0, #1207959552
 522 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 523              	.LVL32:
 261:Core/Src/freertos.c ****   analyze_voltage();
 524              		.loc 1 261 3 view .LVU104
 525 0020 4FF4FA70 		mov	r0, #500
 526 0024 FFF7FEFF 		bl	osDelay
 527              	.LVL33:
 262:Core/Src/freertos.c ****   db_target_angle = Virtual_target_angle;
 528              		.loc 1 262 3 view .LVU105
 529 0028 FFF7FEFF 		bl	analyze_voltage
 530              	.LVL34:
 263:Core/Src/freertos.c ****   PID(&TPID, &current_angle, &CCR_value, &db_target_angle, 1, 0.15, 0, _PID_P_ON_E, _PID_CD_DIRECT)
 531              		.loc 1 263 3 view .LVU106
 263:Core/Src/freertos.c ****   PID(&TPID, &current_angle, &CCR_value, &db_target_angle, 1, 0.15, 0, _PID_P_ON_E, _PID_CD_DIRECT)
 532              		.loc 1 263 19 is_stmt 0 view .LVU107
 533 002c 1D4B     		ldr	r3, .L40+44
 534 002e 0020     		movs	r0, #0
 535 0030 1D49     		ldr	r1, .L40+48
 536 0032 C3E90001 		strd	r0, [r3]
 264:Core/Src/freertos.c ****   PID_SetMode(&TPID, _PID_MODE_AUTOMATIC);
 537              		.loc 1 264 3 is_stmt 1 view .LVU108
 538 0036 1D4C     		ldr	r4, .L40+52
 539 0038 0195     		str	r5, [sp, #4]
 540 003a 0125     		movs	r5, #1
 541 003c 0095     		str	r5, [sp]
 542 003e 9FED0E2B 		vldr.64	d2, .L40
 543 0042 9FED0F1B 		vldr.64	d1, .L40+8
 544 0046 9FED100B 		vldr.64	d0, .L40+16
 545 004a 194A     		ldr	r2, .L40+56
 546 004c 1949     		ldr	r1, .L40+60
 547 004e 2046     		mov	r0, r4
 548 0050 FFF7FEFF 		bl	PID
 549              	.LVL35:
 265:Core/Src/freertos.c ****   PID_SetSampleTime(&TPID, 100);
 550              		.loc 1 265 3 view .LVU109
 551 0054 2946     		mov	r1, r5
 552 0056 2046     		mov	r0, r4
 553 0058 FFF7FEFF 		bl	PID_SetMode
 554              	.LVL36:
 266:Core/Src/freertos.c ****   PID_SetOutputLimits(&TPID, -70, 70);
 555              		.loc 1 266 3 view .LVU110
 556 005c 6421     		movs	r1, #100
 557 005e 2046     		mov	r0, r4
 558 0060 FFF7FEFF 		bl	PID_SetSampleTime
 559              	.LVL37:
 267:Core/Src/freertos.c **** }
 560              		.loc 1 267 3 view .LVU111
 561 0064 9FED0A1B 		vldr.64	d1, .L40+24
 562 0068 9FED0B0B 		vldr.64	d0, .L40+32
 563 006c 2046     		mov	r0, r4
 564 006e FFF7FEFF 		bl	PID_SetOutputLimits
 565              	.LVL38:
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 17


 268:Core/Src/freertos.c **** void CW_CCW_deect(void)
 566              		.loc 1 268 1 is_stmt 0 view .LVU112
 567 0072 03B0     		add	sp, sp, #12
 568              	.LCFI8:
 569              		.cfi_def_cfa_offset 12
 570              		@ sp needed
 571 0074 30BD     		pop	{r4, r5, pc}
 572              	.L41:
 573 0076 00BF     		.align	3
 574              	.L40:
 575 0078 00000000 		.word	0
 576 007c 00000000 		.word	0
 577 0080 33333333 		.word	858993459
 578 0084 3333C33F 		.word	1069757235
 579 0088 00000000 		.word	0
 580 008c 0000F03F 		.word	1072693248
 581 0090 00000000 		.word	0
 582 0094 00805140 		.word	1079083008
 583 0098 00000000 		.word	0
 584 009c 008051C0 		.word	-1068400640
 585 00a0 00000000 		.word	htim2
 586 00a4 00000000 		.word	.LANCHOR0
 587 00a8 000034C0 		.word	-1070333952
 588 00ac 00000000 		.word	.LANCHOR13
 589 00b0 00000000 		.word	.LANCHOR12
 590 00b4 00000000 		.word	.LANCHOR5
 591              		.cfi_endproc
 592              	.LFE173:
 594              		.section	.text.TPDO_tarnsmit,"ax",%progbits
 595              		.align	1
 596              		.global	TPDO_tarnsmit
 597              		.syntax unified
 598              		.thumb
 599              		.thumb_func
 601              	TPDO_tarnsmit:
 602              	.LVL39:
 603              	.LFB177:
 293:Core/Src/freertos.c **** void TPDO_tarnsmit(uint8_t status, int16_t angle)
 294:Core/Src/freertos.c **** {
 604              		.loc 1 294 1 is_stmt 1 view -0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 8
 607              		@ frame_needed = 0, uses_anonymous_args = 0
 608              		.loc 1 294 1 is_stmt 0 view .LVU114
 609 0000 70B5     		push	{r4, r5, r6, lr}
 610              	.LCFI9:
 611              		.cfi_def_cfa_offset 16
 612              		.cfi_offset 4, -16
 613              		.cfi_offset 5, -12
 614              		.cfi_offset 6, -8
 615              		.cfi_offset 14, -4
 616 0002 84B0     		sub	sp, sp, #16
 617              	.LCFI10:
 618              		.cfi_def_cfa_offset 32
 295:Core/Src/freertos.c ****   OD_PERSIST_COMM.x6000_current_angle = angle;
 619              		.loc 1 295 3 is_stmt 1 view .LVU115
 620              		.loc 1 295 39 is_stmt 0 view .LVU116
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 18


 621 0004 184D     		ldr	r5, .L45
 622 0006 A5F8CC10 		strh	r1, [r5, #204]	@ movhi
 296:Core/Src/freertos.c ****   OD_PERSIST_COMM.x6003_status = status;
 623              		.loc 1 296 3 is_stmt 1 view .LVU117
 624              		.loc 1 296 32 is_stmt 0 view .LVU118
 625 000a 85F8D000 		strb	r0, [r5, #208]
 297:Core/Src/freertos.c ****   OD_set_u16(OD_find(OD, 0x6000), 0x000, OD_PERSIST_COMM.x6000_current_angle, false); // change_obj
 626              		.loc 1 297 3 is_stmt 1 view .LVU119
 627 000e 174E     		ldr	r6, .L45+4
 628              		.loc 1 297 14 is_stmt 0 view .LVU120
 629 0010 4FF4C041 		mov	r1, #24576
 630              	.LVL40:
 631              		.loc 1 297 14 view .LVU121
 632 0014 3068     		ldr	r0, [r6]
 633              	.LVL41:
 634              		.loc 1 297 14 view .LVU122
 635 0016 FFF7FEFF 		bl	OD_find
 636              	.LVL42:
 637              		.loc 1 297 57 view .LVU123
 638 001a B5F9CC30 		ldrsh	r3, [r5, #204]
 639              	.LVL43:
 640              		.loc 1 297 57 view .LVU124
 641 001e ADF80E30 		strh	r3, [sp, #14]	@ movhi
 642              	.LVL44:
 643              	.LBB8:
 644              	.LBI8:
 645              		.file 2 "Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h"
   1:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
   2:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * CANopen Object Dictionary interface
   3:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
   4:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @file        CO_ODinterface.h
   5:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ingroup     CO_ODinterface
   6:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @author      Janez Paternoster
   7:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @copyright   2020 Janez Paternoster
   8:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
   9:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
  13:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * you may not use this file except in compliance with the License.
  15:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * You may obtain a copy of the License at
  16:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
  17:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
  19:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Unless required by applicable law or agreed to in writing, software
  20:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * See the License for the specific language governing permissions and
  23:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * limitations under the License.
  24:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
  25:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  26:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifndef CO_OD_INTERFACE_H
  27:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #define CO_OD_INTERFACE_H
  28:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  29:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #include "301/CO_driver.h"
  30:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 19


  31:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifdef __cplusplus
  32:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** extern "C" {
  33:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
  34:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  35:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
  36:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @defgroup CO_ODinterface OD interface
  37:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * CANopen Object Dictionary interface.
  38:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
  39:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ingroup CO_CANopen_301
  40:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @{
  41:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * See @ref doc/objectDictionary.md
  42:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
  43:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  44:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifndef CO_OD_OWN_TYPES
  45:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Variable of type OD_size_t contains data length in bytes of OD variable */
  46:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef uint32_t OD_size_t;
  47:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Type (and size) of Object Dictionary attribute */
  48:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef uint8_t OD_attr_t;
  49:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
  50:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  51:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifndef OD_FLAGS_PDO_SIZE
  52:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Size of of flagsPDO variable inside @ref OD_extension_t, from 0 to 32. */
  53:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #define OD_FLAGS_PDO_SIZE 4
  54:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
  55:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  56:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifndef CO_PROGMEM
  57:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Modifier for OD objects. This is large amount of data and is specified in
  58:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Object Dictionary (OD.c file usually) */
  59:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #define CO_PROGMEM const
  60:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
  61:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  62:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  63:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
  64:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Common DS301 object dictionary entries.
  65:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
  66:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef enum {
  67:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1000_DEV_TYPE           = 0x1000U,/**< Device type */
  68:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1001_ERR_REG            = 0x1001U,/**< Error register */
  69:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1002_MANUF_STATUS_REG   = 0x1002U,/**< Manufacturer status register */
  70:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1003_PREDEF_ERR_FIELD   = 0x1003U,/**< Predefined error field */
  71:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1004_RSV                = 0x1004U,/**< Reserved */
  72:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1005_COBID_SYNC         = 0x1005U,/**< Sync message cob-id */
  73:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1006_COMM_CYCL_PERIOD   = 0x1006U,/**< Communication cycle period */
  74:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1007_SYNC_WINDOW_LEN    = 0x1007U,/**< Sync windows length */
  75:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1008_MANUF_DEV_NAME     = 0x1008U,/**< Manufacturer device name */
  76:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1009_MANUF_HW_VERSION   = 0x1009U,/**< Manufacturer hardware version */
  77:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100A_MANUF_SW_VERSION   = 0x100AU,/**< Manufacturer software version */
  78:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100B_RSV                = 0x100BU,/**< Reserved */
  79:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100C_GUARD_TIME         = 0x100CU,/**< Guard time */
  80:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100D_LIFETIME_FACTOR    = 0x100DU,/**< Life time factor */
  81:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100E_RSV                = 0x100EU,/**< Reserved */
  82:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100F_RSV                = 0x100FU,/**< Reserved */
  83:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1010_STORE_PARAMETERS   = 0x1010U,/**< Store params in persistent mem.*/
  84:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1011_RESTORE_DEFAULT    = 0x1011U,/**< Restore default parameters */
  85:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1012_COBID_TIME         = 0x1012U,/**< Timestamp message cob-id */
  86:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1013_HIGH_RES_TIMESTAMP = 0x1013U,/**< High resolution timestamp */
  87:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1014_COBID_EMERGENCY    = 0x1014U,/**< Emergency message cob-id */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 20


  88:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1015_INHIBIT_TIME_EMCY  = 0x1015U,/**< Inhibit time emergency message */
  89:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1016_CONSUMER_HB_TIME   = 0x1016U,/**< Consumer heartbeat time */
  90:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1017_PRODUCER_HB_TIME   = 0x1017U,/**< Producer heartbeat time */
  91:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1018_IDENTITY_OBJECT    = 0x1018U,/**< Identity object */
  92:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1019_SYNC_CNT_OVERFLOW  = 0x1019U,/**< Sync counter overflow value */
  93:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1020_VERIFY_CONFIG      = 0x1020U,/**< Verify configuration */
  94:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1021_STORE_EDS          = 0x1021U,/**< Store EDS */
  95:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1022_STORE_FORMAT       = 0x1022U,/**< Store format */
  96:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1023_OS_CMD             = 0x1023U,/**< OS command */
  97:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1024_OS_CMD_MODE        = 0x1024U,/**< OS command mode */
  98:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1025_OS_DBG_INTERFACE   = 0x1025U,/**< OS debug interface */
  99:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1026_OS_PROMPT          = 0x1026U,/**< OS prompt */
 100:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1027_MODULE_LIST        = 0x1027U,/**< Module list */
 101:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1028_EMCY_CONSUMER      = 0x1028U,/**< Emergency consumer object */
 102:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1029_ERR_BEHAVIOR       = 0x1029U,/**< Error behaviour */
 103:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1200_SDO_SERVER_1_PARAM = 0x1200U,/**< SDO server parameter */
 104:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1280_SDO_CLIENT_1_PARAM = 0x1280U,/**< SDO client parameter */
 105:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1300_GFC_PARAM          = 0x1300U,/**< Global fail-safe command param */
 106:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1301_SRDO_1_PARAM       = 0x1301U,/**< SRDO communication parameter */
 107:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1381_SRDO_1_MAPPING     = 0x1381U,/**< SRDO mapping parameter */
 108:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H13FE_SRDO_VALID         = 0x13FEU,/**< SRDO Configuration valid */
 109:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H13FF_SRDO_CHECKSUM      = 0x13FFU,/**< SRDO configuration checksum */
 110:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1400_RXPDO_1_PARAM      = 0x1400U,/**< RXPDO communication parameter */
 111:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1600_RXPDO_1_MAPPING    = 0x1600U,/**< RXPDO mapping parameters */
 112:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1800_TXPDO_1_PARAM      = 0x1800U,/**< TXPDO communication parameter */
 113:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1A00_TXPDO_1_MAPPING    = 0x1A00U,/**< TXPDO mapping parameters */
 114:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_ObjDicId_30x_t;
 115:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 116:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 117:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 118:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Attributes (bit masks) for OD sub-object.
 119:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 120:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef enum {
 121:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_SDO_R = 0x01, /**< SDO server may read from the variable */
 122:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_SDO_W = 0x02, /**< SDO server may write to the variable */
 123:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_SDO_RW = 0x03, /**< SDO server may read from or write to the variable */
 124:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_TPDO = 0x04, /**< Variable is mappable into TPDO (can be read) */
 125:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_RPDO = 0x08, /**< Variable is mappable into RPDO (can be written) */
 126:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_TRPDO = 0x0C, /**< Variable is mappable into TPDO or RPDO */
 127:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_TSRDO = 0x10, /**< Variable is mappable into transmitting SRDO */
 128:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_RSRDO = 0x20, /**< Variable is mappable into receiving SRDO */
 129:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_TRSRDO = 0x30, /**< Variable is mappable into tx or rx SRDO */
 130:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_MB = 0x40, /**< Variable is multi-byte ((u)int16_t to (u)int64_t) */
 131:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_STR = 0x80 /**< Shorter value, than specified variable size, may be
 132:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     written to the variable. SDO write will fill remaining memory with zeroes.
 133:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     Attribute is used for VISIBLE_STRING and UNICODE_STRING. */
 134:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_attributes_t;
 135:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 136:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 137:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 138:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Return codes from OD access functions.
 139:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 140:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_getSDOabCode() can be used to retrieve corresponding SDO abort code.
 141:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 142:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef enum {
 143:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /* !!!! WARNING !!!!
 144:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * If changing these values, change also OD_getSDOabCode() function!
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 21


 145:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 146:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Read/write is only partial, make more calls */
 147:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_PARTIAL = -1,
 148:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x00000000 - Read/write successfully finished */
 149:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_OK = 0,
 150:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x05040005 - Out of memory */
 151:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_OUT_OF_MEM = 1,
 152:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06010000 - Unsupported access to an object */
 153:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_UNSUPP_ACCESS = 2,
 154:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06010001 - Attempt to read a write only object */
 155:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_WRITEONLY = 3,
 156:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06010002 - Attempt to write a read only object */
 157:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_READONLY = 4,
 158:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06020000 - Object does not exist in the object dict. */
 159:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_IDX_NOT_EXIST = 5,
 160:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06040041 - Object cannot be mapped to the PDO */
 161:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_NO_MAP = 6,
 162:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06040042 - PDO length exceeded */
 163:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_MAP_LEN = 7,
 164:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06040043 - General parameter incompatibility reasons */
 165:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_PAR_INCOMPAT = 8,
 166:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06040047 - General internal incompatibility in device */
 167:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DEV_INCOMPAT = 9,
 168:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06060000 - Access failed due to hardware error */
 169:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_HW = 10,
 170:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06070010 - Data type does not match */
 171:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_TYPE_MISMATCH = 11,
 172:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06070012 - Data type does not match, length too high */
 173:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_LONG = 12,
 174:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06070013 - Data type does not match, length too short */
 175:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_SHORT = 13,
 176:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090011 - Sub index does not exist */
 177:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_SUB_NOT_EXIST = 14,
 178:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090030 - Invalid value for parameter (download only) */
 179:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_INVALID_VALUE = 15,
 180:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090031 - Value range of parameter written too high */
 181:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_VALUE_HIGH = 16,
 182:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090032 - Value range of parameter written too low */
 183:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_VALUE_LOW = 17,
 184:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090036 - Maximum value is less than minimum value */
 185:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_MAX_LESS_MIN = 18,
 186:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x060A0023 - Resource not available: SDO connection */
 187:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_NO_RESOURCE = 19,
 188:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000000 - General error */
 189:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_GENERAL = 20,
 190:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000020 - Data cannot be transferred or stored to app */
 191:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_TRANSF = 21,
 192:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000021 - Data can't be transferred (local control) */
 193:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_LOC_CTRL = 22,
 194:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000022 - Data can't be transf. (present device state) */
 195:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_DEV_STATE = 23,
 196:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000023 - Object dictionary not present */
 197:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_OD_MISSING = 23,
 198:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000024 - No data available */
 199:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_NO_DATA = 25,
 200:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Last element, number of responses */
 201:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_COUNT = 26
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 22


 202:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } ODR_t;
 203:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 204:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 205:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 206:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * IO stream structure, used for read/write access to OD variable, part of
 207:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_IO_t.
 208:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 209:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 210:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Pointer to original data object, defined by Object Dictionary. Default
 211:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * read/write functions operate on it. If memory for data object is not
 212:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * specified by Object Dictionary, then dataOrig is NULL.
 213:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      */
 214:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     void *dataOrig;
 215:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Pointer to object, passed by @ref OD_extension_init(). Can be used
 216:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * inside read / write functions from IO extension.
 217:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      */
 218:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     void *object;
 219:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Data length in bytes or 0, if length is not specified */
 220:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_size_t dataLength;
 221:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** In case of large data, dataOffset indicates position of already
 222:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * transferred data */
 223:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_size_t dataOffset;
 224:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Attribute bit-field of the OD sub-object, see @ref OD_attributes_t */
 225:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_attr_t attribute;
 226:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Sub index of the OD sub-object, informative */
 227:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint8_t subIndex;
 228:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_stream_t;
 229:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 230:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 231:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 232:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Structure for input / output on the OD variable. It is initialized with
 233:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_getSub() function. Access principle to OD variable is via read/write
 234:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * functions operating on stream, similar as standard read/write.
 235:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 236:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 237:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Object Dictionary stream object, passed to read or write */
 238:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_stream_t stream;
 239:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /**
 240:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Function pointer for reading value from specified variable from Object
 241:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Dictionary. If OD variable is larger than buf, then this function must
 242:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * be called several times. After completed successful read function returns
 243:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * 'ODR_OK'. If read is partial, it returns 'ODR_PARTIAL'. In case of errors
 244:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * function returns code similar to SDO abort code.
 245:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 246:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Read can be restarted with @ref OD_rwRestart() function.
 247:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 248:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * At the moment, when Object Dictionary is initialized, every variable has
 249:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * assigned the same "read" function. This default function simply copies
 250:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * data from Object Dictionary variable. Application can bind its own "read"
 251:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * function for specific object. In that case application is able to
 252:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * calculate data for reading from own internal state at the moment of
 253:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * "read" function call. Own "read" function on OD object can be initialized
 254:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * with @ref OD_extension_init() function.
 255:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 256:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * "read" function must always copy all own data to buf, except if "buf" is
 257:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * not large enough. ("*returnCode" must not return 'ODR_PARTIAL', if there
 258:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * is still space in "buf".)
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 23


 259:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 260:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @warning When accessing OD variables by calling the read() function, it
 261:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * may be necessary to use @ref CO_LOCK_OD() and @ref CO_UNLOCK_OD() macros.
 262:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * See @ref CO_critical_sections for more information.
 263:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 264:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param stream Object Dictionary stream object.
 265:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param buf Pointer to external buffer, where to data will be copied.
 266:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param count Size of the external buffer in bytes.
 267:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param [out] countRead If return value is "ODR_OK" or "ODR_PARTIAL",
 268:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * then number of bytes successfully read must be returned here.
 269:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 270:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 271:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      */
 272:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_t (*read)(OD_stream_t *stream, void *buf,
 273:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                   OD_size_t count, OD_size_t *countRead);
 274:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /**
 275:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Function pointer for writing value into specified variable inside Object
 276:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Dictionary. If OD variable is larger than buf, then this function must
 277:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * be called several times. After completed successful write function
 278:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * returns 'ODR_OK'. If write is partial, it returns 'ODR_PARTIAL'. In case
 279:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * of errors function returns code similar to SDO abort code.
 280:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 281:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Write can be restarted with @ref OD_rwRestart() function.
 282:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 283:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * At the moment, when Object Dictionary is initialized, every variable has
 284:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * assigned the same "write" function, which simply copies data to Object
 285:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Dictionary variable. Application can bind its own "write" function,
 286:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * similar as it can bind "read" function.
 287:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 288:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * "write" function must always copy all available data from buf. If OD
 289:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * variable expect more data, then "*returnCode" must return 'ODR_PARTIAL'.
 290:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 291:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @warning When accessing OD variables by calling the read() function, it
 292:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * may be necessary to use @ref CO_LOCK_OD() and @ref CO_UNLOCK_OD() macros.
 293:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * See @ref CO_critical_sections for more information.
 294:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 295:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param stream Object Dictionary stream object.
 296:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param buf Pointer to external buffer, from where data will be copied.
 297:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param count Size of the external buffer in bytes.
 298:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param [out] countWritten If return value is "ODR_OK" or "ODR_PARTIAL",
 299:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * then number of bytes successfully written must be returned here.
 300:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 301:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 302:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      */
 303:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_t (*write)(OD_stream_t *stream, const void *buf,
 304:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                    OD_size_t count, OD_size_t *countWritten);
 305:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_IO_t;
 306:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 307:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 308:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 309:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Extension of OD object, which can optionally be specified by application in
 310:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * initialization phase with @ref OD_extension_init() function.
 311:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 312:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 313:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Object on which read and write will operate, part of @ref OD_stream_t */
 314:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     void *object;
 315:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Application specified read function pointer. If NULL, then read will be
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 24


 316:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * disabled. @ref OD_readOriginal can be used here to keep the original read
 317:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * function. For function description see @ref OD_IO_t. */
 318:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_t (*read)(OD_stream_t *stream, void *buf,
 319:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                   OD_size_t count, OD_size_t *countRead);
 320:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Application specified write function pointer. If NULL, then write will
 321:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * be disabled. @ref OD_writeOriginal can be used here to keep the original
 322:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * write function. For function description see @ref OD_IO_t. */
 323:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_t (*write)(OD_stream_t *stream, const void *buf,
 324:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                    OD_size_t count, OD_size_t *countWritten);
 325:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 326:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /**PDO flags bit-field provides one bit for each OD variable, which exist
 327:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * inside OD object at specific sub index. If application clears that bit,
 328:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * and OD variable is mapped to an event driven TPDO, then TPDO will be
 329:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * sent.
 330:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 331:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @ref OD_FLAGS_PDO_SIZE can have a value from 0 to 32 bytes, which
 332:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * corresponds to 0 to 256 available bits. If, for example,
 333:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @ref OD_FLAGS_PDO_SIZE has value 4, then OD variables with sub index up
 334:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * to 31 will have the TPDO requesting functionality.
 335:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * See also @ref OD_requestTPDO and @ref OD_TPDOtransmitted. */
 336:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint8_t flagsPDO[OD_FLAGS_PDO_SIZE];
 337:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
 338:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_extension_t;
 339:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 340:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 341:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 342:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Object Dictionary entry for one OD object.
 343:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 344:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * OD entries are collected inside OD_t as array (list). Each OD entry contains
 345:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * basic information about OD object (index and subEntriesCount), pointer to
 346:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * odObject with additional information about var, array or record entry and
 347:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * pointer to extension, configurable by application.
 348:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 349:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 350:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Object Dictionary index */
 351:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint16_t index;
 352:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Number of all sub-entries, including sub-entry at sub-index 0 */
 353:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint8_t subEntriesCount;
 354:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Type of the odObject, indicated by @ref OD_objectTypes_t enumerator. */
 355:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint8_t odObjectType;
 356:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** OD object of type indicated by odObjectType, from which @ref OD_getSub()
 357:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * fetches the information */
 358:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     CO_PROGMEM void *odObject;
 359:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Extension to OD, specified by application */
 360:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_extension_t *extension;
 361:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_entry_t;
 362:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 363:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 364:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 365:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Object Dictionary
 366:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 367:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 368:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Number of elements in the list, without last element, which is blank */
 369:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint16_t size;
 370:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** List OD entries (table of contents), ordered by index */
 371:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_entry_t *list;
 372:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_t;
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 25


 373:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 374:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 375:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 376:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Read value from original OD location
 377:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 378:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This function can be used inside read / write functions, specified by
 379:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_extension_init(). It reads data directly from memory location
 380:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * specified by Object dictionary. If no IO extension is used on OD entry, then
 381:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * io->read returned by @ref OD_getSub() equals to this function. See
 382:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * also @ref OD_IO_t.
 383:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 384:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_readOriginal(OD_stream_t *stream, void *buf,
 385:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                       OD_size_t count, OD_size_t *countRead);
 386:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 387:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 388:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 389:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Write value to original OD location
 390:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 391:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This function can be used inside read / write functions, specified by
 392:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_extension_init(). It writes data directly to memory location
 393:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * specified by Object dictionary. If no IO extension is used on OD entry, then
 394:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * io->write returned by @ref OD_getSub() equals to this function. See
 395:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * also @ref OD_IO_t.
 396:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 397:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_writeOriginal(OD_stream_t *stream, const void *buf,
 398:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                        OD_size_t count, OD_size_t *countWritten);
 399:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 400:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 401:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 402:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Find OD entry in Object Dictionary
 403:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 404:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param od Object Dictionary
 405:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param index CANopen Object Dictionary index of object in Object Dictionary
 406:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 407:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Pointer to OD entry or NULL if not found
 408:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 409:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** OD_entry_t *OD_find(OD_t *od, uint16_t index);
 410:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 411:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 412:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 413:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Find sub-object with specified sub-index on OD entry returned by OD_find.
 414:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Function populates io structure with sub-object data.
 415:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 416:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @warning
 417:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Read and write functions may be called from different threads, so critical
 418:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * sections in custom functions must be observed, see @ref CO_critical_sections.
 419:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 420:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 421:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex Sub-index of the variable from the OD object.
 422:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param [out] io Structure will be populated on success.
 423:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param odOrig If true, then potential IO extension on entry will be
 424:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * ignored and access to data entry in the original OD location will be returned
 425:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 426:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 427:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 428:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_getSub(const OD_entry_t *entry, uint8_t subIndex,
 429:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                 OD_IO_t *io, bool_t odOrig);
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 26


 430:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 431:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 432:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 433:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Return index from OD entry
 434:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 435:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 436:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 437:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return OD index
 438:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 439:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline uint16_t OD_getIndex(const OD_entry_t *entry) {
 440:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return (entry != NULL) ? entry->index : 0;
 441:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 442:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 443:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 444:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 445:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Check, if OD variable is mappable to PDO or SRDO.
 446:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 447:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * If OD variable is mappable, then it may be necessary to protect read/write
 448:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * access from mainline function. See @ref CO_critical_sections.
 449:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 450:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param stream Object Dictionary stream object.
 451:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 452:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return true, if OD variable is mappable.
 453:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 454:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline bool_t OD_mappable(OD_stream_t *stream) {
 455:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return (stream != NULL)
 456:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****          ? (stream->attribute & (ODA_TRPDO | ODA_TRSRDO)) != 0 : false;
 457:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 458:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 459:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 460:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 461:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Restart read or write operation on OD variable
 462:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 463:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * It is not necessary to call this function, if stream was initialized by
 464:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_getSub(). It is also not necessary to call this function, if
 465:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * previous read or write was successfully finished.
 466:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 467:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param stream Object Dictionary stream object.
 468:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 469:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline void OD_rwRestart(OD_stream_t *stream) {
 470:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (stream != NULL) stream->dataOffset = 0;
 471:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 472:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 473:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 474:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 475:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Get TPDO request flags for OD entry.
 476:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 477:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * flagsPDO can be used for @ref OD_requestTPDO() or @ref OD_TPDOtransmitted().
 478:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 479:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 480:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 481:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return pointer to flagsPDO
 482:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 483:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline uint8_t *OD_getFlagsPDO(OD_entry_t *entry) {
 484:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 485:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (entry != NULL && entry->extension != NULL) {
 486:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         return &entry->extension->flagsPDO[0];
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 27


 487:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     }
 488:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
 489:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return 0;
 490:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 491:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 492:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 493:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 494:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Request TPDO, to which OD variable is mapped
 495:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 496:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Function clears the flagPDO bit, which corresponds to OD variable at specific
 497:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * OD index and subindex. For this functionality to work, @ref OD_extension_t
 498:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * must be enabled on OD variable. If OD variable is mapped to any TPDO with
 499:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * event driven transmission, then TPDO will be transmitted after this function
 500:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * call. If OD variable is mapped to more than one TPDO with event driven
 501:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * transmission, only the first matched TPDO will be transmitted.
 502:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 503:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * TPDO event driven transmission is enabled, if TPDO communication parameter,
 504:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * transmission type is set to 0, 254 or 255. For other transmission types
 505:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * (synchronous) flagPDO bit is ignored.
 506:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 507:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param flagsPDO TPDO request flags returned by @ref OD_getFlagsPDO.
 508:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex subIndex of the OD variable.
 509:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 510:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline void OD_requestTPDO(uint8_t *flagsPDO, uint8_t subIndex) {
 511:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 512:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (flagsPDO != NULL && subIndex < (OD_FLAGS_PDO_SIZE * 8)) {
 513:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         /* clear subIndex-th bit */
 514:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         uint8_t mask = ~(1 << (subIndex & 0x07));
 515:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         flagsPDO[subIndex >> 3] &= mask;
 516:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     }
 517:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
 518:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 519:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 520:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 521:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 522:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Check if requested TPDO was transmitted
 523:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 524:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param flagsPDO TPDO request flags returned by @ref OD_getFlagsPDO.
 525:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex subIndex of the OD variable.
 526:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 527:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Return true if event driven TPDO with mapping to OD variable,
 528:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * indicated by flagsPDO and subIndex, was transmitted since last
 529:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_requestTPDO call. If there was no @ref OD_requestTPDO call yet and
 530:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * TPDO was transmitted by other event, function also returns true.
 531:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 532:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline bool_t OD_TPDOtransmitted(uint8_t *flagsPDO, uint8_t subIndex) {
 533:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 534:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (flagsPDO != NULL && subIndex < (OD_FLAGS_PDO_SIZE * 8)) {
 535:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         /* return true, if subIndex-th bit is set */
 536:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         uint8_t mask = 1 << (subIndex & 0x07);
 537:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         if ((flagsPDO[subIndex >> 3] & mask) != 0) {
 538:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****             return true;
 539:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         }
 540:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     }
 541:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
 542:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return false;
 543:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 28


 544:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 545:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 546:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 547:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Get SDO abort code from returnCode
 548:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 549:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param returnCode Returned from some OD access functions
 550:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 551:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Corresponding @ref CO_SDO_abortCode_t
 552:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 553:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** uint32_t OD_getSDOabCode(ODR_t returnCode);
 554:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 555:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 556:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 557:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Extend OD object with own read/write functions and/or flagsPDO
 558:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 559:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This function gives application very powerful tool: definition of own IO
 560:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * access on OD object. Structure and attributes are the same as defined in
 561:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * original OD object, but data are read directly from (or written directly to)
 562:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * application specified object via custom function calls.
 563:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 564:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Before this function specifies extension, OD variables are accessed from
 565:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * original OD location. After this function specifies extension OD variables
 566:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * are accessed from read/write functions specified by extension. (Except when
 567:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * "odOrig" argument to @ref OD_getSub() is set to true.)
 568:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 569:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This function must also be used, when flagsPDO needs to be enabled for
 570:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * specific entry.
 571:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 572:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @warning
 573:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Object dictionary storage works only directly on OD variables. It does not
 574:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * access read function specified here. So, if extended OD objects needs to be
 575:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * preserved, then @ref OD_writeOriginal can be used inside custom write
 576:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * function.
 577:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 578:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @warning
 579:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Read and write functions may be called from different threads, so critical
 580:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * sections in custom functions must be observed, see @ref CO_critical_sections.
 581:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 582:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 583:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param extension Extension object, which must be initialized externally.
 584:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Extension object must exist permanently. If NULL, extension will be removed.
 585:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 586:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return "ODR_OK" on success, "ODR_IDX_NOT_EXIST" if OD object doesn't exist.
 587:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 588:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_extension_init(OD_entry_t *entry,
 589:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                       OD_extension_t *extension)
 590:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 591:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (entry == NULL) return ODR_IDX_NOT_EXIST;
 592:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     entry->extension = extension;
 593:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return ODR_OK;
 594:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 595:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 596:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 597:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 598:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @defgroup CO_ODgetSetters Getters and setters
 599:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @{
 600:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 29


 601:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Getter and setter helper functions for accessing different types of Object
 602:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Dictionary variables.
 603:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 604:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 605:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Get variable from Object Dictionary
 606:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 607:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 608:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex Sub-index of the variable from the OD object.
 609:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param [out] val Value will be written here.
 610:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param len Size of value to retrieve from OD.
 611:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param odOrig If true, then potential IO extension on entry will be
 612:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * ignored and data in the original OD location will be returned.
 613:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 614:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Value from @ref ODR_t, "ODR_OK" in case of success. Error, if
 615:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * variable does not exist in object dictionary or it does not have the correct
 616:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * length or other reason.
 617:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 618:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_get_value(const OD_entry_t *entry, uint8_t subIndex,
 619:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                    void *val, OD_size_t len, bool_t odOrig);
 620:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 621:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get int8_t variable from Object Dictionary, see @ref OD_get_value */
 622:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_i8(const OD_entry_t *entry, uint8_t subIndex,
 623:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               int8_t *val, bool_t odOrig)
 624:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 625:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 626:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 627:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 628:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get int16_t variable from Object Dictionary, see @ref OD_get_value */
 629:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_i16(const OD_entry_t *entry, uint8_t subIndex,
 630:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int16_t *val, bool_t odOrig)
 631:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 632:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 633:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 634:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 635:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get int32_t variable from Object Dictionary, see @ref OD_get_value */
 636:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_i32(const OD_entry_t *entry, uint8_t subIndex,
 637:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int32_t *val, bool_t odOrig)
 638:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 639:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 640:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 641:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 642:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get int64_t variable from Object Dictionary, see @ref OD_get_value */
 643:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_i64(const OD_entry_t *entry, uint8_t subIndex,
 644:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int64_t *val, bool_t odOrig)
 645:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 646:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 647:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 648:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 649:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get uint8_t variable from Object Dictionary, see @ref OD_get_value */
 650:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_u8(const OD_entry_t *entry, uint8_t subIndex,
 651:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               uint8_t *val, bool_t odOrig)
 652:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 653:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 654:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 655:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 656:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get uint16_t variable from Object Dictionary, see @ref OD_get_value */
 657:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_u16(const OD_entry_t *entry, uint8_t subIndex,
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 30


 658:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                uint16_t *val, bool_t odOrig)
 659:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 660:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 661:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 662:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 663:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get uint32_t variable from Object Dictionary, see @ref OD_get_value */
 664:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_u32(const OD_entry_t *entry, uint8_t subIndex,
 665:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                uint32_t *val, bool_t odOrig)
 666:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 667:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 668:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 669:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 670:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get uint64_t variable from Object Dictionary, see @ref OD_get_value */
 671:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_u64(const OD_entry_t *entry, uint8_t subIndex,
 672:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                uint64_t *val, bool_t odOrig)
 673:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 674:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 675:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 676:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 677:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get float32_t variable from Object Dictionary, see @ref OD_get_value */
 678:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_f32(const OD_entry_t *entry, uint8_t subIndex,
 679:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                float32_t *val, bool_t odOrig)
 680:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 681:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 682:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 683:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 684:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get float64_t variable from Object Dictionary, see @ref OD_get_value */
 685:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_f64(const OD_entry_t *entry, uint8_t subIndex,
 686:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                float64_t *val, bool_t odOrig)
 687:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 688:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 689:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 690:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 691:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 692:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Set variable in Object Dictionary
 693:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 694:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 695:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex Sub-index of the variable from the OD object.
 696:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param val Pointer to value to write.
 697:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param len Size of value to write.
 698:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param odOrig If true, then potential IO extension on entry will be
 699:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * ignored and data in the original OD location will be written.
 700:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 701:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Value from @ref ODR_t, "ODR_OK" in case of success. Error, if
 702:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * variable does not exist in object dictionary or it does not have the correct
 703:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * length or other reason.
 704:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 705:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_set_value(const OD_entry_t *entry, uint8_t subIndex, void *val,
 706:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                    OD_size_t len, bool_t odOrig);
 707:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 708:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Set int8_t variable in Object Dictionary, see @ref OD_set_value */
 709:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_set_i8(const OD_entry_t *entry, uint8_t subIndex,
 710:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               int8_t val, bool_t odOrig)
 711:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 712:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_set_value(entry, subIndex, &val, sizeof(val), odOrig);
 713:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 714:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 31


 715:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Set int16_t variable in Object Dictionary, see @ref OD_set_value */
 716:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_set_i16(const OD_entry_t *entry, uint8_t subIndex,
 717:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int16_t val, bool_t odOrig)
 718:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 719:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_set_value(entry, subIndex, &val, sizeof(val), odOrig);
 720:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 721:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 722:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Set int32_t variable in Object Dictionary, see @ref OD_set_value */
 723:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_set_i32(const OD_entry_t *entry, uint8_t subIndex,
 724:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int32_t val, bool_t odOrig)
 725:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 726:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_set_value(entry, subIndex, &val, sizeof(val), odOrig);
 727:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 728:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 729:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Set int32_t variable in Object Dictionary, see @ref OD_set_value */
 730:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_set_i64(const OD_entry_t *entry, uint8_t subIndex,
 731:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int64_t val, bool_t odOrig)
 732:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 733:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_set_value(entry, subIndex, &val, sizeof(val), odOrig);
 734:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 735:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 736:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Set uint8_t variable in Object Dictionary, see @ref OD_set_value */
 737:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_set_u8(const OD_entry_t *entry, uint8_t subIndex,
 738:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               uint8_t val, bool_t odOrig)
 739:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_set_value(entry, subIndex, &val, sizeof(val), odOrig);
 741:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 742:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 743:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Set uint16_t variable in Object Dictionary, see @ref OD_set_value */
 744:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_set_u16(const OD_entry_t *entry, uint8_t subIndex,
 646              		.loc 2 744 21 is_stmt 1 view .LVU125
 647              	.LBB9:
 745:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                uint16_t val, bool_t odOrig)
 746:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 747:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_set_value(entry, subIndex, &val, sizeof(val), odOrig);
 648              		.loc 2 747 5 view .LVU126
 649              		.loc 2 747 12 is_stmt 0 view .LVU127
 650 0022 0024     		movs	r4, #0
 651 0024 0094     		str	r4, [sp]
 652 0026 0223     		movs	r3, #2
 653              	.LVL45:
 654              		.loc 2 747 12 view .LVU128
 655 0028 0DF10E02 		add	r2, sp, #14
 656              	.LVL46:
 657              		.loc 2 747 12 view .LVU129
 658 002c 2146     		mov	r1, r4
 659 002e FFF7FEFF 		bl	OD_set_value
 660              	.LVL47:
 661              		.loc 2 747 12 view .LVU130
 662              	.LBE9:
 663              	.LBE8:
 298:Core/Src/freertos.c ****   OD_set_u8(OD_find(OD, 0x6003), 0x000, OD_PERSIST_COMM.x6003_status, false);
 664              		.loc 1 298 3 is_stmt 1 view .LVU131
 665              		.loc 1 298 13 is_stmt 0 view .LVU132
 666 0032 46F20301 		movw	r1, #24579
 667 0036 3068     		ldr	r0, [r6]
 668 0038 FFF7FEFF 		bl	OD_find
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 32


 669              	.LVL48:
 670              		.loc 1 298 3 view .LVU133
 671 003c 95F8D030 		ldrb	r3, [r5, #208]	@ zero_extendqisi2
 672              	.LVL49:
 673              		.loc 1 298 3 view .LVU134
 674 0040 8DF80E30 		strb	r3, [sp, #14]
 675              	.LVL50:
 676              	.LBB10:
 677              	.LBI10:
 737:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               uint8_t val, bool_t odOrig)
 678              		.loc 2 737 21 is_stmt 1 view .LVU135
 679              	.LBB11:
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 680              		.loc 2 740 5 view .LVU136
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 681              		.loc 2 740 12 is_stmt 0 view .LVU137
 682 0044 0094     		str	r4, [sp]
 683 0046 0123     		movs	r3, #1
 684              	.LVL51:
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 685              		.loc 2 740 12 view .LVU138
 686 0048 0DF10E02 		add	r2, sp, #14
 687              	.LVL52:
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 688              		.loc 2 740 12 view .LVU139
 689 004c 2146     		mov	r1, r4
 690 004e FFF7FEFF 		bl	OD_set_value
 691              	.LVL53:
 740:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 692              		.loc 2 740 12 view .LVU140
 693              	.LBE11:
 694              	.LBE10:
 299:Core/Src/freertos.c ****   CO_TPDOsendRequest(&canopenNodeSTM32->canOpenStack->TPDO[0]);
 695              		.loc 1 299 3 is_stmt 1 view .LVU141
 696              		.loc 1 299 39 is_stmt 0 view .LVU142
 697 0052 074B     		ldr	r3, .L45+8
 698 0054 1B68     		ldr	r3, [r3]
 699 0056 5B69     		ldr	r3, [r3, #20]
 700              		.loc 1 299 3 view .LVU143
 701 0058 5B6B     		ldr	r3, [r3, #52]
 702              	.LVL54:
 703              	.LBB12:
 704              	.LBI12:
 705              		.file 3 "Middlewares/Third_Party/CANopenNode/301/CO_PDO.h"
   1:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
   2:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * CANopen Process Data Object protocol.
   3:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
   4:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @file        CO_PDO.h
   5:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @ingroup     CO_PDO
   6:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @author      Janez Paternoster
   7:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @copyright   2021 Janez Paternoster
   8:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
   9:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  13:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 33


  14:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * you may not use this file except in compliance with the License.
  15:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * You may obtain a copy of the License at
  16:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  17:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  19:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Unless required by applicable law or agreed to in writing, software
  20:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * See the License for the specific language governing permissions and
  23:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * limitations under the License.
  24:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
  25:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  26:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_PDO_H
  27:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_PDO_H
  28:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  29:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #include "301/CO_ODinterface.h"
  30:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #include "301/CO_Emergency.h"
  31:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #include "301/CO_SYNC.h"
  32:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  33:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /* default configuration, see CO_config.h */
  34:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_CONFIG_PDO
  35:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_CONFIG_PDO (CO_CONFIG_RPDO_ENABLE | \
  36:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_TPDO_ENABLE | \
  37:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_RPDO_TIMERS_ENABLE | \
  38:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_TPDO_TIMERS_ENABLE | \
  39:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_PDO_SYNC_ENABLE | \
  40:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_PDO_OD_IO_ACCESS | \
  41:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_GLOBAL_RT_FLAG_CALLBACK_PRE | \
  42:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_GLOBAL_FLAG_TIMERNEXT | \
  43:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                        CO_CONFIG_GLOBAL_FLAG_OD_DYNAMIC)
  44:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
  45:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  46:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & (CO_CONFIG_RPDO_ENABLE | CO_CONFIG_TPDO_ENABLE)) || defined CO_DOXYGEN
  47:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  48:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifdef __cplusplus
  49:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** extern "C" {
  50:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
  51:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  52:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
  53:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @defgroup CO_PDO PDO
  54:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * CANopen Process Data Object protocol.
  55:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  56:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @ingroup CO_CANopen_301
  57:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @{
  58:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Process data objects are used for real-time data transfer with no protocol
  59:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * overhead.
  60:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  61:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * TPDO with specific identifier is transmitted by one device and recieved by
  62:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * zero or more devices as RPDO. PDO communication parameters(COB-ID,
  63:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * transmission type, etc.) are in the Object Dictionary at index 0x1400+ and
  64:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * 0x1800+. PDO mapping parameters (size and contents of the PDO) are in the
  65:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Object Dictionary at index 0x1600+ and 0x1A00+.
  66:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  67:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Features of the PDO as implemented in CANopenNode:
  68:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *  - Dynamic PDO mapping.
  69:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *  - Map granularity of one byte.
  70:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *  - Data from OD variables are accessed via @ref OD_IO_t read()/write()
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 34


  71:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    functions, which gives a great usefulness to the application.
  72:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *  - For systems with very low memory and processing capabilities there is a
  73:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    simplified @ref CO_CONFIG_PDO option, where instead of read()/write()
  74:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    access, PDO data are copied directly to/from memory locations of
  75:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    OD variables.
  76:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *  - After RPDO is received from CAN bus, its data are copied to internal
  77:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    buffer (inside fast CAN receive interrupt). Function CO_RPDO_process()
  78:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    (called by application) copies data to the mapped objects in the Object
  79:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    Dictionary. Synchronous RPDOs are processed AFTER reception of the next
  80:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    SYNC message.
  81:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *  - Function CO_TPDO_process() (called by application) sends TPDO when
  82:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    necessary. There are different transmission types possible, controlled by:
  83:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    SYNC message, event timer, @ref CO_TPDOsendRequest() by application or
  84:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    @ref OD_requestTPDO(), where application can request TPDO for OD
  85:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    variable mapped to any of them. In later case application may, for
  86:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    example, monitor change of state of the OD variable and indicate TPDO
  87:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *    request on it.
  88:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  89:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @anchor CO_PDO_CAN_ID
  90:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * ### CAN identifiers for PDO
  91:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
  92:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Each PDO can be configured with any valid 11-bit CAN identifier. Lower
  93:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * numbers have higher priorities on CAN bus. As a general rule, each CAN
  94:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * message is identified with own CAN-ID, which must be unique and produced by
  95:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * single source. The same is with PDO objects: Any TPDO produced on the CANopen
  96:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * network must have unique CAN-ID and there can be zero to many RPDOs (from
  97:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * different devices) configured to match the CAN-ID of the TPDO of interest.
  98:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
  99:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * CANopen standard provides pre-defined connection sets for four RPDOs and four
 100:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * TPDOs on each device with specific 7-bit Node-ID. These are default values
 101:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * and are usable in configuration, where CANopen network contains a master
 102:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * device, which directly communicates with many slaves. In de-centralized
 103:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * systems, where devices operate without a master, it makes sense to configure
 104:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * CAN-IDs of the RPDOs to the non-default values.
 105:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 106:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Default CAN identifiers for first four TPDOs on device with specific CANopen
 107:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Node-Id are: 0x180+NodeId, 0x280+NodeId, 0x380+NodeId and 0x480+NodeId.
 108:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 109:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Default CAN identifiers for first four RPDOs on device with specific CANopen
 110:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Node-Id are: 0x200+NodeId, 0x300+NodeId, 0x400+NodeId and 0x500+NodeId.
 111:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 112:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * CANopenNode handles default (pre-defined) CAN-IDs. If it is detected, that
 113:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * PDO is configured with default CAN-ID (when writing to OD variable PDO
 114:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * communication parameter, COB-ID), then COB-ID is stored without Node-Id to
 115:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * the Object Dictionary. If Node-ID is changed, then COB-ID will always contain
 116:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * correct default CAN-ID (default CAN-ID + Node-ID). If PDO is configured with
 117:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * non-default CAN-ID, then it will be stored to the Object Dictionary as is.
 118:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 119:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * If configuration CO_CONFIG_FLAG_OD_DYNAMIC is enabled in @ref CO_CONFIG_PDO,
 120:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * then PDOs can be configured dynamically, also in NMT operational state.
 121:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Otherwise PDOs are configured only in reset communication section and also
 122:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * default CAN-IDs are always stored to OD as is, no default node-id is handled.
 123:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 124:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Configure PDO by writing to the OD variables in the following procedure:
 125:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * - Disable the PDO by setting bit-31 to 1 in PDO communication parameter,
 126:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *   COB-ID
 127:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * - Node-Id can be configured only when PDO is disabled.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 35


 128:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * - Disable mapping by setting PDO mapping parameter, sub index 0 to 0
 129:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * - Configure mapping
 130:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * - Enable mapping by setting PDO mapping param, sub 0 to number of mapped
 131:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *   objects
 132:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * - Enable the PDO by setting bit-31 to 0 in PDO communication parameter,
 133:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *   COB-ID
 134:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 135:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 136:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /** Maximum size of PDO message, 8 for standard CAN */
 137:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_PDO_MAX_SIZE
 138:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_PDO_MAX_SIZE 8
 139:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 140:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 141:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /** Maximum number of entries, which can be mapped to PDO, 8 for standard CAN,
 142:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * may be less to preserve RAM usage */
 143:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_PDO_MAX_MAPPED_ENTRIES
 144:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_PDO_MAX_MAPPED_ENTRIES 8
 145:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 146:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 147:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /** Number of CANopen RPDO objects, which uses default CAN indentifiers.
 148:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * By default first four RPDOs have pre-defined CAN identifiers, which depends
 149:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * on node-id. This constant may be set to 0 to disable functionality or set
 150:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * to any other value. For example, if there are several logical devices inside
 151:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * single CANopen device, then more than four RPDOs may have pre-defined CAN
 152:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * identifiers. In that case RPDO5 has CAN_ID=0x200+NodeId+1, RPDO6 has
 153:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * CAN_ID=0x300+NodeId+1, RPDO9 has CAN_ID=0x200+NodeId+2 and so on. */
 154:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_RPDO_DEFAULT_CANID_COUNT
 155:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_RPDO_DEFAULT_CANID_COUNT 4
 156:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 157:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 158:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /** Number of CANopen TPDO objects, which uses default CAN indentifiers.
 159:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * If value is more than four, then pre-defined pre-defined CAN identifiers are:
 160:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * TPDO5 has CAN_ID=0x180+NodeId+1, TPDO6 has CAN_ID=0x280+NodeId+1,
 161:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * TPDO9 has CAN_ID=0x180+NodeId+2 and so on.
 162:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * For description see @ref CO_RPDO_DEFAULT_CANID_COUNT. */
 163:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_TPDO_DEFAULT_CANID_COUNT
 164:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_TPDO_DEFAULT_CANID_COUNT 4
 165:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 166:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 167:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #ifndef CO_PDO_OWN_TYPES
 168:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /** Variable of type CO_PDO_size_t contains data length in bytes of PDO */
 169:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** typedef uint8_t CO_PDO_size_t;
 170:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 171:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 172:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 173:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * PDO transmission Types
 174:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 175:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** typedef enum {
 176:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_TRANSM_TYPE_SYNC_ACYCLIC = 0, /**< synchronous (acyclic) */
 177:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_TRANSM_TYPE_SYNC_1 = 1, /**< synchronous (cyclic every sync) */
 178:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_TRANSM_TYPE_SYNC_240 = 0xF0, /**< synchronous (cyclic every 240-th
 179:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     sync) */
 180:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_TRANSM_TYPE_SYNC_EVENT_LO = 0xFE, /**< event-driven, lower value
 181:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     (manufacturer specific),  */
 182:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_TRANSM_TYPE_SYNC_EVENT_HI = 0xFF /**< event-driven, higher value
 183:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     (device profile and application profile specific) */
 184:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** } CO_PDO_transmissionTypes_t;
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 36


 185:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 186:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 187:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * PDO object, common properties
 188:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 189:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** typedef struct {
 190:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_xPDO_init() */
 191:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_EM_t *em;
 192:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_xPDO_init() */
 193:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_CANmodule_t *CANdev;
 194:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** True, if PDO is enabled and valid */
 195:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     bool_t valid;
 196:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Data length of the received PDO message. Calculated from mapping */
 197:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_size_t dataLength;
 198:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Number of mapped objects in PDO */
 199:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t mappedObjectsCount;
 200:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_OD_IO_ACCESS) || defined CO_DOXYGEN
 201:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Object dictionary interface for all mapped entries. OD_IO.dataOffset has
 202:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * special usage with PDO. It stores information about mappedLength of
 203:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * the variable. mappedLength can be less or equal to the OD_IO.dataLength.
 204:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * mappedLength greater than OD_IO.dataLength indicates erroneous mapping.
 205:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * OD_IO.dataOffset is set to 0 before read/write function call and after
 206:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * the call OD_IO.dataOffset is set back to mappedLength. */
 207:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     OD_IO_t OD_IO[CO_PDO_MAX_MAPPED_ENTRIES];
 208:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****   #if OD_FLAGS_PDO_SIZE > 0
 209:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Pointer to byte, which contains PDO flag bit from @ref OD_extension_t */
 210:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t *flagPDObyte[CO_PDO_MAX_MAPPED_ENTRIES];
 211:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Bitmask for the flagPDObyte */
 212:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t flagPDObitmask[CO_PDO_MAX_MAPPED_ENTRIES];
 213:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****   #endif
 214:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #else
 215:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /* Pointers to data objects inside OD, where PDO will be copied */
 216:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t *mapPointer[CO_PDO_MAX_SIZE];
 217:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****   #if OD_FLAGS_PDO_SIZE > 0
 218:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t *flagPDObyte[CO_PDO_MAX_SIZE];
 219:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t flagPDObitmask[CO_PDO_MAX_SIZE];
 220:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****   #endif
 221:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 222:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_FLAG_OD_DYNAMIC) || defined CO_DOXYGEN
 223:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** True for RPDO, false for TPDO */
 224:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     bool_t isRPDO;
 225:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_xPDO_init() */
 226:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     OD_t *OD;
 227:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_xPDO_init() */
 228:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint16_t CANdevIdx;
 229:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_xPDO_init() */
 230:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint16_t preDefinedCanId;
 231:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Currently configured CAN identifier */
 232:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint16_t configuredCanId;
 233:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Extension for OD object */
 234:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     OD_extension_t OD_communicationParam_ext;
 235:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Extension for OD object */
 236:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     OD_extension_t OD_mappingParam_extension;
 237:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 238:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** } CO_PDO_common_t;
 239:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 240:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 241:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /*******************************************************************************
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 37


 242:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *      R P D O
 243:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  ******************************************************************************/
 244:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE) || defined CO_DOXYGEN
 245:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 246:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Number of buffers for received CAN message for RPDO
 247:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 248:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE) || defined CO_DOXYGEN
 249:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_RPDO_CAN_BUFFERS_COUNT 2
 250:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #else
 251:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #define CO_RPDO_CAN_BUFFERS_COUNT 1
 252:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 253:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 254:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 255:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 256:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * RPDO object.
 257:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 258:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** typedef struct {
 259:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** PDO common properties, must be first element in this object */
 260:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_common_t PDO_common;
 261:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Variable indicates, if new PDO message received from CAN bus. */
 262:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     volatile void *CANrxNew[CO_RPDO_CAN_BUFFERS_COUNT];
 263:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** CO_PDO_MAX_SIZE data bytes of the received message. */
 264:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t CANrxData[CO_RPDO_CAN_BUFFERS_COUNT][CO_PDO_MAX_SIZE];
 265:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Indication of RPDO length errors, use with CO_PDO_receiveErrors_t */
 266:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t receiveError;
 267:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE) || defined CO_DOXYGEN
 268:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_RPDO_init() */
 269:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_SYNC_t *SYNC;
 270:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** True if transmissionType <= 240 */
 271:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     bool_t synchronous;
 272:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 273:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_RPDO_TIMERS_ENABLE) || defined CO_DOXYGEN
 274:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Maximum timeout time between received PDOs in microseconds. Configurable
 275:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * by OD variable RPDO communication parameter, event-timer. */
 276:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint32_t timeoutTime_us;
 277:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Timeout timer variable in microseconds */
 278:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint32_t timeoutTimer;
 279:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 280:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 281:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_RPDO_initCallbackPre() or NULL */
 282:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     void (*pFunctSignalPre)(void *object);
 283:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_RPDO_initCallbackPre() or NULL */
 284:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     void *functSignalObjectPre;
 285:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 286:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** } CO_RPDO_t;
 287:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 288:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 289:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 290:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Initialize RPDO object.
 291:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 292:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Function must be called in the end of the communication reset section, after
 293:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * all application initialization. Otherwise mapping to application OD variables
 294:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * will not be correct.
 295:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 296:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param RPDO This object will be initialized.
 297:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param OD Object Dictionary.
 298:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param em Emergency object.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 38


 299:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param SYNC SYNC object, may be NULL.
 300:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param preDefinedCanId CAN identifier from pre-defined connection set,
 301:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * including node-id for first four PDOs, or 0 otherwise, see @ref CO_PDO_CAN_ID
 302:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param OD_14xx_RPDOCommPar OD entry for 0x1400+ - "RPDO communication
 303:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * parameter", entry is required.
 304:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param OD_16xx_RPDOMapPar OD entry for 0x1600+ - "RPDO mapping parameter",
 305:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * entry is required.
 306:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param CANdevRx CAN device for PDO reception.
 307:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param CANdevRxIdx Index of receive buffer in the above CAN device.
 308:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param [out] errInfo Additional information in case of error, may be NULL.
 309:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 310:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @return #CO_ReturnError_t CO_ERROR_NO on success.
 311:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 312:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** CO_ReturnError_t CO_RPDO_init(CO_RPDO_t *RPDO,
 313:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               OD_t *OD,
 314:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               CO_EM_t *em,
 315:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE) || defined CO_DOXYGEN
 316:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               CO_SYNC_t *SYNC,
 317:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 318:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               uint16_t preDefinedCanId,
 319:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               OD_entry_t *OD_14xx_RPDOCommPar,
 320:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               OD_entry_t *OD_16xx_RPDOMapPar,
 321:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               CO_CANmodule_t *CANdevRx,
 322:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               uint16_t CANdevRxIdx,
 323:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               uint32_t *errInfo);
 324:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 325:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 326:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 327:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 328:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Initialize RPDO callback function.
 329:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 330:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Function initializes optional callback function, which should immediately
 331:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * start processing of CO_RPDO_process() function.
 332:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Callback is called after RPDO message is received from the CAN bus.
 333:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 334:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param RPDO This object.
 335:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param object Pointer to object, which will be passed to pFunctSignalPre().
 336:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param pFunctSignalPre Pointer to the callback function. Not called if NULL.
 337:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 338:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** void CO_RPDO_initCallbackPre(CO_RPDO_t *RPDO,
 339:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                              void *object,
 340:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                              void (*pFunctSignalPre)(void *object));
 341:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 342:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 343:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 344:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 345:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Process received PDO messages.
 346:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 347:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Function must be called cyclically in any NMT state. It copies data from RPDO
 348:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * to Object Dictionary variables if: new PDO receives and PDO is valid and NMT
 349:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * operating state is operational. Synchronous RPDOs are processed after next
 350:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * SYNC message.
 351:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 352:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param RPDO This object.
 353:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param timeDifference_us Time difference from previous function call.
 354:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param [out] timerNext_us info to OS - see CO_process().
 355:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param NMTisOperational True if this node is in NMT_OPERATIONAL state.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 39


 356:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param syncWas True, if CANopen SYNC message was just received or
 357:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * transmitted.
 358:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 359:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** void CO_RPDO_process(CO_RPDO_t *RPDO,
 360:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_RPDO_TIMERS_ENABLE) || defined CO_DOXYGEN
 361:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                      uint32_t timeDifference_us,
 362:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                      uint32_t *timerNext_us,
 363:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 364:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                      bool_t NMTisOperational,
 365:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                      bool_t syncWas);
 366:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif /* (CO_CONFIG_PDO) & CO_CONFIG_RPDO_ENABLE */
 367:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 368:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 369:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /*******************************************************************************
 370:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *      T P D O
 371:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  ******************************************************************************/
 372:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_TPDO_ENABLE) || defined CO_DOXYGEN
 373:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 374:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * TPDO object.
 375:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 376:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** typedef struct {
 377:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** PDO common properties, must be first element in this object */
 378:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_PDO_common_t PDO_common;
 379:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** CAN transmit buffer inside CANdev */
 380:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_CANtx_t *CANtxBuff;
 381:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Copy of the variable from object dictionary */
 382:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t transmissionType;
 383:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** If this flag is set and TPDO is event driven (transmission type is 0,
 384:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****      * 254 or 255), then PDO will be sent by CO_TPDO_process(). */
 385:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     bool_t sendRequest;
 386:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE) || defined CO_DOXYGEN
 387:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** From CO_TPDO_init() */
 388:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     CO_SYNC_t *SYNC;
 389:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Copy of the variable from object dictionary */
 390:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t syncStartValue;
 391:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** SYNC counter used for PDO sending */
 392:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint8_t syncCounter;
 393:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 394:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_TPDO_TIMERS_ENABLE) || defined CO_DOXYGEN
 395:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Inhibit time from object dictionary translated to microseconds */
 396:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint32_t inhibitTime_us;
 397:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Event time from object dictionary translated to microseconds */
 398:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint32_t eventTime_us;
 399:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Inhibit timer variable in microseconds */
 400:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint32_t inhibitTimer;
 401:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     /** Event timer variable in microseconds */
 402:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     uint32_t eventTimer;
 403:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 404:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** } CO_TPDO_t;
 405:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 406:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 407:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 408:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Initialize TPDO object.
 409:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 410:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Function must be called in the end of the communication reset section, after
 411:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * all application initialization. Otherwise mapping to application OD variables
 412:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * will not be correct.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 40


 413:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 414:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param TPDO This object will be initialized.
 415:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param OD Object Dictionary.
 416:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param em Emergency object.
 417:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param SYNC SYNC object, may be NULL.
 418:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param preDefinedCanId CAN identifier from pre-defined connection set,
 419:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * including node-id for first four PDOs, or 0 otherwise, see @ref CO_PDO_CAN_ID
 420:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param OD_18xx_TPDOCommPar OD entry for 0x1800+ - "TPDO communication
 421:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * parameter", entry is required.
 422:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param OD_1Axx_TPDOMapPar OD entry for 0x1A00+ - "TPDO mapping parameter",
 423:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * entry is required.
 424:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param CANdevTx CAN device used for PDO transmission.
 425:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param CANdevTxIdx Index of transmit buffer in the above CAN device.
 426:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param [out] errInfo Additional information in case of error, may be NULL.
 427:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 428:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @return #CO_ReturnError_t CO_ERROR_NO on success.
 429:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 430:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** CO_ReturnError_t CO_TPDO_init(CO_TPDO_t *TPDO,
 431:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               OD_t *OD,
 432:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               CO_EM_t *em,
 433:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #if ((CO_CONFIG_PDO) & CO_CONFIG_PDO_SYNC_ENABLE) || defined CO_DOXYGEN
 434:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               CO_SYNC_t *SYNC,
 435:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** #endif
 436:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               uint16_t preDefinedCanId,
 437:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               OD_entry_t *OD_18xx_TPDOCommPar,
 438:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               OD_entry_t *OD_1Axx_TPDOMapPar,
 439:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               CO_CANmodule_t *CANdevTx,
 440:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               uint16_t CANdevTxIdx,
 441:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****                               uint32_t *errInfo);
 442:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 443:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** 
 444:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** /**
 445:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * Request transmission of TPDO message.
 446:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 447:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * If TPDO transmission type is 0, 254 or 255, then TPDO will be sent by
 448:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @ref CO_TPDO_process() after inhibit timer expires. See also
 449:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @ref OD_requestTPDO() and @ref OD_TPDOtransmitted().
 450:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  *
 451:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  * @param TPDO TPDO object.
 452:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****  */
 453:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h **** static inline void CO_TPDOsendRequest(CO_TPDO_t *TPDO) {
 706              		.loc 3 453 20 is_stmt 1 view .LVU144
 707              	.LBB13:
 454:Middlewares/Third_Party/CANopenNode/301/CO_PDO.h ****     if (TPDO != NULL) TPDO->sendRequest = true;
 708              		.loc 3 454 5 view .LVU145
 709              		.loc 3 454 8 is_stmt 0 view .LVU146
 710 005a 13B1     		cbz	r3, .L42
 711              		.loc 3 454 23 is_stmt 1 view .LVU147
 712              		.loc 3 454 41 is_stmt 0 view .LVU148
 713 005c 0122     		movs	r2, #1
 714 005e C3F85021 		str	r2, [r3, #336]
 715              	.LVL55:
 716              	.L42:
 717              		.loc 3 454 41 view .LVU149
 718              	.LBE13:
 719              	.LBE12:
 300:Core/Src/freertos.c **** }
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 41


 720              		.loc 1 300 1 view .LVU150
 721 0062 04B0     		add	sp, sp, #16
 722              	.LCFI11:
 723              		.cfi_def_cfa_offset 16
 724              		@ sp needed
 725 0064 70BD     		pop	{r4, r5, r6, pc}
 726              	.L46:
 727 0066 00BF     		.align	2
 728              	.L45:
 729 0068 00000000 		.word	OD_PERSIST_COMM
 730 006c 00000000 		.word	OD
 731 0070 00000000 		.word	canopenNodeSTM32
 732              		.cfi_endproc
 733              	.LFE177:
 735              		.global	__aeabi_dcmpgt
 736              		.global	__aeabi_dcmpeq
 737              		.section	.text.PID_protection,"ax",%progbits
 738              		.align	1
 739              		.global	PID_protection
 740              		.syntax unified
 741              		.thumb
 742              		.thumb_func
 744              	PID_protection:
 745              	.LFB172:
 234:Core/Src/freertos.c ****   if (current_voltage * 2 > 4.2 || current_voltage * 2 < 1.8) // outof voltage range 4.4v ~ 1.6v
 746              		.loc 1 234 1 is_stmt 1 view -0
 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 750 0000 08B5     		push	{r3, lr}
 751              	.LCFI12:
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 3, -8
 754              		.cfi_offset 14, -4
 235:Core/Src/freertos.c ****   {
 755              		.loc 1 235 3 view .LVU152
 235:Core/Src/freertos.c ****   {
 756              		.loc 1 235 23 is_stmt 0 view .LVU153
 757 0002 614B     		ldr	r3, .L69+24
 758 0004 D3E90001 		ldrd	r0, [r3]
 759 0008 0246     		mov	r2, r0
 760 000a 0B46     		mov	r3, r1
 761 000c FFF7FEFF 		bl	__aeabi_dadd
 762              	.LVL56:
 235:Core/Src/freertos.c ****   {
 763              		.loc 1 235 6 view .LVU154
 764 0010 57A3     		adr	r3, .L69
 765 0012 D3E90023 		ldrd	r2, [r3]
 766 0016 FFF7FEFF 		bl	__aeabi_dcmpgt
 767              	.LVL57:
 768 001a 60B9     		cbnz	r0, .L48
 235:Core/Src/freertos.c ****   {
 769              		.loc 1 235 52 discriminator 1 view .LVU155
 770 001c 5A4B     		ldr	r3, .L69+24
 771 001e D3E90001 		ldrd	r0, [r3]
 772 0022 0246     		mov	r2, r0
 773 0024 0B46     		mov	r3, r1
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 42


 774 0026 FFF7FEFF 		bl	__aeabi_dadd
 775              	.LVL58:
 235:Core/Src/freertos.c ****   {
 776              		.loc 1 235 33 discriminator 1 view .LVU156
 777 002a 53A3     		adr	r3, .L69+8
 778 002c D3E90023 		ldrd	r2, [r3]
 779 0030 FFF7FEFF 		bl	__aeabi_dcmplt
 780              	.LVL59:
 781 0034 28B1     		cbz	r0, .L49
 782              	.L48:
 237:Core/Src/freertos.c ****     TPDO_tarnsmit(2, 99); // 2.reach limit
 783              		.loc 1 237 5 is_stmt 1 view .LVU157
 784 0036 FFF7FEFF 		bl	PID_Error_handler
 785              	.LVL60:
 238:Core/Src/freertos.c ****   }
 786              		.loc 1 238 5 view .LVU158
 787 003a 6321     		movs	r1, #99
 788 003c 0220     		movs	r0, #2
 789 003e FFF7FEFF 		bl	TPDO_tarnsmit
 790              	.LVL61:
 791              	.L49:
 240:Core/Src/freertos.c ****   {
 792              		.loc 1 240 3 view .LVU159
 240:Core/Src/freertos.c ****   {
 793              		.loc 1 240 8 is_stmt 0 view .LVU160
 794 0042 514B     		ldr	r3, .L69+24
 795 0044 D3E90001 		ldrd	r0, [r3]
 796 0048 504B     		ldr	r3, .L69+28
 797 004a D3E90023 		ldrd	r2, [r3]
 798 004e FFF7FEFF 		bl	__aeabi_dsub
 799              	.LVL62:
 800 0052 41EC100B 		vmov	d0, r0, r1
 801 0056 FFF7FEFF 		bl	abs
 802              	.LVL63:
 803 005a 51EC100B 		vmov	r0, r1, d0
 240:Core/Src/freertos.c ****   {
 804              		.loc 1 240 6 view .LVU161
 805 005e 0022     		movs	r2, #0
 806 0060 4B4B     		ldr	r3, .L69+32
 807 0062 FFF7FEFF 		bl	__aeabi_dcmpgt
 808              	.LVL64:
 809 0066 20B3     		cbz	r0, .L67
 810              	.L51:
 240:Core/Src/freertos.c ****   {
 811              		.loc 1 240 106 discriminator 3 view .LVU162
 812 0068 4A4B     		ldr	r3, .L69+36
 813 006a D3E90001 		ldrd	r0, [r3]
 814 006e 4A4B     		ldr	r3, .L69+40
 815 0070 D3E90023 		ldrd	r2, [r3]
 816 0074 FFF7FEFF 		bl	__aeabi_dsub
 817              	.LVL65:
 818 0078 41EC100B 		vmov	d0, r0, r1
 819 007c FFF7FEFF 		bl	abs
 820              	.LVL66:
 821 0080 51EC100B 		vmov	r0, r1, d0
 240:Core/Src/freertos.c ****   {
 822              		.loc 1 240 103 discriminator 3 view .LVU163
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 43


 823 0084 0022     		movs	r2, #0
 824 0086 454B     		ldr	r3, .L69+44
 825 0088 FFF7FEFF 		bl	__aeabi_dcmpgt
 826              	.LVL67:
 827 008c 30B3     		cbz	r0, .L52
 240:Core/Src/freertos.c ****   {
 828              		.loc 1 240 147 discriminator 4 view .LVU164
 829 008e 0022     		movs	r2, #0
 830 0090 0023     		movs	r3, #0
 831 0092 3E49     		ldr	r1, .L69+28
 832 0094 D1E90001 		ldrd	r0, [r1]
 833 0098 FFF7FEFF 		bl	__aeabi_dcmpeq
 834              	.LVL68:
 835 009c F0B9     		cbnz	r0, .L52
 240:Core/Src/freertos.c ****   {
 836              		.loc 1 240 172 discriminator 5 view .LVU165
 837 009e 404B     		ldr	r3, .L69+48
 838 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 839 00a2 DBB1     		cbz	r3, .L52
 242:Core/Src/freertos.c ****     TPDO_tarnsmit(3, 99); // 3. Angle reader abnormal
 840              		.loc 1 242 5 is_stmt 1 view .LVU166
 841 00a4 FFF7FEFF 		bl	PID_Error_handler
 842              	.LVL69:
 243:Core/Src/freertos.c ****   }
 843              		.loc 1 243 5 view .LVU167
 844 00a8 6321     		movs	r1, #99
 845 00aa 0320     		movs	r0, #3
 846 00ac FFF7FEFF 		bl	TPDO_tarnsmit
 847              	.LVL70:
 848 00b0 14E0     		b	.L52
 849              	.L67:
 240:Core/Src/freertos.c ****   {
 850              		.loc 1 240 55 is_stmt 0 discriminator 2 view .LVU168
 851 00b2 354B     		ldr	r3, .L69+24
 852 00b4 D3E90001 		ldrd	r0, [r3]
 853 00b8 344B     		ldr	r3, .L69+28
 854 00ba D3E90023 		ldrd	r2, [r3]
 855 00be FFF7FEFF 		bl	__aeabi_dsub
 856              	.LVL71:
 857 00c2 41EC100B 		vmov	d0, r0, r1
 858 00c6 FFF7FEFF 		bl	abs
 859              	.LVL72:
 860 00ca 51EC100B 		vmov	r0, r1, d0
 240:Core/Src/freertos.c ****   {
 861              		.loc 1 240 52 discriminator 2 view .LVU169
 862 00ce 2CA3     		adr	r3, .L69+16
 863 00d0 D3E90023 		ldrd	r2, [r3]
 864 00d4 FFF7FEFF 		bl	__aeabi_dcmplt
 865              	.LVL73:
 866 00d8 0028     		cmp	r0, #0
 867 00da C5D1     		bne	.L51
 868              	.L52:
 245:Core/Src/freertos.c ****   {
 869              		.loc 1 245 3 is_stmt 1 view .LVU170
 245:Core/Src/freertos.c ****   {
 870              		.loc 1 245 26 is_stmt 0 view .LVU171
 871 00dc 2D4B     		ldr	r3, .L69+36
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 44


 872 00de D3E90001 		ldrd	r0, [r3]
 873 00e2 2D4B     		ldr	r3, .L69+40
 874 00e4 D3E90023 		ldrd	r2, [r3]
 875 00e8 FFF7FEFF 		bl	__aeabi_dsub
 876              	.LVL74:
 245:Core/Src/freertos.c ****   {
 877              		.loc 1 245 7 view .LVU172
 878 00ec 2D4B     		ldr	r3, .L69+52
 879 00ee D3E90023 		ldrd	r2, [r3]
 880 00f2 FFF7FEFF 		bl	__aeabi_dsub
 881              	.LVL75:
 882 00f6 41EC100B 		vmov	d0, r0, r1
 883 00fa FFF7FEFF 		bl	abs
 884              	.LVL76:
 885 00fe 51EC100B 		vmov	r0, r1, d0
 245:Core/Src/freertos.c ****   {
 886              		.loc 1 245 6 view .LVU173
 887 0102 0022     		movs	r2, #0
 888 0104 4FF08043 		mov	r3, #1073741824
 889 0108 FFF7FEFF 		bl	__aeabi_dcmplt
 890              	.LVL77:
 891 010c E8B1     		cbz	r0, .L56
 245:Core/Src/freertos.c ****   {
 892              		.loc 1 245 69 discriminator 1 view .LVU174
 893 010e 214B     		ldr	r3, .L69+36
 894 0110 D3E90001 		ldrd	r0, [r3]
 895 0114 204B     		ldr	r3, .L69+40
 896 0116 D3E90023 		ldrd	r2, [r3]
 897 011a FFF7FEFF 		bl	__aeabi_dsub
 898              	.LVL78:
 899 011e 41EC100B 		vmov	d0, r0, r1
 900 0122 FFF7FEFF 		bl	abs
 901              	.LVL79:
 902 0126 51EC100B 		vmov	r0, r1, d0
 245:Core/Src/freertos.c ****   {
 903              		.loc 1 245 66 discriminator 1 view .LVU175
 904 012a 0022     		movs	r2, #0
 905 012c 1B4B     		ldr	r3, .L69+44
 906 012e FFF7FEFF 		bl	__aeabi_dcmpgt
 907              	.LVL80:
 908 0132 50B1     		cbz	r0, .L56
 245:Core/Src/freertos.c ****   {
 909              		.loc 1 245 110 discriminator 2 view .LVU176
 910 0134 0022     		movs	r2, #0
 911 0136 0023     		movs	r3, #0
 912 0138 1A49     		ldr	r1, .L69+52
 913 013a D1E90001 		ldrd	r0, [r1]
 914 013e FFF7FEFF 		bl	__aeabi_dcmpeq
 915              	.LVL81:
 916 0142 10B9     		cbnz	r0, .L56
 245:Core/Src/freertos.c ****   {
 917              		.loc 1 245 132 discriminator 3 view .LVU177
 918 0144 164B     		ldr	r3, .L69+48
 919 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 920 0148 4BB9     		cbnz	r3, .L68
 921              	.L56:
 252:Core/Src/freertos.c ****   }
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 45


 922              		.loc 1 252 5 is_stmt 1 view .LVU178
 923 014a 124B     		ldr	r3, .L69+36
 924 014c D3E90001 		ldrd	r0, [r3]
 925 0150 FFF7FEFF 		bl	__aeabi_d2iz
 926              	.LVL82:
 927 0154 01B2     		sxth	r1, r0
 928 0156 0020     		movs	r0, #0
 929 0158 FFF7FEFF 		bl	TPDO_tarnsmit
 930              	.LVL83:
 931              	.L47:
 254:Core/Src/freertos.c **** 
 932              		.loc 1 254 1 is_stmt 0 view .LVU179
 933 015c 08BD     		pop	{r3, pc}
 934              	.L68:
 247:Core/Src/freertos.c ****     TPDO_tarnsmit(4, 99); // 4. Error not decrease
 935              		.loc 1 247 5 is_stmt 1 view .LVU180
 936 015e FFF7FEFF 		bl	PID_Error_handler
 937              	.LVL84:
 248:Core/Src/freertos.c ****   }
 938              		.loc 1 248 5 view .LVU181
 939 0162 6321     		movs	r1, #99
 940 0164 0420     		movs	r0, #4
 941 0166 FFF7FEFF 		bl	TPDO_tarnsmit
 942              	.LVL85:
 943 016a F7E7     		b	.L47
 944              	.L70:
 945 016c AFF30080 		.align	3
 946              	.L69:
 947 0170 CDCCCCCC 		.word	-858993459
 948 0174 CCCC1040 		.word	1074842828
 949 0178 CDCCCCCC 		.word	-858993459
 950 017c CCCCFC3F 		.word	1073532108
 951 0180 B81E85EB 		.word	-343597384
 952 0184 51B89E3F 		.word	1067366481
 953 0188 00000000 		.word	.LANCHOR8
 954 018c 00000000 		.word	.LANCHOR9
 955 0190 0000F03F 		.word	1072693248
 956 0194 00000000 		.word	.LANCHOR5
 957 0198 00000000 		.word	.LANCHOR0
 958 019c 00001440 		.word	1075052544
 959 01a0 00000000 		.word	.LANCHOR11
 960 01a4 00000000 		.word	.LANCHOR10
 961              		.cfi_endproc
 962              	.LFE172:
 964              		.section	.text.StartPIDTask,"ax",%progbits
 965              		.align	1
 966              		.global	StartPIDTask
 967              		.syntax unified
 968              		.thumb
 969              		.thumb_func
 971              	StartPIDTask:
 972              	.LVL86:
 973              	.LFB169:
 152:Core/Src/freertos.c ****   /* USER CODE BEGIN StartPIDTask */
 974              		.loc 1 152 1 view -0
 975              		.cfi_startproc
 976              		@ Volatile: function does not return.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 46


 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 152:Core/Src/freertos.c ****   /* USER CODE BEGIN StartPIDTask */
 979              		.loc 1 152 1 is_stmt 0 view .LVU183
 980 0000 08B5     		push	{r3, lr}
 981              	.LCFI13:
 982              		.cfi_def_cfa_offset 8
 983              		.cfi_offset 3, -8
 984              		.cfi_offset 14, -4
 154:Core/Src/freertos.c ****   /* Infinite loop */
 985              		.loc 1 154 3 is_stmt 1 view .LVU184
 986 0002 FFF7FEFF 		bl	PID_init
 987              	.LVL87:
 154:Core/Src/freertos.c ****   /* Infinite loop */
 988              		.loc 1 154 3 is_stmt 0 view .LVU185
 989 0006 09E0     		b	.L74
 990              	.L76:
 165:Core/Src/freertos.c ****     }
 991              		.loc 1 165 7 is_stmt 1 view .LVU186
 165:Core/Src/freertos.c ****     }
 992              		.loc 1 165 21 is_stmt 0 view .LVU187
 993 0008 D4E90001 		ldrd	r0, [r4]
 994 000c FFF7FEFF 		bl	__aeabi_d2iz
 995              	.LVL88:
 165:Core/Src/freertos.c ****     }
 996              		.loc 1 165 18 view .LVU188
 997 0010 4FF08043 		mov	r3, #1073741824
 998 0014 9863     		str	r0, [r3, #56]
 999              	.L73:
 171:Core/Src/freertos.c ****   }
 1000              		.loc 1 171 5 is_stmt 1 view .LVU189
 1001 0016 6420     		movs	r0, #100
 1002 0018 FFF7FEFF 		bl	osDelay
 1003              	.LVL89:
 156:Core/Src/freertos.c ****   {
 1004              		.loc 1 156 9 view .LVU190
 1005              	.L74:
 156:Core/Src/freertos.c ****   {
 1006              		.loc 1 156 3 view .LVU191
 158:Core/Src/freertos.c ****     CW_CCW_deect();
 1007              		.loc 1 158 5 view .LVU192
 1008 001c FFF7FEFF 		bl	analyze_voltage
 1009              	.LVL90:
 159:Core/Src/freertos.c ****     PID_Compute(&TPID);
 1010              		.loc 1 159 5 view .LVU193
 1011 0020 FFF7FEFF 		bl	CW_CCW_deect
 1012              	.LVL91:
 160:Core/Src/freertos.c ****     CCR_value = abs(CCR_value);
 1013              		.loc 1 160 5 view .LVU194
 1014 0024 0A48     		ldr	r0, .L77
 1015 0026 FFF7FEFF 		bl	PID_Compute
 1016              	.LVL92:
 161:Core/Src/freertos.c ****     PID_protection();
 1017              		.loc 1 161 5 view .LVU195
 161:Core/Src/freertos.c ****     PID_protection();
 1018              		.loc 1 161 17 is_stmt 0 view .LVU196
 1019 002a 0A4C     		ldr	r4, .L77+4
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 47


 1020 002c 94ED000B 		vldr.64	d0, [r4]
 1021 0030 FFF7FEFF 		bl	abs
 1022              	.LVL93:
 161:Core/Src/freertos.c ****     PID_protection();
 1023              		.loc 1 161 15 view .LVU197
 1024 0034 84ED000B 		vstr.64	d0, [r4]
 162:Core/Src/freertos.c ****     if (PID_safe_lock == false)
 1025              		.loc 1 162 5 is_stmt 1 view .LVU198
 1026 0038 FFF7FEFF 		bl	PID_protection
 1027              	.LVL94:
 163:Core/Src/freertos.c ****     {
 1028              		.loc 1 163 5 view .LVU199
 163:Core/Src/freertos.c ****     {
 1029              		.loc 1 163 23 is_stmt 0 view .LVU200
 1030 003c 064B     		ldr	r3, .L77+8
 1031 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 163:Core/Src/freertos.c ****     {
 1032              		.loc 1 163 8 view .LVU201
 1033 0040 002B     		cmp	r3, #0
 1034 0042 E1D0     		beq	.L76
 169:Core/Src/freertos.c ****     }
 1035              		.loc 1 169 7 is_stmt 1 view .LVU202
 1036 0044 0821     		movs	r1, #8
 1037 0046 0548     		ldr	r0, .L77+12
 1038 0048 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 1039              	.LVL95:
 1040 004c E3E7     		b	.L73
 1041              	.L78:
 1042 004e 00BF     		.align	2
 1043              	.L77:
 1044 0050 00000000 		.word	.LANCHOR13
 1045 0054 00000000 		.word	.LANCHOR12
 1046 0058 00000000 		.word	.LANCHOR6
 1047 005c 00040048 		.word	1207960576
 1048              		.cfi_endproc
 1049              	.LFE169:
 1051              		.global	PID_safe_lock
 1052              		.global	protection_lock
 1053              		.global	previos_error
 1054              		.global	previous_voltage
 1055              		.global	voltage_counter
 1056              		.global	db_target_angle
 1057              		.global	current_angle
 1058              		.global	current_voltage
 1059              		.global	CCR_value
 1060              		.global	TPID
 1061              		.global	canopenTask_attributes
 1062              		.section	.rodata.str1.4,"aMS",%progbits,1
 1063              		.align	2
 1064              	.LC0:
 1065 0000 63616E6F 		.ascii	"canopenTask\000"
 1065      70656E54 
 1065      61736B00 
 1066              		.global	canopenTaskHandle
 1067              		.global	PIDTask_attributes
 1068              		.align	2
 1069              	.LC1:
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 48


 1070 000c 50494454 		.ascii	"PIDTask\000"
 1070      61736B00 
 1071              		.global	PIDTaskHandle
 1072              		.section	.bss.CCR_value,"aw",%nobits
 1073              		.align	3
 1074              		.set	.LANCHOR12,. + 0
 1077              	CCR_value:
 1078 0000 00000000 		.space	8
 1078      00000000 
 1079              		.section	.bss.PIDTaskHandle,"aw",%nobits
 1080              		.align	2
 1081              		.set	.LANCHOR2,. + 0
 1084              	PIDTaskHandle:
 1085 0000 00000000 		.space	4
 1086              		.section	.bss.PID_safe_lock,"aw",%nobits
 1087              		.set	.LANCHOR6,. + 0
 1090              	PID_safe_lock:
 1091 0000 00       		.space	1
 1092              		.section	.bss.TPID,"aw",%nobits
 1093              		.align	3
 1094              		.set	.LANCHOR13,. + 0
 1097              	TPID:
 1098 0000 00000000 		.space	112
 1098      00000000 
 1098      00000000 
 1098      00000000 
 1098      00000000 
 1099              		.section	.bss.canopenTaskHandle,"aw",%nobits
 1100              		.align	2
 1101              		.set	.LANCHOR4,. + 0
 1104              	canopenTaskHandle:
 1105 0000 00000000 		.space	4
 1106              		.section	.bss.current_angle,"aw",%nobits
 1107              		.align	3
 1108              		.set	.LANCHOR5,. + 0
 1111              	current_angle:
 1112 0000 00000000 		.space	8
 1112      00000000 
 1113              		.section	.bss.current_voltage,"aw",%nobits
 1114              		.align	3
 1115              		.set	.LANCHOR8,. + 0
 1118              	current_voltage:
 1119 0000 00000000 		.space	8
 1119      00000000 
 1120              		.section	.bss.db_target_angle,"aw",%nobits
 1121              		.align	3
 1122              		.set	.LANCHOR0,. + 0
 1125              	db_target_angle:
 1126 0000 00000000 		.space	8
 1126      00000000 
 1127              		.section	.bss.previos_error,"aw",%nobits
 1128              		.align	3
 1129              		.set	.LANCHOR10,. + 0
 1132              	previos_error:
 1133 0000 00000000 		.space	8
 1133      00000000 
 1134              		.section	.bss.previous_voltage,"aw",%nobits
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 49


 1135              		.align	3
 1136              		.set	.LANCHOR9,. + 0
 1139              	previous_voltage:
 1140 0000 00000000 		.space	8
 1140      00000000 
 1141              		.section	.bss.protection_lock,"aw",%nobits
 1142              		.set	.LANCHOR11,. + 0
 1145              	protection_lock:
 1146 0000 00       		.space	1
 1147              		.section	.bss.voltage_counter,"aw",%nobits
 1148              		.align	2
 1149              		.set	.LANCHOR7,. + 0
 1152              	voltage_counter:
 1153 0000 00000000 		.space	4
 1154              		.section	.rodata.PIDTask_attributes,"a"
 1155              		.align	2
 1156              		.set	.LANCHOR1,. + 0
 1159              	PIDTask_attributes:
 1160 0000 0C000000 		.word	.LC1
 1161 0004 00000000 		.space	16
 1161      00000000 
 1161      00000000 
 1161      00000000 
 1162 0014 00020000 		.word	512
 1163 0018 28000000 		.word	40
 1164 001c 00000000 		.space	8
 1164      00000000 
 1165              		.section	.rodata.canopenTask_attributes,"a"
 1166              		.align	2
 1167              		.set	.LANCHOR3,. + 0
 1170              	canopenTask_attributes:
 1171 0000 00000000 		.word	.LC0
 1172 0004 00000000 		.space	16
 1172      00000000 
 1172      00000000 
 1172      00000000 
 1173 0014 00020000 		.word	512
 1174 0018 30000000 		.word	48
 1175 001c 00000000 		.space	8
 1175      00000000 
 1176              		.text
 1177              	.Letext0:
 1178              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1179              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1180              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1181              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1182              		.file 8 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 1183              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1184              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1185              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1186              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1187              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 1188              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1189              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1190              		.file 16 "Middlewares/Third_Party/CANopenNode_STM32/CO_driver_target.h"
 1191              		.file 17 "Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h"
 1192              		.file 18 "Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.h"
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 50


 1193              		.file 19 "Middlewares/Third_Party/CANopenNode/301/CO_HBconsumer.h"
 1194              		.file 20 "Middlewares/Third_Party/CANopenNode/301/CO_SDOserver.h"
 1195              		.file 21 "Middlewares/Third_Party/CANopenNode/301/CO_SYNC.h"
 1196              		.file 22 "Middlewares/Third_Party/CANopenNode/301/CO_TIME.h"
 1197              		.file 23 "Middlewares/Third_Party/CANopenNode/303/CO_LEDs.h"
 1198              		.file 24 "Middlewares/Third_Party/CANopenNode/305/CO_LSS.h"
 1199              		.file 25 "Middlewares/Third_Party/CANopenNode/305/CO_LSSslave.h"
 1200              		.file 26 "Middlewares/Third_Party/CANopenNode/CANopen.h"
 1201              		.file 27 "Middlewares/Third_Party/CANopenNode_STM32/CO_app_STM32.h"
 1202              		.file 28 "Middlewares/Third_Party/CANopenNode_STM32/OD.h"
 1203              		.file 29 "Core/Inc/tim.h"
 1204              		.file 30 "Core/Inc/can.h"
 1205              		.file 31 "Core/Inc/pid.h"
 1206              		.file 32 "Core/Inc/adc.h"
 1207              		.file 33 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1208              		.file 34 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 51


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:21     .text.canopen_task:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:27     .text.canopen_task:00000000 canopen_task
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:121    .text.canopen_task:00000060 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:130    .text.MX_FREERTOS_Init:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:136    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:172    .text.MX_FREERTOS_Init:00000020 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:971    .text.StartPIDTask:00000000 StartPIDTask
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:183    .text.CW_CCW_deect:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:189    .text.CW_CCW_deect:00000000 CW_CCW_deect
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:231    .text.CW_CCW_deect:00000030 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:237    .text.PID_Error_handler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:243    .text.PID_Error_handler:00000000 PID_Error_handler
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:265    .text.PID_Error_handler:00000010 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:270    .text.abs:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:276    .text.abs:00000000 abs
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:322    .text.analyze_voltage:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:328    .text.analyze_voltage:00000000 analyze_voltage
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:468    .text.analyze_voltage:000000d0 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:487    .text.PID_init:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:493    .text.PID_init:00000000 PID_init
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:575    .text.PID_init:00000078 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:595    .text.TPDO_tarnsmit:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:601    .text.TPDO_tarnsmit:00000000 TPDO_tarnsmit
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:729    .text.TPDO_tarnsmit:00000068 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:738    .text.PID_protection:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:744    .text.PID_protection:00000000 PID_protection
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:947    .text.PID_protection:00000170 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:965    .text.StartPIDTask:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1044   .text.StartPIDTask:00000050 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1090   .bss.PID_safe_lock:00000000 PID_safe_lock
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1145   .bss.protection_lock:00000000 protection_lock
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1132   .bss.previos_error:00000000 previos_error
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1139   .bss.previous_voltage:00000000 previous_voltage
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1152   .bss.voltage_counter:00000000 voltage_counter
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1125   .bss.db_target_angle:00000000 db_target_angle
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1111   .bss.current_angle:00000000 current_angle
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1118   .bss.current_voltage:00000000 current_voltage
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1077   .bss.CCR_value:00000000 CCR_value
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1097   .bss.TPID:00000000 TPID
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1170   .rodata.canopenTask_attributes:00000000 canopenTask_attributes
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1063   .rodata.str1.4:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1104   .bss.canopenTaskHandle:00000000 canopenTaskHandle
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1159   .rodata.PIDTask_attributes:00000000 PIDTask_attributes
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1084   .bss.PIDTaskHandle:00000000 PIDTaskHandle
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1073   .bss.CCR_value:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1080   .bss.PIDTaskHandle:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1091   .bss.PID_safe_lock:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1093   .bss.TPID:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1100   .bss.canopenTaskHandle:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1107   .bss.current_angle:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1114   .bss.current_voltage:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1121   .bss.db_target_angle:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1128   .bss.previos_error:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1135   .bss.previous_voltage:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1146   .bss.protection_lock:00000000 $d
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s 			page 52


C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1148   .bss.voltage_counter:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1155   .rodata.PIDTask_attributes:00000000 $d
C:\Users\walker\AppData\Local\Temp\ccRO6RmT.s:1166   .rodata.canopenTask_attributes:00000000 $d

UNDEFINED SYMBOLS
__aeabi_i2d
canopen_app_init
vTaskDelay
canopen_app_process
hcan
MX_CAN_Init
htim17
OD_PERSIST_COMM
osThreadNew
__aeabi_dcmplt
HAL_GPIO_WritePin
__aeabi_dsub
__aeabi_ui2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2iz
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
hadc1
HAL_TIM_PWM_Start
osDelay
PID
PID_SetMode
PID_SetSampleTime
PID_SetOutputLimits
htim2
OD_find
OD_set_value
OD
canopenNodeSTM32
__aeabi_dcmpgt
__aeabi_dcmpeq
PID_Compute
HAL_GPIO_TogglePin
